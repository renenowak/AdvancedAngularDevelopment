{"version":3,"file":"applicationinsights-common.min.js","sources":["../dist-esm/Enums.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/ChannelController.js","../dist-esm/RequestResponseHeaders.js","../dist-esm/Telemetry/Common/DataSanitizer.js","../dist-esm/Util.js","../../../common/temp/node_modules/tslib/tslib.es6.js","../dist-esm/Interfaces/Contracts/Generated/Base.js","../dist-esm/Interfaces/Contracts/Generated/Data.js","../dist-esm/Interfaces/Contracts/Generated/Envelope.js","../dist-esm/Telemetry/Common/Envelope.js","../dist-esm/Interfaces/Contracts/Generated/Domain.js","../dist-esm/Interfaces/Contracts/Generated/EventData.js","../dist-esm/Telemetry/Event.js","../dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../dist-esm/Telemetry/Exception.js","../dist-esm/Interfaces/Contracts/Generated/MetricData.js","../dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../dist-esm/Telemetry/Common/DataPoint.js","../dist-esm/Telemetry/Metric.js","../dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../dist-esm/Telemetry/PageView.js","../dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../dist-esm/Telemetry/RemoteDependencyData.js","../dist-esm/Interfaces/Contracts/Generated/MessageData.js","../dist-esm/Telemetry/Trace.js","../dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../dist-esm/Telemetry/PageViewPerformance.js","../dist-esm/Telemetry/Common/Data.js","../dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../dist-esm/Interfaces/IConfig.js","../dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","../dist-esm/TelemetryItemCreator.js","../dist-esm/Interfaces/PartAExtensions.js","../dist-esm/applicationinsights-common.js","../dist-esm/Constants.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Type of storage to differentiate between local storage and session storage\r\n */\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\nexport var DistributedTracingModes;\r\n(function (DistributedTracingModes) {\r\n    /**\r\n     * (Default) Send Application Insights correlation headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI\"] = 0] = \"AI\";\r\n    /**\r\n     * Send both W3C Trace Context headers and back-compatibility Application Insights headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI_AND_W3C\"] = 1] = \"AI_AND_W3C\";\r\n    /**\r\n     * Send W3C Trace Context headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"W3C\"] = 2] = \"W3C\";\r\n})(DistributedTracingModes || (DistributedTracingModes = {}));\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n     * Creates a new GUID.\r\n     * @return {string} A GUID.\r\n     */\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n    FailedMonitorAjaxSetRequestHeader: 71,\r\n    SendBrowserInfoOnUserInit: 72\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","import { CoreUtils } from \"./CoreUtils\";\r\n\"use strict\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (config.isCookieUseDisabled) {\r\n            CoreUtils.disableCookies();\r\n        }\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nexport { ChannelController };\r\n//# sourceMappingURL=ChannelController.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar RequestHeaders = /** @class */ (function () {\r\n    function RequestHeaders() {\r\n    }\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    RequestHeaders.requestContextHeader = \"Request-Context\";\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    RequestHeaders.requestContextTargetKey = \"appId\";\r\n    /**\r\n     * Request-Context appId format\r\n     */\r\n    RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    RequestHeaders.requestIdHeader = \"Request-Id\";\r\n    /**\r\n     * W3C distributed tracing protocol header\r\n     */\r\n    RequestHeaders.traceParentHeader = \"traceparent\";\r\n    /**\r\n     * Sdk-Context header\r\n     * If this header passed with appId in content then appId will be returned back by the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n    /**\r\n     * String to pass in header for requesting appId back from the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n    RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n    return RequestHeaders;\r\n}());\r\nexport { RequestHeaders };\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        var nameTrunc;\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                nameTrunc = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return nameTrunc || name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        var valueTrunc;\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                valueTrunc = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return valueTrunc || value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        var messageTrunc;\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                messageTrunc = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return messageTrunc || message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        var exceptionTrunc;\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exceptionTrunc = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exceptionTrunc || exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        var inputTrunc;\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                inputTrunc = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return inputTrunc || input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\") {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * Max length allowed for custom names.\r\n     */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    Util.createDomEvent = function (eventName) {\r\n        var event = null;\r\n        if (typeof Event === \"function\") {\r\n            event = new Event(eventName);\r\n        }\r\n        else {\r\n            event = document.createEvent(\"Event\");\r\n            event.initEvent(eventName, true, true);\r\n        }\r\n        return event;\r\n    };\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid.toString(), uid.toString());\r\n            fail = storage.getItem(uid.toString()) !== uid.toString();\r\n            storage.removeItem(uid.toString());\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        CoreUtils.disableCookies();\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (CoreUtils._canUseCookies === undefined) {\r\n            CoreUtils._canUseCookies = false;\r\n            try {\r\n                CoreUtils._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return CoreUtils._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\") {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; // 5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * generate a random 32bit number (-0x80000000..0x7FFFFFFF).\r\n     */\r\n    Util.random32 = function () {\r\n        return (0x100000000 * Math.random()) | 0;\r\n    };\r\n    /**\r\n     * generate W3C trace id\r\n     */\r\n    Util.generateW3CId = function () {\r\n        var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n        // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n        var oct = \"\", tmp;\r\n        for (var a = 0; a < 4; a++) {\r\n            tmp = Util.random32();\r\n            oct +=\r\n                hexValues[tmp & 0xF] +\r\n                    hexValues[tmp >> 4 & 0xF] +\r\n                    hexValues[tmp >> 8 & 0xF] +\r\n                    hexValues[tmp >> 12 & 0xF] +\r\n                    hexValues[tmp >> 16 & 0xF] +\r\n                    hexValues[tmp >> 20 & 0xF] +\r\n                    hexValues[tmp >> 24 & 0xF] +\r\n                    hexValues[tmp >> 28 & 0xF];\r\n        }\r\n        // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n        var clockSequenceHi = hexValues[8 + (Math.random() * 4) | 0];\r\n        return oct.substr(0, 8) + oct.substr(9, 4) + \"4\" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') !== -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n     * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n     * happens in a script from other domain (cross origin, CORS).\r\n     */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n     * Returns string representation of an object suitable for diagnostics logging.\r\n     */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n     * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n     */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.getExtension = function (extensions, identifier) {\r\n        var extension = null;\r\n        var extIx = 0;\r\n        while (!extension && extIx < extensions.length) {\r\n            if (extensions[extIx] && extensions[extIx].identifier === identifier) {\r\n                extension = extensions[extIx];\r\n            }\r\n            extIx++;\r\n        }\r\n        return extension;\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations\r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : { host: UrlHelper.parseHost(url) }; // fill host field in the fallback case as that is the only externally required field from this fn\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    // Fallback method to grab host from url if document.createElement method is not available\r\n    UrlHelper.parseHost = function (url) {\r\n        var match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\r\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\r\n            return match[2];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n     * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n     */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var includedDomains = config && config.correlationHeaderDomains;\r\n        if (includedDomains) {\r\n            var matchExists_1;\r\n            includedDomains.forEach(function (domain) {\r\n                var regex = new RegExp(domain.toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n            });\r\n            if (!matchExists_1) {\r\n                return false;\r\n            }\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length === 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Combines target appId and target role name from response header.\r\n     */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets key from correlation response header\r\n     */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length === 2 && keyValue[0] === key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Data struct to contain only C section with custom fields.\r\n */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n            if (id) {\r\n                _this.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _this.exceptions = exception.exceptions;\r\n            _this.properties = exception.properties;\r\n            _this.measurements = exception.measurements;\r\n            if (exception.severityLevel) {\r\n                _this.severityLevel = exception.severityLevel;\r\n            }\r\n            if (exception.id) {\r\n                _this.id = exception.id;\r\n            }\r\n            if (exception.problemGroup) {\r\n                _this.problemGroup = exception.problemGroup;\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            _this.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n            if (!CoreUtils.isNullOrUndefined(exception.isManual)) {\r\n                _this.isManual = exception.isManual;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    Exception.CreateFromInterface = function (logger, exception) {\r\n        var exceptions = exception.exceptions\r\n            && exception.exceptions.map(function (ex) { return _ExceptionDetails.CreateFromInterface(logger, ex); });\r\n        var exceptionData = new Exception(logger, tslib_1.__assign({}, exception, { exceptions: exceptions }));\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a = this, exceptions = _a.exceptions, properties = _a.properties, measurements = _a.measurements, severityLevel = _a.severityLevel, ver = _a.ver, problemGroup = _a.problemGroup, id = _a.id, isManual = _a.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && exceptions.map(function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return {\r\n            ver: \"4.0\",\r\n            exceptions: exceptionDetailsInterface,\r\n            severityLevel: severityLevel,\r\n            properties: properties,\r\n            measurements: measurements,\r\n            problemGroup: problemGroup,\r\n            id: id,\r\n            isManual: isManual\r\n        };\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n            _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n            var stack = exception.stack;\r\n            _this.parsedStack = _ExceptionDetails.parseStack(stack);\r\n            _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        }\r\n        else {\r\n            _this.typeName = exception.typeName;\r\n            _this.message = exception.message;\r\n            _this.stack = exception.stack;\r\n            _this.parsedStack = exception.parsedStack;\r\n            _this.hasFullStack = exception.hasFullStack;\r\n        }\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var parsedStack = this.parsedStack instanceof Array\r\n            && this.parsedStack.map(function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = {\r\n            id: this.id,\r\n            outerId: this.outerId,\r\n            typeName: this.typeName,\r\n            message: this.message,\r\n            hasFullStack: this.hasFullStack,\r\n            stack: this.stack,\r\n            parsedStack: parsedStack || undefined\r\n        };\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception.parsedStack instanceof Array\r\n            && exception.parsedStack.map(function (frame) { return _StackFrame.CreateFromInterface(frame); }))\r\n            || exception.parsedStack;\r\n        var exceptionDetails = new _ExceptionDetails(logger, tslib_1.__assign({}, exception, { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    _ExceptionDetails.parseStack = function (stack) {\r\n        var parsedStack;\r\n        if (typeof stack === \"string\") {\r\n            var frames_1 = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames_1.length; i++) {\r\n                var frame = frames_1[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames_1[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(sourceFrame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default,\r\n        };\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util.trim(frame);\r\n            _this.fileName = \"\";\r\n            _this.line = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _this.level = sourceFrame.level;\r\n            _this.method = sourceFrame.method;\r\n            _this.assembly = sourceFrame.assembly;\r\n            _this.fileName = sourceFrame.fileName;\r\n            _this.line = sourceFrame.line;\r\n            _this.sizeInBytes = 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        return {\r\n            level: this.level,\r\n            method: this.method,\r\n            assembly: this.assembly,\r\n            fileName: this.fileName,\r\n            line: this.line\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util, AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = DataSanitizer.sanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _this.target = _this.target + \" | \" + correlationContext;\r\n        }\r\n        _this.name = DataSanitizer.sanitizeString(logger, dependencyFields.name);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _this.domProcessing = cs4BaseData.domProcessing;\r\n            _this.duration = cs4BaseData.duration;\r\n            _this.networkConnect = cs4BaseData.networkConnect;\r\n            _this.perfTotal = cs4BaseData.perfTotal;\r\n            _this.receivedResponse = cs4BaseData.receivedResponse;\r\n            _this.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.applicationBuild = \"ai.application.build\";\r\n        this.applicationTypeId = \"ai.application.typeId\";\r\n        this.applicationId = \"ai.application.applicationId\";\r\n        this.applicationLayer = \"ai.application.layer\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceIp = \"ai.device.ip\";\r\n        this.deviceLanguage = \"ai.device.language\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n        this.deviceNetwork = \"ai.device.network\";\r\n        this.deviceNetworkName = \"ai.device.networkName\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOS = \"ai.device.os\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n        this.deviceRoleName = \"ai.device.roleName\";\r\n        this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.deviceMachineName = \"ai.device.machineName\";\r\n        this.deviceVMName = \"ai.device.vmName\";\r\n        this.deviceBrowser = \"ai.device.browser\";\r\n        this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.locationCountry = \"ai.location.country\";\r\n        this.locationProvince = \"ai.location.province\";\r\n        this.locationCity = \"ai.location.city\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationRootId = \"ai.operation.rootId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.sessionIsNew = \"ai.session.isNew\";\r\n        this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userAgent = \"ai.user.userAgent\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userStoreRegion = \"ai.user.storeRegion\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n        this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n        this.cloudName = \"ai.cloud.name\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.cloudEnvironment = \"ai.cloud.environment\";\r\n        this.cloudLocation = \"ai.cloud.location\";\r\n        this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from \"./Util\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { CoreUtils } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item domain specific properties; part B\r\n     * @param baseType telemetry item type. ie PageViewData\r\n     * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties user defined custom properties; part C\r\n     * @param systemProperties system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n        envelopeName = DataSanitizer.sanitizeString(logger, envelopeName) || Util.NotSpecified;\r\n        if (CoreUtils.isNullOrUndefined(item) ||\r\n            CoreUtils.isNullOrUndefined(baseType) ||\r\n            CoreUtils.isNullOrUndefined(envelopeName)) {\r\n            throw Error(\"Input doesn't contain all required fields\");\r\n        }\r\n        var telemetryItem = {\r\n            name: envelopeName,\r\n            time: new Date().toISOString(),\r\n            iKey: \"\",\r\n            ext: systemProperties ? systemProperties : {},\r\n            tags: [],\r\n            data: {},\r\n            baseType: baseType,\r\n            baseData: item // Part B\r\n        };\r\n        // Part C\r\n        if (!CoreUtils.isNullOrUndefined(customProperties)) {\r\n            for (var prop in customProperties) {\r\n                if (customProperties.hasOwnProperty(prop)) {\r\n                    telemetryItem.data[prop] = customProperties[prop];\r\n                }\r\n            }\r\n        }\r\n        return telemetryItem;\r\n    };\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","import { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = \"user\";\r\n    Extensions.DeviceExt = \"device\";\r\n    Extensions.TraceExt = \"trace\";\r\n    Extensions.WebExt = \"web\";\r\n    Extensions.AppExt = \"app\";\r\n    Extensions.OSExt = \"os\";\r\n    Extensions.SessionExt = \"ses\";\r\n    Extensions.SDKExt = \"sdk\";\r\n    return Extensions;\r\n}());\r\nexport { Extensions };\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions } from './Interfaces/PartAExtensions';\r\nexport { DistributedTracingModes } from './Enums';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\n//# sourceMappingURL=Constants.js.map"],"names":["StorageType","FieldType","DistributedTracingModes","CoreUtils","isNullOrUndefined","input","disableCookies","_canUseCookies","newGuid","replace","GuidRegex","c","r","Math","random","toString","LoggingSeverity","ChannelController","prototype","processTelemetry","item","this","channelQueue","forEach","queues","length","Object","defineProperty","get","enumerable","configurable","initialize","config","core","extensions","invalidChannelIdentifier_1","_this","isCookieUseDisabled","Array","channels","queue","sort","a","b","priority","i","setNextPlugin","queueItem","identifier","Error","push","arr","plugin","_InternalMessageId","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","traceParentHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","DataSanitizer","sanitizeKeyAndAddUniqueness","logger","key","map","origLength","field","sanitizeKey","uniqueField","undefined","substring","MAX_NAME_LENGTH","padNumber","name","nameTrunc","trim","throwInternal","WARNING","sanitizeString","value","maxLength","valueTrunc","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","message","messageTrunc","MAX_MESSAGE_LENGTH","sanitizeException","exception","exceptionTrunc","MAX_EXCEPTION_LENGTH","sanitizeProperties","properties","tempProps","prop","JSON","stringify","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","inputTrunc","data","num","s","substr","str","Util","createDomEvent","eventName","event","Event","document","createEvent","initEvent","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","Date","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","canUseCookies","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","random32","generateW3CId","tmp","hexValues","oct","clockSequenceHi","isArray","obj","call","isError","isDate","toISOStringForIE8","date","toISOString","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","getExtension","extension","extIx","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","host","parseHost","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","match","CorrelationIdHelper","canIncludeCorrelationHeader","requestUrl","currentHost","disableCorrelationHeaders","requestHost","enableCorsCorrelation","matchExists_1","includedDomains","correlationHeaderDomains","regex","RegExp","test","excludedDomains","correlationHeaderExcludedDomains","getCorrelationContext","responseHeader","correlationId","getCorrelationContextValue","correlationIdPrefix","keyValues","keyValue","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","Base","_super","__assign","assign","t","n","arguments","apply","Data","tslib_1.__extends","Envelope","ver","sampleRate","tags","time","aiDataContract","Required","iKey","Hidden","Domain","EventData","envelopeType","dataType","Default","StackFrame","ExceptionData","exceptions","ExceptionDetails","hasFullStack","parsedStack","Exception","CreateFromInterface","ex","_ExceptionDetails","tslib_1.__assign","toInterface","_a","severityLevel","problemGroup","isManual","CreateSimpleException","typeName","assembly","fileName","details","line","frame","outerId","_StackFrame","parseStack","frames_1","level","totalSizeInBytes","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","splice","baseSize","sourceFrame","matches","DataPointType","MetricData","metrics","DataPoint","kind","Measurement","count","max","stdDev","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","GeneratedRemoteDependencyData","resultCode","requestAPI","correlationContext","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","MessageData","Trace","PageViewPerfData","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","SeverityLevel","AIData","baseType","baseData","ConfigurationManager","getConfig","configValue","extensionConfig","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","TelemetryItemCreator","envelopeName","customProperties","systemProperties","telemetryItem","ext","Extensions","UserExt","DeviceExt","TraceExt","WebExt","AppExt","OSExt","SessionExt","SDKExt","CtxTagKeys"],"mappings":"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"}