{"version":3,"file":"applicationinsights-channel-js.min.js","sources":["../../../common/temp/node_modules/tslib/tslib.es6.js","../../../shared/AppInsightsCommon/dist-esm/Enums.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/ChannelController.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/DiagnosticLogger.js","../../../shared/AppInsightsCommon/dist-esm/RequestResponseHeaders.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataSanitizer.js","../../../shared/AppInsightsCommon/dist-esm/Util.js","../../../shared/AppInsightsCommon/dist-esm/Constants.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Base.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Domain.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/EventData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Event.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Exception.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Metric.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageView.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Trace.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageViewPerformance.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/IConfig.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/PartAExtensions.js","../dist-esm/SendBuffer.js","../dist-esm/EnvelopeCreator.js","../dist-esm/Serializer.js","../dist-esm/Offline.js","../dist-esm/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js","../dist-esm/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js","../dist-esm/TelemetryProcessors/Sample.js","../dist-esm/Sender.js","../../../shared/AppInsightsCommon/dist-esm/applicationinsights-common.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Type of storage to differentiate between local storage and session storage\r\n */\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\nexport var DistributedTracingModes;\r\n(function (DistributedTracingModes) {\r\n    /**\r\n     * (Default) Send Application Insights correlation headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI\"] = 0] = \"AI\";\r\n    /**\r\n     * Send both W3C Trace Context headers and back-compatibility Application Insights headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI_AND_W3C\"] = 1] = \"AI_AND_W3C\";\r\n    /**\r\n     * Send W3C Trace Context headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"W3C\"] = 2] = \"W3C\";\r\n})(DistributedTracingModes || (DistributedTracingModes = {}));\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n     * Creates a new GUID.\r\n     * @return {string} A GUID.\r\n     */\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n    FailedMonitorAjaxSetRequestHeader: 71,\r\n    SendBrowserInfoOnUserInit: 72\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","import { CoreUtils } from \"./CoreUtils\";\r\n\"use strict\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (config.isCookieUseDisabled) {\r\n            CoreUtils.disableCookies();\r\n        }\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nexport { ChannelController };\r\n//# sourceMappingURL=ChannelController.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { _InternalMessageId, LoggingSeverity } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        this.messageId = msgId;\r\n        this.message =\r\n            (isUserAct ? _InternalLogMessage.AiUserActionablePrefix : _InternalLogMessage.AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var diagnosticText = (msg ? \" message:\" + _InternalLogMessage.sanitizeDiagnosticText(msg) : \"\") +\r\n            (properties ? \" props:\" + _InternalLogMessage.sanitizeDiagnosticText(JSON.stringify(properties)) : \"\");\r\n        this.message += diagnosticText;\r\n    }\r\n    _InternalLogMessage.sanitizeDiagnosticText = function (text) {\r\n        return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n    };\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    /**\r\n     * For user non actionable traces use AI Internal prefix.\r\n     */\r\n    _InternalLogMessage.AiNonUserActionablePrefix = \"AI (Internal): \";\r\n    /**\r\n     * Prefix of the traces in portal.\r\n     */\r\n    _InternalLogMessage.AiUserActionablePrefix = \"AI: \";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         *  Session storage key for the prefix for the key indicating message type already logged\r\n         */\r\n        this.AIInternalMessagePrefix = \"AITR_\";\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        this._messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        this._messageLogged = {};\r\n        /**\r\n         * When this is true the SDK will throw exceptions to aid in debugging.\r\n         */\r\n        this.enableDebugExceptions = function () { return false; };\r\n        /**\r\n         * 0: OFF (default)\r\n         * 1: CRITICAL\r\n         * 2: >= WARNING\r\n         */\r\n        this.consoleLoggingLevel = function () { return 0; };\r\n        /**\r\n         * 0: OFF\r\n         * 1: CRITICAL (default)\r\n         * 2: >= WARNING\r\n         */\r\n        this.telemetryLoggingLevel = function () { return 1; };\r\n        /**\r\n         * The maximum number of internal messages allowed to be sent per page view\r\n         */\r\n        this.maxInternalMessageLimit = function () { return 25; };\r\n        if (CoreUtils.isNullOrUndefined(config)) {\r\n            // TODO: Use default config\r\n            // config = AppInsightsCore.defaultConfig;\r\n            // For now, use defaults specified in DiagnosticLogger members;\r\n            return;\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelConsole)) {\r\n            this.consoleLoggingLevel = function () { return config.loggingLevelConsole; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelTelemetry)) {\r\n            this.telemetryLoggingLevel = function () { return config.loggingLevelTelemetry; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.maxMessageLimit)) {\r\n            this.maxInternalMessageLimit = function () { return config.maxMessageLimit; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.enableDebugExceptions)) {\r\n            this.enableDebugExceptions = function () { return config.enableDebugExceptions; };\r\n        }\r\n    }\r\n    /**\r\n     * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The log message.\r\n     */\r\n    DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n        if (this.enableDebugExceptions()) {\r\n            throw message;\r\n        }\r\n        else {\r\n            if (typeof (message) !== \"undefined\" && !!message) {\r\n                if (typeof (message.message) !== \"undefined\") {\r\n                    if (isUserAct) {\r\n                        // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                        var messageKey = +message.messageId;\r\n                        if (!this._messageLogged[messageKey] || this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                            this._messageLogged[messageKey] = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                        if (this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                        }\r\n                    }\r\n                    this.logInternalMessage(severity, message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This will write a warning to the console if possible\r\n     * @param message {string} - The warning message\r\n     */\r\n    DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n        if (typeof console !== \"undefined\" && !!console) {\r\n            if (typeof console.warn === \"function\") {\r\n                console.warn(message);\r\n            }\r\n            else if (typeof console.log === \"function\") {\r\n                console.log(message);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Resets the internal message count\r\n     */\r\n    DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n        this._messageCount = 0;\r\n        this._messageLogged = {};\r\n    };\r\n    /**\r\n     * Logs a message to the internal queue.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The message to log.\r\n     */\r\n    DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n        if (this._areInternalMessagesThrottled()) {\r\n            return;\r\n        }\r\n        // check if this message type was already logged for this session and if so, don't log it again\r\n        var logMessage = true;\r\n        var messageKey = this.AIInternalMessagePrefix + message.messageId;\r\n        // if the session storage is not available, limit to only one message type per page view\r\n        if (this._messageLogged[messageKey]) {\r\n            logMessage = false;\r\n        }\r\n        else {\r\n            this._messageLogged[messageKey] = true;\r\n        }\r\n        if (logMessage) {\r\n            // Push the event in the internal queue\r\n            if (severity <= this.telemetryLoggingLevel()) {\r\n                this.queue.push(message);\r\n                this._messageCount++;\r\n            }\r\n            // When throttle limit reached, send a special event\r\n            if (this._messageCount === this.maxInternalMessageLimit()) {\r\n                var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                var throttleMessage = new _InternalLogMessage(_InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                this.queue.push(throttleMessage);\r\n                this.warnToConsole(throttleLimitMessage);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Indicates whether the internal events are throttled\r\n     */\r\n    DiagnosticLogger.prototype._areInternalMessagesThrottled = function () {\r\n        return this._messageCount >= this.maxInternalMessageLimit();\r\n    };\r\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\n//# sourceMappingURL=DiagnosticLogger.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar RequestHeaders = /** @class */ (function () {\r\n    function RequestHeaders() {\r\n    }\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    RequestHeaders.requestContextHeader = \"Request-Context\";\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    RequestHeaders.requestContextTargetKey = \"appId\";\r\n    /**\r\n     * Request-Context appId format\r\n     */\r\n    RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    RequestHeaders.requestIdHeader = \"Request-Id\";\r\n    /**\r\n     * W3C distributed tracing protocol header\r\n     */\r\n    RequestHeaders.traceParentHeader = \"traceparent\";\r\n    /**\r\n     * Sdk-Context header\r\n     * If this header passed with appId in content then appId will be returned back by the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n    /**\r\n     * String to pass in header for requesting appId back from the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n    RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n    return RequestHeaders;\r\n}());\r\nexport { RequestHeaders };\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        var nameTrunc;\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                nameTrunc = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return nameTrunc || name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        var valueTrunc;\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                valueTrunc = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return valueTrunc || value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        var messageTrunc;\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                messageTrunc = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return messageTrunc || message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        var exceptionTrunc;\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exceptionTrunc = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exceptionTrunc || exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        var inputTrunc;\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                inputTrunc = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return inputTrunc || input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\") {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * Max length allowed for custom names.\r\n     */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    Util.createDomEvent = function (eventName) {\r\n        var event = null;\r\n        if (typeof Event === \"function\") {\r\n            event = new Event(eventName);\r\n        }\r\n        else {\r\n            event = document.createEvent(\"Event\");\r\n            event.initEvent(eventName, true, true);\r\n        }\r\n        return event;\r\n    };\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid.toString(), uid.toString());\r\n            fail = storage.getItem(uid.toString()) !== uid.toString();\r\n            storage.removeItem(uid.toString());\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        CoreUtils.disableCookies();\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (CoreUtils._canUseCookies === undefined) {\r\n            CoreUtils._canUseCookies = false;\r\n            try {\r\n                CoreUtils._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return CoreUtils._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\") {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; // 5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * generate a random 32bit number (-0x80000000..0x7FFFFFFF).\r\n     */\r\n    Util.random32 = function () {\r\n        return (0x100000000 * Math.random()) | 0;\r\n    };\r\n    /**\r\n     * generate W3C trace id\r\n     */\r\n    Util.generateW3CId = function () {\r\n        var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n        // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n        var oct = \"\", tmp;\r\n        for (var a = 0; a < 4; a++) {\r\n            tmp = Util.random32();\r\n            oct +=\r\n                hexValues[tmp & 0xF] +\r\n                    hexValues[tmp >> 4 & 0xF] +\r\n                    hexValues[tmp >> 8 & 0xF] +\r\n                    hexValues[tmp >> 12 & 0xF] +\r\n                    hexValues[tmp >> 16 & 0xF] +\r\n                    hexValues[tmp >> 20 & 0xF] +\r\n                    hexValues[tmp >> 24 & 0xF] +\r\n                    hexValues[tmp >> 28 & 0xF];\r\n        }\r\n        // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n        var clockSequenceHi = hexValues[8 + (Math.random() * 4) | 0];\r\n        return oct.substr(0, 8) + oct.substr(9, 4) + \"4\" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') !== -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n     * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n     * happens in a script from other domain (cross origin, CORS).\r\n     */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n     * Returns string representation of an object suitable for diagnostics logging.\r\n     */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n     * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n     */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.getExtension = function (extensions, identifier) {\r\n        var extension = null;\r\n        var extIx = 0;\r\n        while (!extension && extIx < extensions.length) {\r\n            if (extensions[extIx] && extensions[extIx].identifier === identifier) {\r\n                extension = extensions[extIx];\r\n            }\r\n            extIx++;\r\n        }\r\n        return extension;\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations\r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : { host: UrlHelper.parseHost(url) }; // fill host field in the fallback case as that is the only externally required field from this fn\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    // Fallback method to grab host from url if document.createElement method is not available\r\n    UrlHelper.parseHost = function (url) {\r\n        var match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\r\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\r\n            return match[2];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n     * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n     */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var includedDomains = config && config.correlationHeaderDomains;\r\n        if (includedDomains) {\r\n            var matchExists_1;\r\n            includedDomains.forEach(function (domain) {\r\n                var regex = new RegExp(domain.toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n            });\r\n            if (!matchExists_1) {\r\n                return false;\r\n            }\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length === 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Combines target appId and target role name from response header.\r\n     */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets key from correlation response header\r\n     */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length === 2 && keyValue[0] === key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\n//# sourceMappingURL=Constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Data struct to contain only C section with custom fields.\r\n */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n            if (id) {\r\n                _this.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _this.exceptions = exception.exceptions;\r\n            _this.properties = exception.properties;\r\n            _this.measurements = exception.measurements;\r\n            if (exception.severityLevel) {\r\n                _this.severityLevel = exception.severityLevel;\r\n            }\r\n            if (exception.id) {\r\n                _this.id = exception.id;\r\n            }\r\n            if (exception.problemGroup) {\r\n                _this.problemGroup = exception.problemGroup;\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            _this.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n            if (!CoreUtils.isNullOrUndefined(exception.isManual)) {\r\n                _this.isManual = exception.isManual;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    Exception.CreateFromInterface = function (logger, exception) {\r\n        var exceptions = exception.exceptions\r\n            && exception.exceptions.map(function (ex) { return _ExceptionDetails.CreateFromInterface(logger, ex); });\r\n        var exceptionData = new Exception(logger, tslib_1.__assign({}, exception, { exceptions: exceptions }));\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a = this, exceptions = _a.exceptions, properties = _a.properties, measurements = _a.measurements, severityLevel = _a.severityLevel, ver = _a.ver, problemGroup = _a.problemGroup, id = _a.id, isManual = _a.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && exceptions.map(function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return {\r\n            ver: \"4.0\",\r\n            exceptions: exceptionDetailsInterface,\r\n            severityLevel: severityLevel,\r\n            properties: properties,\r\n            measurements: measurements,\r\n            problemGroup: problemGroup,\r\n            id: id,\r\n            isManual: isManual\r\n        };\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n            _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n            var stack = exception.stack;\r\n            _this.parsedStack = _ExceptionDetails.parseStack(stack);\r\n            _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        }\r\n        else {\r\n            _this.typeName = exception.typeName;\r\n            _this.message = exception.message;\r\n            _this.stack = exception.stack;\r\n            _this.parsedStack = exception.parsedStack;\r\n            _this.hasFullStack = exception.hasFullStack;\r\n        }\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var parsedStack = this.parsedStack instanceof Array\r\n            && this.parsedStack.map(function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = {\r\n            id: this.id,\r\n            outerId: this.outerId,\r\n            typeName: this.typeName,\r\n            message: this.message,\r\n            hasFullStack: this.hasFullStack,\r\n            stack: this.stack,\r\n            parsedStack: parsedStack || undefined\r\n        };\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception.parsedStack instanceof Array\r\n            && exception.parsedStack.map(function (frame) { return _StackFrame.CreateFromInterface(frame); }))\r\n            || exception.parsedStack;\r\n        var exceptionDetails = new _ExceptionDetails(logger, tslib_1.__assign({}, exception, { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    _ExceptionDetails.parseStack = function (stack) {\r\n        var parsedStack;\r\n        if (typeof stack === \"string\") {\r\n            var frames_1 = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames_1.length; i++) {\r\n                var frame = frames_1[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames_1[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(sourceFrame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default,\r\n        };\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util.trim(frame);\r\n            _this.fileName = \"\";\r\n            _this.line = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _this.level = sourceFrame.level;\r\n            _this.method = sourceFrame.method;\r\n            _this.assembly = sourceFrame.assembly;\r\n            _this.fileName = sourceFrame.fileName;\r\n            _this.line = sourceFrame.line;\r\n            _this.sizeInBytes = 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        return {\r\n            level: this.level,\r\n            method: this.method,\r\n            assembly: this.assembly,\r\n            fileName: this.fileName,\r\n            line: this.line\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util, AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = DataSanitizer.sanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _this.target = _this.target + \" | \" + correlationContext;\r\n        }\r\n        _this.name = DataSanitizer.sanitizeString(logger, dependencyFields.name);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _this.domProcessing = cs4BaseData.domProcessing;\r\n            _this.duration = cs4BaseData.duration;\r\n            _this.networkConnect = cs4BaseData.networkConnect;\r\n            _this.perfTotal = cs4BaseData.perfTotal;\r\n            _this.receivedResponse = cs4BaseData.receivedResponse;\r\n            _this.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.applicationBuild = \"ai.application.build\";\r\n        this.applicationTypeId = \"ai.application.typeId\";\r\n        this.applicationId = \"ai.application.applicationId\";\r\n        this.applicationLayer = \"ai.application.layer\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceIp = \"ai.device.ip\";\r\n        this.deviceLanguage = \"ai.device.language\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n        this.deviceNetwork = \"ai.device.network\";\r\n        this.deviceNetworkName = \"ai.device.networkName\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOS = \"ai.device.os\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n        this.deviceRoleName = \"ai.device.roleName\";\r\n        this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.deviceMachineName = \"ai.device.machineName\";\r\n        this.deviceVMName = \"ai.device.vmName\";\r\n        this.deviceBrowser = \"ai.device.browser\";\r\n        this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.locationCountry = \"ai.location.country\";\r\n        this.locationProvince = \"ai.location.province\";\r\n        this.locationCity = \"ai.location.city\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationRootId = \"ai.operation.rootId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.sessionIsNew = \"ai.session.isNew\";\r\n        this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userAgent = \"ai.user.userAgent\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userStoreRegion = \"ai.user.storeRegion\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n        this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n        this.cloudName = \"ai.cloud.name\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.cloudEnvironment = \"ai.cloud.environment\";\r\n        this.cloudLocation = \"ai.cloud.location\";\r\n        this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","import { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = \"user\";\r\n    Extensions.DeviceExt = \"device\";\r\n    Extensions.TraceExt = \"trace\";\r\n    Extensions.WebExt = \"web\";\r\n    Extensions.AppExt = \"app\";\r\n    Extensions.OSExt = \"os\";\r\n    Extensions.SessionExt = \"ses\";\r\n    Extensions.SDKExt = \"sdk\";\r\n    return Extensions;\r\n}());\r\nexport { Extensions };\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","import { Util } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function () {\r\n    function ArraySendBuffer(config) {\r\n        this._config = config;\r\n        this._buffer = [];\r\n    }\r\n    ArraySendBuffer.prototype.enqueue = function (payload) {\r\n        this._buffer.push(payload);\r\n    };\r\n    ArraySendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    ArraySendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n    };\r\n    ArraySendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    ArraySendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    ArraySendBuffer.prototype.markAsSent = function (payload) {\r\n        this.clear();\r\n    };\r\n    ArraySendBuffer.prototype.clearSent = function (payload) {\r\n        // not supported\r\n    };\r\n    return ArraySendBuffer;\r\n}());\r\nexport { ArraySendBuffer };\r\n/*\r\n * Session storege buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function () {\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        this._bufferFullMessageSent = false;\r\n        this._logger = logger;\r\n        this._config = config;\r\n        var bufferItems = this.getBuffer(SessionStorageSendBuffer.BUFFER_KEY);\r\n        var notDeliveredItems = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        this._buffer = bufferItems.concat(notDeliveredItems);\r\n        // If the buffer has too many items, drop items from the end.\r\n        if (this._buffer.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            this._buffer.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n        }\r\n        // update DataLossAnalyzer with the number of recovered items\r\n        // Uncomment if you want to use DataLossanalyzer\r\n        // DataLossAnalyzer.itemsRestoredFromSessionBuffer = this._buffer.length;\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    }\r\n    SessionStorageSendBuffer.prototype.enqueue = function (payload) {\r\n        if (this._buffer.length >= SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            // sent internal log only once per page view\r\n            if (!this._bufferFullMessageSent) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionStorageBufferFull, \"Maximum buffer size reached: \" + this._buffer.length, true);\r\n                this._bufferFullMessageSent = true;\r\n            }\r\n            return;\r\n        }\r\n        this._buffer.push(payload);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    };\r\n    SessionStorageSendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    SessionStorageSendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this._bufferFullMessageSent = false;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    SessionStorageSendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    SessionStorageSendBuffer.prototype.markAsSent = function (payload) {\r\n        this._buffer = this.removePayloadsFromBuffer(payload, this._buffer);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        if (sentElements instanceof Array && payload instanceof Array) {\r\n            sentElements = sentElements.concat(payload);\r\n            if (sentElements.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SessionStorageBufferFull, \"Sent buffer reached its maximum size: \" + sentElements.length, true);\r\n                sentElements.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n            }\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.prototype.clearSent = function (payload) {\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        sentElements = this.removePayloadsFromBuffer(payload, sentElements);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n    };\r\n    SessionStorageSendBuffer.prototype.removePayloadsFromBuffer = function (payloads, buffer) {\r\n        var remaining = [];\r\n        for (var i in buffer) {\r\n            var contains = false;\r\n            for (var j in payloads) {\r\n                if (payloads[j] === buffer[i]) {\r\n                    contains = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!contains) {\r\n                remaining.push(buffer[i]);\r\n            }\r\n        }\r\n        ;\r\n        return remaining;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getBuffer = function (key) {\r\n        var prefixedKey = key;\r\n        try {\r\n            prefixedKey = this._config.namePrefix && this._config.namePrefix() ? this._config.namePrefix() + \"_\" + prefixedKey : prefixedKey;\r\n            var bufferJson = Util.getSessionStorage(this._logger, prefixedKey);\r\n            if (bufferJson) {\r\n                var buffer = JSON.parse(bufferJson);\r\n                if (buffer) {\r\n                    return buffer;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToRestoreStorageBuffer, \" storage key: \" + prefixedKey + \", \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        return [];\r\n    };\r\n    SessionStorageSendBuffer.prototype.setBuffer = function (key, buffer) {\r\n        var prefixedKey = key;\r\n        try {\r\n            prefixedKey = this._config.namePrefix && this._config.namePrefix() ? this._config.namePrefix() + \"_\" + prefixedKey : prefixedKey;\r\n            var bufferJson = JSON.stringify(buffer);\r\n            Util.setSessionStorage(this._logger, prefixedKey, bufferJson);\r\n        }\r\n        catch (e) {\r\n            // if there was an error, clear the buffer\r\n            // telemetry is stored in the _buffer array so we won't loose any items\r\n            Util.setSessionStorage(this._logger, prefixedKey, JSON.stringify([]));\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedToSetStorageBuffer, \" storage key: \" + prefixedKey + \", \" + Util.getExceptionName(e) + \". Buffer cleared\", { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\";\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\";\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.\r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}());\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Data, Envelope, RemoteDependencyData, Event, Exception, Metric, PageView, Trace, PageViewPerformance, CtxTagKeys, HttpMethod } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar baseType = \"baseType\";\r\nvar baseData = \"baseData\";\r\nvar EnvelopeCreator = /** @class */ (function () {\r\n    function EnvelopeCreator() {\r\n    }\r\n    EnvelopeCreator.extractProperties = function (data) {\r\n        var customProperties = null;\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                var value = data[key];\r\n                if (typeof value !== \"number\") {\r\n                    if (!customProperties) {\r\n                        customProperties = {};\r\n                    }\r\n                    customProperties[key] = value;\r\n                }\r\n            }\r\n        }\r\n        return customProperties;\r\n    };\r\n    EnvelopeCreator.extractPropsAndMeasurements = function (data, properties, measurements) {\r\n        if (!CoreUtils.isNullOrUndefined(data)) {\r\n            for (var key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    var value = data[key];\r\n                    if (typeof value === \"number\") {\r\n                        measurements[key] = value;\r\n                    }\r\n                    else if (typeof value === \"string\") {\r\n                        properties[key] = value;\r\n                    }\r\n                    else {\r\n                        properties[key] = JSON.stringify(value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\n    EnvelopeCreator.createEnvelope = function (logger, envelopeType, telemetryItem, data) {\r\n        var envelope = new Envelope(logger, data, envelopeType);\r\n        envelope.iKey = telemetryItem.iKey;\r\n        var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n        envelope.name = envelope.name.replace(\"{0}\", iKeyNoDashes);\r\n        // extract all extensions from ctx\r\n        EnvelopeCreator.extractPartAExtensions(telemetryItem, envelope);\r\n        // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n        if (!telemetryItem.tags) {\r\n            telemetryItem.tags = [];\r\n        }\r\n        return envelope;\r\n    };\r\n    /*\r\n     * Maps Part A data from CS 4.0\r\n     */\r\n    EnvelopeCreator.extractPartAExtensions = function (item, env) {\r\n        // todo: switch to keys from common in this method\r\n        if (!env.tags) {\r\n            env.tags = {};\r\n        }\r\n        if (!item.ext) {\r\n            item.ext = {};\r\n        }\r\n        if (!item.tags) {\r\n            item.tags = [];\r\n        }\r\n        if (item.ext.user) {\r\n            if (item.ext.user.authId) {\r\n                env.tags[CtxTagKeys.userAuthUserId] = item.ext.user.authId;\r\n            }\r\n            var userId = item.ext.user.id || item.ext.user.localId;\r\n            if (userId) {\r\n                env.tags[CtxTagKeys.userId] = userId;\r\n            }\r\n        }\r\n        if (item.ext.app) {\r\n            if (item.ext.app.sesId) {\r\n                env.tags[CtxTagKeys.sessionId] = item.ext.app.sesId;\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.id || item.ext.device.localId) {\r\n                env.tags[CtxTagKeys.deviceId] = item.ext.device.id || item.ext.device.localId;\r\n            }\r\n            if (item.ext.device.deviceClass) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceClass;\r\n            }\r\n            if (item.ext.device.ip) {\r\n                env.tags[CtxTagKeys.deviceIp] = item.ext.device.ip;\r\n            }\r\n        }\r\n        if (item.ext.web) {\r\n            var web = item.ext.web;\r\n            if (web.browserLang) {\r\n                env.tags[CtxTagKeys.deviceLanguage] = web.browserLang;\r\n            }\r\n            if (web.browserVer) {\r\n                env.tags[CtxTagKeys.deviceBrowserVersion] = web.browserVer;\r\n            }\r\n            if (web.browser) {\r\n                env.tags[CtxTagKeys.deviceBrowser] = web.browser;\r\n            }\r\n            env.data = env.data || {};\r\n            env.data.baseData = env.data.baseData || {};\r\n            env.data.baseData.properties = env.data.baseData.properties || {};\r\n            if (web.domain) {\r\n                env.data.baseData.properties['domain'] = web.domain;\r\n            }\r\n            if (web.isManual) {\r\n                env.data.baseData.properties['isManual'] = web.isManual.toString();\r\n            }\r\n            if (web.screenRes) {\r\n                env.data.baseData.properties['screenRes'] = web.screenRes;\r\n            }\r\n            if (web.userConsent) {\r\n                env.data.baseData.properties['userConsent'] = web.userConsent.toString();\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.model) {\r\n                env.tags[CtxTagKeys.deviceModel] = item.ext.device.model;\r\n            }\r\n        }\r\n        if (item.ext.os && item.ext.os.name) {\r\n            env.tags[CtxTagKeys.deviceOS] = item.ext.os.name;\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.deviceType) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceType;\r\n            }\r\n        }\r\n        // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n        if (item.ext.trace) {\r\n            if (item.ext.trace.parentID) {\r\n                env.tags[CtxTagKeys.operationParentId] = item.ext.trace.parentID;\r\n            }\r\n            if (item.ext.trace.name) {\r\n                env.tags[CtxTagKeys.operationName] = item.ext.trace.name;\r\n            }\r\n            if (item.ext.trace.traceID) {\r\n                env.tags[CtxTagKeys.operationId] = item.ext.trace.traceID;\r\n            }\r\n        }\r\n        // Sample 4.0 schema\r\n        //  {\r\n        //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n        //     \"name\" : \"MetricWithNamespace\",\r\n        //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n        //     \"ext\": {  \"cloud\": {\r\n        //          \"role\": \"WATSON3\",\r\n        //          \"roleInstance\": \"CO4AEAP00000260\"\r\n        //      },\r\n        //      \"device\": {}, \"correlation\": {} },\r\n        //      \"tags\": [\r\n        //        { \"amazon.region\" : \"east2\" },\r\n        //        { \"os.expid\" : \"wp:02df239\" }\r\n        //     ]\r\n        //   }\r\n        var tgs = {};\r\n        var _loop_1 = function (i) {\r\n            var tg = item.tags[i];\r\n            // Object.keys returns an array of keys\r\n            Object.keys(tg).forEach(function (key) {\r\n                tgs[key] = tg[key];\r\n            });\r\n            item.tags.splice(i, 1);\r\n        };\r\n        // deals with tags.push({object})\r\n        for (var i = item.tags.length - 1; i >= 0; i--) {\r\n            _loop_1(i);\r\n        }\r\n        // deals with tags[key]=value\r\n        for (var tg in item.tags) {\r\n            tgs[tg] = item.tags[tg];\r\n        }\r\n        env.tags = tslib_1.__assign({}, env.tags, tgs);\r\n        if (!env.tags[CtxTagKeys.internalSdkVersion]) {\r\n            // Append a version in case it is not already set\r\n            env.tags[CtxTagKeys.internalSdkVersion] = \"javascript:\" + EnvelopeCreator.Version;\r\n        }\r\n    };\r\n    EnvelopeCreator.Version = \"2.2.3\";\r\n    return EnvelopeCreator;\r\n}());\r\nexport { EnvelopeCreator };\r\nvar DependencyEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DependencyEnvelopeCreator, _super);\r\n    function DependencyEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DependencyEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customMeasurements = telemetryItem.baseData.measurements || {};\r\n        var customProperties = telemetryItem.baseData.properties || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var bd = telemetryItem.baseData;\r\n        if (CoreUtils.isNullOrUndefined(bd)) {\r\n            logger.warnToConsole(\"Invalid input for dependency data\");\r\n            return null;\r\n        }\r\n        var id = bd.id;\r\n        var absoluteUrl = bd.target;\r\n        var command = bd.name;\r\n        var duration = bd.duration;\r\n        var success = bd.success;\r\n        var resultCode = bd.responseCode;\r\n        var requestAPI = bd.type;\r\n        var correlationContext = bd.correlationContext;\r\n        var method = bd.properties && bd.properties[HttpMethod] ? bd.properties[HttpMethod] : \"GET\";\r\n        var baseData = new RemoteDependencyData(logger, id, absoluteUrl, command, duration, success, resultCode, method, requestAPI, correlationContext, customProperties, customMeasurements);\r\n        var data = new Data(RemoteDependencyData.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, RemoteDependencyData.envelopeType, telemetryItem, data);\r\n    };\r\n    DependencyEnvelopeCreator.DependencyEnvelopeCreator = new DependencyEnvelopeCreator();\r\n    return DependencyEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { DependencyEnvelopeCreator };\r\nvar EventEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventEnvelopeCreator, _super);\r\n    function EventEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EventEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customProperties = {};\r\n        var customMeasurements = {};\r\n        if (telemetryItem.baseType !== Event.dataType) {\r\n            customProperties['baseTypeSource'] = telemetryItem.baseType; // save the passed in base type as a property\r\n        }\r\n        if (telemetryItem.baseType === Event.dataType) {\r\n            customProperties = telemetryItem.baseData.properties || {};\r\n            customMeasurements = telemetryItem.baseData.measurements || {};\r\n        }\r\n        else {\r\n            if (telemetryItem.baseData) {\r\n                EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.baseData, customProperties, customMeasurements);\r\n            }\r\n        }\r\n        // Exract root level properties from part C telemetryItem.data\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var eventName = telemetryItem.baseData.name;\r\n        var baseData = new Event(logger, eventName, customProperties, customMeasurements);\r\n        var data = new Data(Event.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Event.envelopeType, telemetryItem, data);\r\n    };\r\n    EventEnvelopeCreator.EventEnvelopeCreator = new EventEnvelopeCreator();\r\n    return EventEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { EventEnvelopeCreator };\r\nvar ExceptionEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionEnvelopeCreator, _super);\r\n    function ExceptionEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ExceptionEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var baseData = Exception.CreateFromInterface(logger, bd);\r\n        var data = new Data(Exception.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Exception.envelopeType, telemetryItem, data);\r\n    };\r\n    ExceptionEnvelopeCreator.ExceptionEnvelopeCreator = new ExceptionEnvelopeCreator();\r\n    return ExceptionEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { ExceptionEnvelopeCreator };\r\nvar MetricEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricEnvelopeCreator, _super);\r\n    function MetricEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MetricEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var props = telemetryItem.baseData.properties || {};\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        customProperties = tslib_1.__assign({}, props, customProperties);\r\n        var name = telemetryItem.baseData.name;\r\n        var average = telemetryItem.baseData.average;\r\n        var sampleCount = telemetryItem.baseData.sampleCount;\r\n        var min = telemetryItem.baseData.min;\r\n        var max = telemetryItem.baseData.max;\r\n        var baseData = new Metric(logger, name, average, sampleCount, min, max, customProperties);\r\n        var data = new Data(Metric.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Metric.envelopeType, telemetryItem, data);\r\n    };\r\n    MetricEnvelopeCreator.MetricEnvelopeCreator = new MetricEnvelopeCreator();\r\n    return MetricEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { MetricEnvelopeCreator };\r\nvar PageViewEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewEnvelopeCreator, _super);\r\n    function PageViewEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n        var duration;\r\n        if (!CoreUtils.isNullOrUndefined(telemetryItem.baseData) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties.duration)) {\r\n            duration = telemetryItem.baseData.properties.duration;\r\n            delete telemetryItem.baseData.properties.duration;\r\n        }\r\n        else if (!CoreUtils.isNullOrUndefined(telemetryItem.data) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.data[\"duration\"])) {\r\n            duration = telemetryItem.data[\"duration\"];\r\n            delete telemetryItem.data[\"duration\"];\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n        var currentContextId;\r\n        if (telemetryItem.ext && telemetryItem.ext.trace && telemetryItem.ext.trace.traceID) {\r\n            currentContextId = telemetryItem.ext.trace.traceID;\r\n        }\r\n        var id = bd.id || currentContextId;\r\n        var name = bd.name;\r\n        var url = bd.uri;\r\n        var properties = bd.properties || {};\r\n        var measurements = bd.measurements || {};\r\n        // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.refUri)) {\r\n            properties[\"refUri\"] = bd.refUri;\r\n        }\r\n        // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.pageType)) {\r\n            properties[\"pageType\"] = bd.pageType;\r\n        }\r\n        // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.isLoggedIn)) {\r\n            properties[\"isLoggedIn\"] = bd.isLoggedIn.toString();\r\n        }\r\n        // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.properties)) {\r\n            var pageTags = bd.properties;\r\n            for (var key in pageTags) {\r\n                if (pageTags.hasOwnProperty(key)) {\r\n                    properties[key] = pageTags[key];\r\n                }\r\n            }\r\n        }\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, properties, measurements);\r\n        var baseData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n        var data = new Data(PageView.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageView.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewEnvelopeCreator.PageViewEnvelopeCreator = new PageViewEnvelopeCreator();\r\n    return PageViewEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewEnvelopeCreator };\r\nvar PageViewPerformanceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformanceEnvelopeCreator, _super);\r\n    function PageViewPerformanceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewPerformanceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var name = bd.name;\r\n        var url = bd.uri || bd.url;\r\n        var properties = bd.properties || {};\r\n        var measurements = bd.measurements || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, properties, measurements);\r\n        var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);\r\n        var data = new Data(PageViewPerformance.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageViewPerformance.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator = new PageViewPerformanceEnvelopeCreator();\r\n    return PageViewPerformanceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewPerformanceEnvelopeCreator };\r\nvar TraceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TraceEnvelopeCreator, _super);\r\n    function TraceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TraceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var message = telemetryItem.baseData.message;\r\n        var severityLevel = telemetryItem.baseData.severityLevel;\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        var props = tslib_1.__assign({}, customProperties, telemetryItem.baseData.properties);\r\n        var baseData = new Trace(logger, message, severityLevel, props);\r\n        var data = new Data(Trace.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Trace.envelopeType, telemetryItem, data);\r\n    };\r\n    TraceEnvelopeCreator.TraceEnvelopeCreator = new TraceEnvelopeCreator();\r\n    return TraceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { TraceEnvelopeCreator };\r\n//# sourceMappingURL=EnvelopeCreator.js.map","import { Util, FieldType } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n     * Serializes the current object to a JSON string.\r\n     */\r\n    Serializer.prototype.serialize = function (input) {\r\n        var output = this._serializeObject(input, \"root\");\r\n        return JSON.stringify(output);\r\n    };\r\n    Serializer.prototype._serializeObject = function (source, name) {\r\n        var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n        var output = {};\r\n        if (!source) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (source[circularReferenceCheck]) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CircularReferenceDetected, \"Circular reference detected while serializing object\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (!source.aiDataContract) {\r\n            // special case for measurements/properties/tags\r\n            if (name === \"measurements\") {\r\n                output = this._serializeStringMap(source, \"number\", name);\r\n            }\r\n            else if (name === \"properties\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (name === \"tags\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (Util.isArray(source)) {\r\n                output = this._serializeArray(source, name);\r\n            }\r\n            else {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                try {\r\n                    // verify that the object can be stringified\r\n                    JSON.stringify(source);\r\n                    output = source;\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, (e && typeof e.toString === 'function') ? e.toString() : \"Error serializing object\", null, true);\r\n                }\r\n            }\r\n            return output;\r\n        }\r\n        source[circularReferenceCheck] = true;\r\n        for (var field in source.aiDataContract) {\r\n            var contract = source.aiDataContract[field];\r\n            var isRequired = (typeof contract === \"function\") ? (contract() & FieldType.Required) : (contract & FieldType.Required);\r\n            var isHidden = (typeof contract === \"function\") ? (contract() & FieldType.Hidden) : (contract & FieldType.Hidden);\r\n            var isArray = contract & FieldType.Array;\r\n            var isPresent = source[field] !== undefined;\r\n            var isObject = typeof source[field] === \"object\" && source[field] !== null;\r\n            if (isRequired && !isPresent && !isArray) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MissingRequiredFieldSpecification, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                // If not in debug mode, continue and hope the error is permissible\r\n                continue;\r\n            }\r\n            if (isHidden) {\r\n                // Don't serialize hidden fields\r\n                continue;\r\n            }\r\n            var value = void 0;\r\n            if (isObject) {\r\n                if (isArray) {\r\n                    // special case; resurse on each object in the source array\r\n                    value = this._serializeArray(source[field], field);\r\n                }\r\n                else {\r\n                    // recurse on the source object in this field\r\n                    value = this._serializeObject(source[field], field);\r\n                }\r\n            }\r\n            else {\r\n                // assign the source field to the output even if undefined or required\r\n                value = source[field];\r\n            }\r\n            // only emit this field if the value is defined\r\n            if (value !== undefined) {\r\n                output[field] = value;\r\n            }\r\n        }\r\n        delete source[circularReferenceCheck];\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeArray = function (sources, name) {\r\n        var output;\r\n        if (!!sources) {\r\n            if (!Util.isArray(sources)) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ItemNotInArray, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n            }\r\n            else {\r\n                output = [];\r\n                for (var i = 0; i < sources.length; i++) {\r\n                    var source = sources[i];\r\n                    var item = this._serializeObject(source, name + \"[\" + i + \"]\");\r\n                    output.push(item);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeStringMap = function (map, expectedType, name) {\r\n        var output;\r\n        if (map) {\r\n            output = {};\r\n            for (var field in map) {\r\n                var value = map[field];\r\n                if (expectedType === \"string\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else if (!value.toString) {\r\n                        output[field] = \"invalid field: toString() is not defined.\";\r\n                    }\r\n                    else {\r\n                        output[field] = value.toString();\r\n                    }\r\n                }\r\n                else if (expectedType === \"number\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else {\r\n                        var num = parseFloat(value);\r\n                        if (isNaN(num)) {\r\n                            output[field] = \"NaN\";\r\n                        }\r\n                        else {\r\n                            output[field] = num;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, output[field], null, true);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","import { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n * @description Monitors browser for offline events\r\n * @export default - Offline: Static instance of OfflineListener\r\n * @class OfflineListener\r\n */\r\nvar OfflineListener = /** @class */ (function () {\r\n    function OfflineListener() {\r\n        this._onlineStatus = true;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                this.isListening = false;\r\n            }\r\n            else if (window && window.addEventListener) {\r\n                window.addEventListener('online', this._setOnline.bind(this), false);\r\n                window.addEventListener('offline', this._setOffline.bind(this), false);\r\n                this.isListening = true;\r\n            }\r\n            else if (document && document.body) {\r\n                document.body.ononline = this._setOnline.bind(this);\r\n                document.body.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else if (document) {\r\n                document.ononline = this._setOnline.bind(this);\r\n                document.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else {\r\n                // Could not find a place to add event listener\r\n                this.isListening = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // this makes react-native less angry\r\n            this.isListening = false;\r\n        }\r\n    }\r\n    OfflineListener.prototype.isOnline = function () {\r\n        if (this.isListening) {\r\n            return this._onlineStatus;\r\n        }\r\n        else if (navigator && !CoreUtils.isNullOrUndefined(navigator.onLine)) {\r\n            return navigator.onLine;\r\n        }\r\n        else {\r\n            // Cannot determine online status - report as online\r\n            return true;\r\n        }\r\n    };\r\n    OfflineListener.prototype.isOffline = function () {\r\n        return !this.isOnline();\r\n    };\r\n    OfflineListener.prototype._setOnline = function () {\r\n        this._onlineStatus = true;\r\n    };\r\n    OfflineListener.prototype._setOffline = function () {\r\n        this._onlineStatus = false;\r\n    };\r\n    OfflineListener.Offline = new OfflineListener;\r\n    return OfflineListener;\r\n}());\r\nexport { OfflineListener };\r\nexport var Offline = OfflineListener.Offline;\r\n//# sourceMappingURL=Offline.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input === \"\") {\r\n            return 0;\r\n        }\r\n        while (input.length < HashCodeScoreGenerator.MIN_INPUT_LENGTH) {\r\n            input = input.concat(input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input.length; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    // (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\n    HashCodeScoreGenerator.MIN_INPUT_LENGTH = 8;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { HashCodeScoreGenerator } from './HashCodeScoreGenerator';\r\nimport { ContextTagKeys } from '@microsoft/applicationinsights-common';\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        this.hashCodeGeneragor = new HashCodeScoreGenerator();\r\n        this.keys = new ContextTagKeys();\r\n    }\r\n    SamplingScoreGenerator.prototype.getSamplingScore = function (item) {\r\n        var score = 0;\r\n        if (item.tags && item.tags[this.keys.userId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.userId]);\r\n        }\r\n        else if (item.ext && item.ext.user && item.ext.user.id) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.user.id);\r\n        }\r\n        else if (item.tags && item.tags[this.keys.operationId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.operationId]);\r\n        }\r\n        else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace.traceID) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.telemetryTrace.traceID);\r\n        }\r\n        else {\r\n            // tslint:disable-next-line:insecure-random\r\n            score = (Math.random() * 100);\r\n        }\r\n        return score;\r\n    };\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { SamplingScoreGenerator } from './SamplingScoreGenerators/SamplingScoreGenerator';\r\nimport { Metric } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, DiagnosticLogger, CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        this._logger = CoreUtils.isNullOrUndefined(logger) ? new DiagnosticLogger() : logger;\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SampleRateOutOfRange, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            this.sampleRate = 100;\r\n        }\r\n        this.sampleRate = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n     * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n     */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this.sampleRate; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === Metric.dataType) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator.getSamplingScore(envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SessionStorageSendBuffer, ArraySendBuffer } from './SendBuffer';\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from './EnvelopeCreator';\r\nimport { Serializer } from './Serializer'; // todo move to channel\r\nimport { DisabledPropertyName, RequestHeaders, Util, PageView, Event, Trace, Exception, Metric, PageViewPerformance, RemoteDependencyData, ConfigurationManager, ProcessLegacy, BreezeChannelIdentifier, SampleRate } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity, } from '@microsoft/applicationinsights-core-js';\r\nimport { Offline } from './Offline';\r\nimport { Sample } from './TelemetryProcessors/Sample';\r\nvar Sender = /** @class */ (function () {\r\n    function Sender() {\r\n        this.priority = 1001;\r\n        this.identifier = BreezeChannelIdentifier;\r\n        /**\r\n         * Whether XMLHttpRequest object is supported. Older version of IE (8,9) do not support it.\r\n         */\r\n        this._XMLHttpRequestSupported = false;\r\n    }\r\n    Sender.constructEnvelope = function (orig, iKey, logger) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !CoreUtils.isNullOrUndefined(iKey)) {\r\n            envelope = tslib_1.__assign({}, orig, { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        switch (envelope.baseType) {\r\n            case Event.dataType:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n            case Trace.dataType:\r\n                return TraceEnvelopeCreator.TraceEnvelopeCreator.Create(logger, envelope);\r\n            case PageView.dataType:\r\n                return PageViewEnvelopeCreator.PageViewEnvelopeCreator.Create(logger, envelope);\r\n            case PageViewPerformance.dataType:\r\n                return PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator.Create(logger, envelope);\r\n            case Exception.dataType:\r\n                return ExceptionEnvelopeCreator.ExceptionEnvelopeCreator.Create(logger, envelope);\r\n            case Metric.dataType:\r\n                return MetricEnvelopeCreator.MetricEnvelopeCreator.Create(logger, envelope);\r\n            case RemoteDependencyData.dataType:\r\n                return DependencyEnvelopeCreator.DependencyEnvelopeCreator.Create(logger, envelope);\r\n            default:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n        }\r\n    };\r\n    Sender._getDefaultAppInsightsChannelConfig = function () {\r\n        // set default values\r\n        return {\r\n            endpointUrl: function () { return \"https://dc.services.visualstudio.com/v2/track\"; },\r\n            emitLineDelimitedJson: function () { return false; },\r\n            maxBatchInterval: function () { return 15000; },\r\n            maxBatchSizeInBytes: function () { return 102400; },\r\n            disableTelemetry: function () { return false; },\r\n            enableSessionStorageBuffer: function () { return true; },\r\n            isRetryDisabled: function () { return false; },\r\n            isBeaconApiDisabled: function () { return true; },\r\n            onunloadDisableBeacon: function () { return false; },\r\n            instrumentationKey: function () { return undefined; },\r\n            namePrefix: function () { return undefined; },\r\n            samplingPercentage: function () { return 100; }\r\n        };\r\n    };\r\n    Sender._getEmptyAppInsightsChannelConfig = function () {\r\n        return {\r\n            endpointUrl: undefined,\r\n            emitLineDelimitedJson: undefined,\r\n            maxBatchInterval: undefined,\r\n            maxBatchSizeInBytes: undefined,\r\n            disableTelemetry: undefined,\r\n            enableSessionStorageBuffer: undefined,\r\n            isRetryDisabled: undefined,\r\n            isBeaconApiDisabled: undefined,\r\n            onunloadDisableBeacon: undefined,\r\n            instrumentationKey: undefined,\r\n            namePrefix: undefined,\r\n            samplingPercentage: undefined\r\n        };\r\n    };\r\n    Sender.prototype.pause = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.resume = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.flush = function () {\r\n        try {\r\n            this.triggerSend();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FlushFailed, \"flush failed, telemetry will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    Sender.prototype.onunloadFlush = function () {\r\n        if ((this._config.onunloadDisableBeacon() === false || this._config.isBeaconApiDisabled() === false) && Util.IsBeaconApiSupported()) {\r\n            try {\r\n                this.triggerSend(true, this._beaconSender);\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToSendQueuedTelemetry, \"failed to flush with beacon sender on page unload, telemetry will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        else {\r\n            this.flush();\r\n        }\r\n    };\r\n    Sender.prototype.teardown = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this._logger = core.logger;\r\n        this._serializer = new Serializer(core.logger);\r\n        this._consecutiveErrors = 0;\r\n        this._retryAt = null;\r\n        this._lastSend = 0;\r\n        this._sender = null;\r\n        var defaultConfig = Sender._getDefaultAppInsightsChannelConfig();\r\n        this._config = Sender._getEmptyAppInsightsChannelConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._config[field] = function () { return ConfigurationManager.getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._buffer = (this._config.enableSessionStorageBuffer && Util.canUseSessionStorage())\r\n            ? new SessionStorageSendBuffer(this._logger, this._config) : new ArraySendBuffer(this._config);\r\n        this._sample = new Sample(this._config.samplingPercentage(), this._logger);\r\n        if (!this._config.isBeaconApiDisabled() && Util.IsBeaconApiSupported()) {\r\n            this._sender = this._beaconSender;\r\n        }\r\n        else {\r\n            if (typeof XMLHttpRequest !== \"undefined\") {\r\n                var testXhr = new XMLHttpRequest();\r\n                if (\"withCredentials\" in testXhr) {\r\n                    this._sender = this._xhrSender;\r\n                    this._XMLHttpRequestSupported = true;\r\n                }\r\n                else if (typeof XDomainRequest !== \"undefined\") {\r\n                    this._sender = this._xdrSender; // IE 8 and 9\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Sender.prototype.processTelemetry = function (telemetryItem) {\r\n        var _this = this;\r\n        try {\r\n            // if master off switch is set, don't send any data\r\n            if (this._config.disableTelemetry()) {\r\n                // Do not send/save data\r\n                return;\r\n            }\r\n            // validate input\r\n            if (!telemetryItem) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSendEmptyTelemetry, \"Cannot send empty telemetry\");\r\n                return;\r\n            }\r\n            // validate event\r\n            if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidEvent, \"Cannot send telemetry without baseData and baseType\");\r\n                return;\r\n            }\r\n            if (!telemetryItem.baseType) {\r\n                // Default\r\n                telemetryItem.baseType = \"EventData\";\r\n            }\r\n            // ensure a sender was constructed\r\n            if (!this._sender) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SenderNotInitialized, \"Sender was not initialized\");\r\n                return;\r\n            }\r\n            // check if this item should be sampled in, else add sampleRate tag\r\n            if (!this._isSampledIn(telemetryItem)) {\r\n                // Item is sampled out, do not send it\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TelemetrySampledAndNotSent, \"Telemetry item was sampled out and not sent\", { SampleRate: this._sample.sampleRate });\r\n                return;\r\n            }\r\n            else {\r\n                telemetryItem.tags = telemetryItem.tags || {};\r\n                telemetryItem.tags[SampleRate] = this._sample.sampleRate;\r\n            }\r\n            // construct an envelope that Application Insights endpoint can understand\r\n            var aiEnvelope_1 = Sender.constructEnvelope(telemetryItem, this._config.instrumentationKey(), this._logger);\r\n            if (!aiEnvelope_1) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CreateEnvelopeError, \"Unable to create an AppInsights envelope\");\r\n                return;\r\n            }\r\n            var doNotSendItem_1 = false;\r\n            // this is for running in legacy mode, where customer may already have a custom initializer present\r\n            if (telemetryItem.tags && telemetryItem.tags[ProcessLegacy]) {\r\n                telemetryItem.tags[ProcessLegacy].forEach(function (callBack) {\r\n                    try {\r\n                        if (callBack && callBack(aiEnvelope_1) === false) {\r\n                            doNotSendItem_1 = true;\r\n                            _this._logger.warnToConsole(\"Telemetry processor check returns false\");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // log error but dont stop executing rest of the telemetry initializers\r\n                        // doNotSendItem = true;\r\n                        _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                    }\r\n                });\r\n                delete telemetryItem.tags[ProcessLegacy];\r\n            }\r\n            if (doNotSendItem_1) {\r\n                return; // do not send, no need to execute next plugin\r\n            }\r\n            // check if the incoming payload is too large, truncate if necessary\r\n            var payload = this._serializer.serialize(aiEnvelope_1);\r\n            // flush if we would exceed the max-size limit by adding this item\r\n            var bufferPayload = this._buffer.getItems();\r\n            var batch = this._buffer.batchPayloads(bufferPayload);\r\n            if (batch && (batch.length + payload.length > this._config.maxBatchSizeInBytes())) {\r\n                this.triggerSend();\r\n            }\r\n            // enqueue the payload\r\n            this._buffer.enqueue(payload);\r\n            // ensure an invocation timeout is set\r\n            this._setupTimer();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedAddingTelemetryToBuffer, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        // hand off the telemetry item to the next plugin\r\n        if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(telemetryItem);\r\n        }\r\n    };\r\n    Sender.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    /**\r\n     * xhr state changes\r\n     */\r\n    Sender.prototype._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n        if (xhr.readyState === 4) {\r\n            var response = null;\r\n            if (!this._appId) {\r\n                response = this._parseResponse(xhr.responseText || xhr.response);\r\n                if (response && response.appId) {\r\n                    this._appId = response.appId;\r\n                }\r\n            }\r\n            if ((xhr.status < 200 || xhr.status >= 300) && xhr.status !== 0) {\r\n                if (!this._config.isRetryDisabled() && this._isRetriable(xhr.status)) {\r\n                    this._resendPayload(payload);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                        \"Response code \" + xhr.status + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n                else {\r\n                    this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                }\r\n            }\r\n            else if (Offline.isOffline()) {\r\n                // Note: Don't check for staus == 0, since adblock gives this code\r\n                if (!this._config.isRetryDisabled()) {\r\n                    var offlineBackOffMultiplier = 10; // arbritrary number\r\n                    this._resendPayload(payload, offlineBackOffMultiplier);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". Offline - Response Code: \" + xhr.status + \". Offline status: \" + Offline.isOffline() + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n            }\r\n            else {\r\n                if (xhr.status === 206) {\r\n                    if (!response) {\r\n                        response = this._parseResponse(xhr.responseText || xhr.response);\r\n                    }\r\n                    if (response && !this._config.isRetryDisabled()) {\r\n                        this._onPartialSuccess(payload, response);\r\n                    }\r\n                    else {\r\n                        this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                    }\r\n                }\r\n                else {\r\n                    this._consecutiveErrors = 0;\r\n                    this._onSuccess(payload, countOfItemsInPayload);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Immediately send buffered data\r\n     * @param async {boolean} - Indicates if the events should be sent asynchronously\r\n     * @param forcedSender {SenderFunction} - Indicates the forcedSender, undefined if not passed\r\n     */\r\n    Sender.prototype.triggerSend = function (async, forcedSender) {\r\n        if (async === void 0) { async = true; }\r\n        try {\r\n            // Send data only if disableTelemetry is false\r\n            if (!this._config.disableTelemetry()) {\r\n                if (this._buffer.count() > 0) {\r\n                    var payload = this._buffer.getItems();\r\n                    // invoke send\r\n                    if (forcedSender) {\r\n                        forcedSender.call(this, payload, async);\r\n                    }\r\n                    else {\r\n                        this._sender(payload, async);\r\n                    }\r\n                }\r\n                // update lastSend time to enable throttling\r\n                this._lastSend = +new Date;\r\n            }\r\n            else {\r\n                this._buffer.clear();\r\n            }\r\n            clearTimeout(this._timeoutHandle);\r\n            this._timeoutHandle = null;\r\n            this._retryAt = null;\r\n        }\r\n        catch (e) {\r\n            /* Ignore this error for IE under v10 */\r\n            if (!Util.getIEVersion() || Util.getIEVersion() > 9) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TransmissionFailed, \"Telemetry transmission failed, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * error handler\r\n     */\r\n    Sender.prototype._onError = function (payload, message, event) {\r\n        this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.OnError, \"Failed to send telemetry.\", { message: message });\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * partial success handler\r\n     */\r\n    Sender.prototype._onPartialSuccess = function (payload, results) {\r\n        var failed = [];\r\n        var retry = [];\r\n        // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n        var errors = results.errors.reverse();\r\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n            var error = errors_1[_i];\r\n            var extracted = payload.splice(error.index, 1)[0];\r\n            if (this._isRetriable(error.statusCode)) {\r\n                retry.push(extracted);\r\n            }\r\n            else {\r\n                // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                failed.push(extracted);\r\n            }\r\n        }\r\n        if (payload.length > 0) {\r\n            this._onSuccess(payload, results.itemsAccepted);\r\n        }\r\n        if (failed.length > 0) {\r\n            this._onError(failed, this._formatErrorMessageXhr(null, ['partial success', results.itemsAccepted, 'of', results.itemsReceived].join(' ')));\r\n        }\r\n        if (retry.length > 0) {\r\n            this._resendPayload(retry);\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \"Partial success. \" +\r\n                \"Delivered: \" + payload.length + \", Failed: \" + failed.length +\r\n                \". Will retry to send \" + retry.length + \" our of \" + results.itemsReceived + \" items\");\r\n        }\r\n    };\r\n    /**\r\n     * success handler\r\n     */\r\n    Sender.prototype._onSuccess = function (payload, countOfItemsInPayload) {\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * xdr state changes\r\n     */\r\n    Sender.prototype._xdrOnLoad = function (xdr, payload) {\r\n        if (xdr && (xdr.responseText + \"\" === \"200\" || xdr.responseText === \"\")) {\r\n            this._consecutiveErrors = 0;\r\n            this._onSuccess(payload, 0);\r\n        }\r\n        else {\r\n            var results = this._parseResponse(xdr.responseText);\r\n            if (results && results.itemsReceived && results.itemsReceived > results.itemsAccepted\r\n                && !this._config.isRetryDisabled()) {\r\n                this._onPartialSuccess(payload, results);\r\n            }\r\n            else {\r\n                this._onError(payload, this._formatErrorMessageXdr(xdr));\r\n            }\r\n        }\r\n    };\r\n    Sender.prototype._isSampledIn = function (envelope) {\r\n        return this._sample.isSampledIn(envelope);\r\n    };\r\n    /**\r\n     * Send Beacon API request\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - not used\r\n     * Note: Beacon API does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._beaconSender = function (payload, isAsync) {\r\n        var url = this._config.endpointUrl();\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n        // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n        var plainTextBatch = new Blob([batch], { type: 'text/plain;charset=UTF-8' });\r\n        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n        var queued = navigator.sendBeacon(url, plainTextBatch);\r\n        if (queued) {\r\n            this._buffer.markAsSent(payload);\r\n            // no response from beaconSender, clear buffer\r\n            this._onSuccess(payload, payload.length);\r\n        }\r\n        else {\r\n            this._xhrSender(payload, true);\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" + \"Failed to send telemetry with Beacon API, retried with xhrSender.\");\r\n        }\r\n    };\r\n    /**\r\n     * Send XMLHttpRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     */\r\n    Sender.prototype._xhrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xhr = new XMLHttpRequest();\r\n        xhr[DisabledPropertyName] = true;\r\n        xhr.open(\"POST\", this._config.endpointUrl(), isAsync);\r\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n        // append Sdk-Context request header only in case of breeze endpoint\r\n        if (Util.isInternalApplicationInsightsEndpoint(this._config.endpointUrl())) {\r\n            xhr.setRequestHeader(RequestHeaders.sdkContextHeader, RequestHeaders.sdkContextHeaderAppIdRequest);\r\n        }\r\n        xhr.onreadystatechange = function () { return _this._xhrReadyStateChange(xhr, payload, payload.length); };\r\n        xhr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXhr(xhr), event); };\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xhr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    /**\r\n     * Parses the response from the backend.\r\n     * @param response - XMLHttpRequest or XDomainRequest response\r\n     */\r\n    Sender.prototype._parseResponse = function (response) {\r\n        try {\r\n            if (response && response !== \"\") {\r\n                var result = JSON.parse(response);\r\n                if (result && result.itemsReceived && result.itemsReceived >= result.itemsAccepted &&\r\n                    result.itemsReceived - result.itemsAccepted === result.errors.length) {\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidBackendResponse, \"Cannot parse the response. \" + Util.getExceptionName(e), {\r\n                response: response\r\n            });\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n     * @param payload\r\n     */\r\n    Sender.prototype._resendPayload = function (payload, linearFactor) {\r\n        if (linearFactor === void 0) { linearFactor = 1; }\r\n        if (!payload || payload.length === 0) {\r\n            return;\r\n        }\r\n        this._buffer.clearSent(payload);\r\n        this._consecutiveErrors++;\r\n        for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n            var item = payload_1[_i];\r\n            this._buffer.enqueue(item);\r\n        }\r\n        // setup timer\r\n        this._setRetryTime(linearFactor);\r\n        this._setupTimer();\r\n    };\r\n    /**\r\n     * Calculates the time to wait before retrying in case of an error based on\r\n     * http://en.wikipedia.org/wiki/Exponential_backoff\r\n     */\r\n    Sender.prototype._setRetryTime = function (linearFactor) {\r\n        var SlotDelayInSeconds = 10;\r\n        var delayInSeconds;\r\n        if (this._consecutiveErrors <= 1) {\r\n            delayInSeconds = SlotDelayInSeconds;\r\n        }\r\n        else {\r\n            var backOffSlot = (Math.pow(2, this._consecutiveErrors) - 1) / 2;\r\n            // tslint:disable-next-line:insecure-random\r\n            var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n            backOffDelay = linearFactor * backOffDelay;\r\n            delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n        }\r\n        // TODO: Log the backoff time like the C# version does.\r\n        var retryAfterTimeSpan = Date.now() + (delayInSeconds * 1000);\r\n        // TODO: Log the retry at time like the C# version does.\r\n        this._retryAt = retryAfterTimeSpan;\r\n    };\r\n    /**\r\n     * Sets up the timer which triggers actually sending the data.\r\n     */\r\n    Sender.prototype._setupTimer = function () {\r\n        var _this = this;\r\n        if (!this._timeoutHandle) {\r\n            var retryInterval = this._retryAt ? Math.max(0, this._retryAt - Date.now()) : 0;\r\n            var timerValue = Math.max(this._config.maxBatchInterval(), retryInterval);\r\n            this._timeoutHandle = setTimeout(function () {\r\n                _this.triggerSend();\r\n            }, timerValue);\r\n        }\r\n    };\r\n    /**\r\n     * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n     * @param statusCode\r\n     */\r\n    Sender.prototype._isRetriable = function (statusCode) {\r\n        return statusCode === 408 // Timeout\r\n            || statusCode === 429 // Too many requests.\r\n            || statusCode === 500 // Internal server error.\r\n            || statusCode === 503; // Service unavailable.\r\n    };\r\n    Sender.prototype._formatErrorMessageXhr = function (xhr, message) {\r\n        if (xhr) {\r\n            return \"XMLHttpRequest,Status:\" + xhr.status + \",Response:\" + xhr.responseText || xhr.response || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    /**\r\n     * Send XDomainRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     *\r\n     * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n     * to maintain consistency with the xhrSender's contract\r\n     * Note: XDomainRequest does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._xdrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xdr = new XDomainRequest();\r\n        xdr.onload = function () { return _this._xdrOnLoad(xdr, payload); };\r\n        xdr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXdr(xdr), event); };\r\n        // XDomainRequest requires the same protocol as the hosting page.\r\n        // If the protocol doesn't match, we can't send the telemetry :(.\r\n        var hostingProtocol = window.location && window.location.protocol;\r\n        if (this._config.endpointUrl().lastIndexOf(hostingProtocol, 0) !== 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\");\r\n            this._buffer.clear();\r\n            return;\r\n        }\r\n        var endpointUrl = this._config.endpointUrl().replace(/^(https?:)/, \"\");\r\n        xdr.open('POST', endpointUrl);\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xdr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    Sender.prototype._formatErrorMessageXdr = function (xdr, message) {\r\n        if (xdr) {\r\n            return \"XDomainRequest,Response:\" + xdr.responseText || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    return Sender;\r\n}());\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions } from './Interfaces/PartAExtensions';\r\nexport { DistributedTracingModes } from './Enums';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\n//# sourceMappingURL=applicationinsights-common.js.map"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","StorageType","FieldType","DistributedTracingModes","__assign","assign","t","s","i","n","arguments","length","call","apply","CoreUtils","isNullOrUndefined","input","disableCookies","_canUseCookies","newGuid","replace","GuidRegex","c","r","Math","random","toString","LoggingSeverity","ChannelController","processTelemetry","item","channelQueue","forEach","queues","defineProperty","get","enumerable","configurable","initialize","config","core","extensions","invalidChannelIdentifier_1","_this","isCookieUseDisabled","channels","queue","sort","a","priority","setNextPlugin","queueItem","identifier","Error","push","arr","plugin","_InternalMessageId","_InternalLogMessage","sanitizeDiagnosticText","text","dataType","AiNonUserActionablePrefix","AiUserActionablePrefix","msgId","msg","isUserAct","properties","messageId","message","diagnosticText","JSON","stringify","DiagnosticLogger","throwInternal","severity","enableDebugExceptions","messageKey","_messageLogged","consoleLoggingLevel","WARNING","warnToConsole","logInternalMessage","console","warn","log","resetInternalMessageCount","_messageCount","_areInternalMessagesThrottled","logMessage","AIInternalMessagePrefix","telemetryLoggingLevel","maxInternalMessageLimit","throttleLimitMessage","throttleMessage","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","traceParentHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","DataSanitizer","sanitizeKeyAndAddUniqueness","logger","key","map","origLength","field","sanitizeKey","uniqueField","undefined","substring","MAX_NAME_LENGTH","padNumber","name","nameTrunc","trim","sanitizeString","value","maxLength","valueTrunc","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","messageTrunc","MAX_MESSAGE_LENGTH","sanitizeException","exception","exceptionTrunc","MAX_EXCEPTION_LENGTH","sanitizeProperties","tempProps","prop","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","inputTrunc","data","num","substr","str","Util","createDomEvent","eventName","event","Event","document","createEvent","initEvent","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","Date","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","canUseCookies","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","random32","generateW3CId","tmp","hexValues","oct","clockSequenceHi","isArray","obj","isError","isDate","toISOStringForIE8","date","toISOString","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","getExtension","extension","extIx","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","host","parseHost","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","match","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","_super","ProcessLegacy","HttpMethod","Data","tslib_1.__extends","Envelope","ver","sampleRate","tags","time","aiDataContract","Required","iKey","Hidden","Domain","EventData","envelopeType","Default","StackFrame","ExceptionData","exceptions","ExceptionDetails","hasFullStack","parsedStack","Exception","CreateFromInterface","ex","_ExceptionDetails","tslib_1.__assign","toInterface","_a","severityLevel","problemGroup","isManual","CreateSimpleException","typeName","assembly","fileName","details","line","frame","outerId","_StackFrame","parseStack","frames_1","level","totalSizeInBytes","regex","test","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","splice","baseSize","sourceFrame","matches","DataPointType","MetricData","metrics","DataPoint","kind","Measurement","count","max","stdDev","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","GeneratedRemoteDependencyData","resultCode","requestAPI","correlationContext","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","MessageData","Trace","PageViewPerfData","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","SeverityLevel","AIData","baseType","baseData","ConfigurationManager","getConfig","configValue","extensionConfig","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","CtxTagKeys","ArraySendBuffer","enqueue","payload","_buffer","clear","getItems","batchPayloads","_config","emitLineDelimitedJson","join","markAsSent","clearSent","SessionStorageSendBuffer","MAX_BUFFER_SIZE","_bufferFullMessageSent","_logger","setBuffer","BUFFER_KEY","SENT_BUFFER_KEY","removePayloadsFromBuffer","sentElements","getBuffer","concat","CRITICAL","payloads","buffer","remaining","contains","j","prefixedKey","namePrefix","bufferJson","parse","bufferItems","notDeliveredItems","EnvelopeCreator","extractProperties","customProperties","extractPropsAndMeasurements","createEnvelope","telemetryItem","envelope","iKeyNoDashes","extractPartAExtensions","env","ext","user","authId","localId","app","sesId","device","deviceClass","ip","web","browserLang","browserVer","browser","screenRes","userConsent","model","os","trace","parentID","traceID","tgs","_loop_1","tg","Version","DependencyEnvelopeCreator","Create","customMeasurements","bd","command","responseCode","EventEnvelopeCreator","ExceptionEnvelopeCreator","MetricEnvelopeCreator","props","average","sampleCount","PageViewEnvelopeCreator","currentContextId","uri","refUri","pageType","isLoggedIn","pageTags","PageViewPerformanceEnvelopeCreator","TraceEnvelopeCreator","Serializer","serialize","output","_serializeObject","source","circularReferenceCheck","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isPresent","isObject","sources","expectedType","parseFloat","OfflineListener","_onlineStatus","isListening","_setOnline","bind","_setOffline","body","ononline","onoffline","Offline","isOnline","onLine","isOffline","HashCodeScoreGenerator","getHashCodeScore","getHashCode","INT_MAX_VALUE","MIN_INPUT_LENGTH","hash","charCodeAt","abs","SamplingScoreGenerator","getSamplingScore","hashCodeGeneragor","telemetryTrace","Sample","isSampledIn","samplingPercentage","samplingScoreGenerator","samplingRate","Sender","constructEnvelope","orig","_getDefaultAppInsightsChannelConfig","maxBatchInterval","maxBatchSizeInBytes","disableTelemetry","enableSessionStorageBuffer","isRetryDisabled","isBeaconApiDisabled","onunloadDisableBeacon","instrumentationKey","_getEmptyAppInsightsChannelConfig","pause","resume","flush","triggerSend","onunloadFlush","_beaconSender","teardown","_serializer","_consecutiveErrors","_retryAt","_lastSend","_sender","defaultConfig","this_1","_sample","XMLHttpRequest","_xhrSender","_XMLHttpRequestSupported","XDomainRequest","_xdrSender","_isSampledIn","SampleRate","aiEnvelope_1","doNotSendItem_1","callBack","bufferPayload","batch","_setupTimer","_nextPlugin","next","_xhrReadyStateChange","xhr","countOfItemsInPayload","readyState","response","_appId","_parseResponse","responseText","appId","status","_isRetriable","_resendPayload","_onError","_formatErrorMessageXhr","_onPartialSuccess","_onSuccess","async","forcedSender","clearTimeout","_timeoutHandle","results","failed","retry","_i","errors_1","errors","reverse","extracted","index","statusCode","itemsAccepted","itemsReceived","_xdrOnLoad","xdr","_formatErrorMessageXdr","isAsync","plainTextBatch","Blob","open","setRequestHeader","onreadystatechange","onerror","send","linearFactor","payload_1","_setRetryTime","delayInSeconds","backOffSlot","pow","backOffDelay","retryAfterTimeSpan","retryInterval","timerValue","setTimeout","onload","hostingProtocol","lastIndexOf"],"mappings":"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"}