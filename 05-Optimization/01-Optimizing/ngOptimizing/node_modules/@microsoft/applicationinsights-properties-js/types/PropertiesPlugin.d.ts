/**
 * PropertiesPlugin.ts
 * @copyright Microsoft 2018
 */
import { ITelemetryPlugin, IConfiguration, IAppInsightsCore, IPlugin, ITelemetryItem } from '@microsoft/applicationinsights-core-js';
import { TelemetryContext } from './TelemetryContext';
import { IConfig, IPropertiesPlugin } from '@microsoft/applicationinsights-common';
import { ITelemetryConfig } from './Interfaces/ITelemetryConfig';
export default class PropertiesPlugin implements ITelemetryPlugin, IPropertiesPlugin {
    static getDefaultConfig(): ITelemetryConfig;
    context: TelemetryContext;
    priority: number;
    identifier: string;
    private _logger;
    private _breezeChannel;
    private _nextPlugin;
    private _extensionConfig;
    initialize(config: IConfiguration & IConfig, core: IAppInsightsCore, extensions: IPlugin[]): void;
    /**
     * Add Part A fields to the event
     * @param event The event that needs to be processed
     */
    processTelemetry(event: ITelemetryItem): void;
    /**
     * Sets the next plugin that comes after this plugin
     * @param nextPlugin The next plugin
     */
    setNextPlugin(nextPlugin: ITelemetryPlugin): void;
    private _processTelemetryInternal(event);
}
