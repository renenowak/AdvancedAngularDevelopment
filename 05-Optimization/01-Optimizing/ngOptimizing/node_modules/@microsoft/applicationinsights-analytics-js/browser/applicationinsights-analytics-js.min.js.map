{"version":3,"file":"applicationinsights-analytics-js.min.js","sources":["../../../common/temp/node_modules/tslib/tslib.es6.js","../../../shared/AppInsightsCommon/dist-esm/Enums.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/ChannelController.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataSanitizer.js","../../../shared/AppInsightsCommon/dist-esm/Util.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Base.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Domain.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/EventData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Event.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Exception.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Metric.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageView.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Trace.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageViewPerformance.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/IConfig.js","../../../shared/AppInsightsCommon/dist-esm/TelemetryItemCreator.js","../../../shared/AppInsightsCommon/dist-esm/applicationinsights-common.js","../dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js","../dist-esm/JavaScriptSDK/Telemetry/PageVisitTimeManager.js","../dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js","../dist-esm/JavaScriptSDK/ApplicationInsights.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Type of storage to differentiate between local storage and session storage\r\n */\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\nexport var DistributedTracingModes;\r\n(function (DistributedTracingModes) {\r\n    /**\r\n     * (Default) Send Application Insights correlation headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI\"] = 0] = \"AI\";\r\n    /**\r\n     * Send both W3C Trace Context headers and back-compatibility Application Insights headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI_AND_W3C\"] = 1] = \"AI_AND_W3C\";\r\n    /**\r\n     * Send W3C Trace Context headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"W3C\"] = 2] = \"W3C\";\r\n})(DistributedTracingModes || (DistributedTracingModes = {}));\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n     * Creates a new GUID.\r\n     * @return {string} A GUID.\r\n     */\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n    FailedMonitorAjaxSetRequestHeader: 71,\r\n    SendBrowserInfoOnUserInit: 72\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","import { CoreUtils } from \"./CoreUtils\";\r\n\"use strict\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (config.isCookieUseDisabled) {\r\n            CoreUtils.disableCookies();\r\n        }\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nexport { ChannelController };\r\n//# sourceMappingURL=ChannelController.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        var nameTrunc;\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                nameTrunc = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return nameTrunc || name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        var valueTrunc;\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                valueTrunc = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return valueTrunc || value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        var messageTrunc;\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                messageTrunc = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return messageTrunc || message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        var exceptionTrunc;\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exceptionTrunc = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exceptionTrunc || exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        var inputTrunc;\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                inputTrunc = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return inputTrunc || input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\") {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * Max length allowed for custom names.\r\n     */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    Util.createDomEvent = function (eventName) {\r\n        var event = null;\r\n        if (typeof Event === \"function\") {\r\n            event = new Event(eventName);\r\n        }\r\n        else {\r\n            event = document.createEvent(\"Event\");\r\n            event.initEvent(eventName, true, true);\r\n        }\r\n        return event;\r\n    };\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid.toString(), uid.toString());\r\n            fail = storage.getItem(uid.toString()) !== uid.toString();\r\n            storage.removeItem(uid.toString());\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        CoreUtils.disableCookies();\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (CoreUtils._canUseCookies === undefined) {\r\n            CoreUtils._canUseCookies = false;\r\n            try {\r\n                CoreUtils._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return CoreUtils._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\") {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; // 5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * generate a random 32bit number (-0x80000000..0x7FFFFFFF).\r\n     */\r\n    Util.random32 = function () {\r\n        return (0x100000000 * Math.random()) | 0;\r\n    };\r\n    /**\r\n     * generate W3C trace id\r\n     */\r\n    Util.generateW3CId = function () {\r\n        var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n        // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n        var oct = \"\", tmp;\r\n        for (var a = 0; a < 4; a++) {\r\n            tmp = Util.random32();\r\n            oct +=\r\n                hexValues[tmp & 0xF] +\r\n                    hexValues[tmp >> 4 & 0xF] +\r\n                    hexValues[tmp >> 8 & 0xF] +\r\n                    hexValues[tmp >> 12 & 0xF] +\r\n                    hexValues[tmp >> 16 & 0xF] +\r\n                    hexValues[tmp >> 20 & 0xF] +\r\n                    hexValues[tmp >> 24 & 0xF] +\r\n                    hexValues[tmp >> 28 & 0xF];\r\n        }\r\n        // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n        var clockSequenceHi = hexValues[8 + (Math.random() * 4) | 0];\r\n        return oct.substr(0, 8) + oct.substr(9, 4) + \"4\" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') !== -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n     * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n     * happens in a script from other domain (cross origin, CORS).\r\n     */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n     * Returns string representation of an object suitable for diagnostics logging.\r\n     */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n     * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n     */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.getExtension = function (extensions, identifier) {\r\n        var extension = null;\r\n        var extIx = 0;\r\n        while (!extension && extIx < extensions.length) {\r\n            if (extensions[extIx] && extensions[extIx].identifier === identifier) {\r\n                extension = extensions[extIx];\r\n            }\r\n            extIx++;\r\n        }\r\n        return extension;\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations\r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : { host: UrlHelper.parseHost(url) }; // fill host field in the fallback case as that is the only externally required field from this fn\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    // Fallback method to grab host from url if document.createElement method is not available\r\n    UrlHelper.parseHost = function (url) {\r\n        var match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\r\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\r\n            return match[2];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n     * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n     */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var includedDomains = config && config.correlationHeaderDomains;\r\n        if (includedDomains) {\r\n            var matchExists_1;\r\n            includedDomains.forEach(function (domain) {\r\n                var regex = new RegExp(domain.toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n            });\r\n            if (!matchExists_1) {\r\n                return false;\r\n            }\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length === 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Combines target appId and target role name from response header.\r\n     */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets key from correlation response header\r\n     */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length === 2 && keyValue[0] === key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Data struct to contain only C section with custom fields.\r\n */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n            if (id) {\r\n                _this.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _this.exceptions = exception.exceptions;\r\n            _this.properties = exception.properties;\r\n            _this.measurements = exception.measurements;\r\n            if (exception.severityLevel) {\r\n                _this.severityLevel = exception.severityLevel;\r\n            }\r\n            if (exception.id) {\r\n                _this.id = exception.id;\r\n            }\r\n            if (exception.problemGroup) {\r\n                _this.problemGroup = exception.problemGroup;\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            _this.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n            if (!CoreUtils.isNullOrUndefined(exception.isManual)) {\r\n                _this.isManual = exception.isManual;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    Exception.CreateFromInterface = function (logger, exception) {\r\n        var exceptions = exception.exceptions\r\n            && exception.exceptions.map(function (ex) { return _ExceptionDetails.CreateFromInterface(logger, ex); });\r\n        var exceptionData = new Exception(logger, tslib_1.__assign({}, exception, { exceptions: exceptions }));\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a = this, exceptions = _a.exceptions, properties = _a.properties, measurements = _a.measurements, severityLevel = _a.severityLevel, ver = _a.ver, problemGroup = _a.problemGroup, id = _a.id, isManual = _a.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && exceptions.map(function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return {\r\n            ver: \"4.0\",\r\n            exceptions: exceptionDetailsInterface,\r\n            severityLevel: severityLevel,\r\n            properties: properties,\r\n            measurements: measurements,\r\n            problemGroup: problemGroup,\r\n            id: id,\r\n            isManual: isManual\r\n        };\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n            _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n            var stack = exception.stack;\r\n            _this.parsedStack = _ExceptionDetails.parseStack(stack);\r\n            _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        }\r\n        else {\r\n            _this.typeName = exception.typeName;\r\n            _this.message = exception.message;\r\n            _this.stack = exception.stack;\r\n            _this.parsedStack = exception.parsedStack;\r\n            _this.hasFullStack = exception.hasFullStack;\r\n        }\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var parsedStack = this.parsedStack instanceof Array\r\n            && this.parsedStack.map(function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = {\r\n            id: this.id,\r\n            outerId: this.outerId,\r\n            typeName: this.typeName,\r\n            message: this.message,\r\n            hasFullStack: this.hasFullStack,\r\n            stack: this.stack,\r\n            parsedStack: parsedStack || undefined\r\n        };\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception.parsedStack instanceof Array\r\n            && exception.parsedStack.map(function (frame) { return _StackFrame.CreateFromInterface(frame); }))\r\n            || exception.parsedStack;\r\n        var exceptionDetails = new _ExceptionDetails(logger, tslib_1.__assign({}, exception, { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    _ExceptionDetails.parseStack = function (stack) {\r\n        var parsedStack;\r\n        if (typeof stack === \"string\") {\r\n            var frames_1 = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames_1.length; i++) {\r\n                var frame = frames_1[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames_1[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(sourceFrame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default,\r\n        };\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util.trim(frame);\r\n            _this.fileName = \"\";\r\n            _this.line = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _this.level = sourceFrame.level;\r\n            _this.method = sourceFrame.method;\r\n            _this.assembly = sourceFrame.assembly;\r\n            _this.fileName = sourceFrame.fileName;\r\n            _this.line = sourceFrame.line;\r\n            _this.sizeInBytes = 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        return {\r\n            level: this.level,\r\n            method: this.method,\r\n            assembly: this.assembly,\r\n            fileName: this.fileName,\r\n            line: this.line\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util, AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = DataSanitizer.sanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _this.target = _this.target + \" | \" + correlationContext;\r\n        }\r\n        _this.name = DataSanitizer.sanitizeString(logger, dependencyFields.name);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _this.domProcessing = cs4BaseData.domProcessing;\r\n            _this.duration = cs4BaseData.duration;\r\n            _this.networkConnect = cs4BaseData.networkConnect;\r\n            _this.perfTotal = cs4BaseData.perfTotal;\r\n            _this.receivedResponse = cs4BaseData.receivedResponse;\r\n            _this.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from \"./Util\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { CoreUtils } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item domain specific properties; part B\r\n     * @param baseType telemetry item type. ie PageViewData\r\n     * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties user defined custom properties; part C\r\n     * @param systemProperties system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n        envelopeName = DataSanitizer.sanitizeString(logger, envelopeName) || Util.NotSpecified;\r\n        if (CoreUtils.isNullOrUndefined(item) ||\r\n            CoreUtils.isNullOrUndefined(baseType) ||\r\n            CoreUtils.isNullOrUndefined(envelopeName)) {\r\n            throw Error(\"Input doesn't contain all required fields\");\r\n        }\r\n        var telemetryItem = {\r\n            name: envelopeName,\r\n            time: new Date().toISOString(),\r\n            iKey: \"\",\r\n            ext: systemProperties ? systemProperties : {},\r\n            tags: [],\r\n            data: {},\r\n            baseType: baseType,\r\n            baseData: item // Part B\r\n        };\r\n        // Part C\r\n        if (!CoreUtils.isNullOrUndefined(customProperties)) {\r\n            for (var prop in customProperties) {\r\n                if (customProperties.hasOwnProperty(prop)) {\r\n                    telemetryItem.data[prop] = customProperties[prop];\r\n                }\r\n            }\r\n        }\r\n        return telemetryItem;\r\n    };\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions } from './Interfaces/PartAExtensions';\r\nexport { DistributedTracingModes } from './Enums';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DateTimeUtils, Util } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n * Class encapsulates sending page views and page view performance telemetry.\r\n */\r\nvar PageViewManager = /** @class */ (function () {\r\n    function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {\r\n        this.pageViewPerformanceSent = false;\r\n        this.overridePageViewDuration = false;\r\n        this.overridePageViewDuration = overridePageViewDuration;\r\n        this.appInsights = appInsights;\r\n        this._pageViewPerformanceManager = pageViewPerformanceManager;\r\n        if (core) {\r\n            this._channel = function () { return (core.getTransmissionControls()); };\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    /**\r\n     * Currently supported cases:\r\n     * 1) (default case) track page view called with default parameters, overridePageViewDuration = false. Page view is sent with page view performance when navigation timing data is available.\r\n     *    a. If navigation timing is not supported then page view is sent right away with undefined duration. Page view performance is not sent.\r\n     * 2) overridePageViewDuration = true, custom duration provided. Custom duration is used, page view sends right away.\r\n     * 3) overridePageViewDuration = true, custom duration NOT provided. Page view is sent right away, duration is time spent from page load till now (or undefined if navigation timing is not supported).\r\n     * 4) overridePageViewDuration = false, custom duration is provided. Page view is sent right away with custom duration.\r\n     *\r\n     * In all cases page view performance is sent once (only for the 1st call of trackPageView), or not sent if navigation timing is not supported.\r\n     */\r\n    PageViewManager.prototype.trackPageView = function (pageView, customProperties) {\r\n        var _this = this;\r\n        var name = pageView.name;\r\n        if (CoreUtils.isNullOrUndefined(name) || typeof name !== \"string\") {\r\n            name = pageView.name = window.document && window.document.title || \"\";\r\n        }\r\n        var uri = pageView.uri;\r\n        if (CoreUtils.isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n            uri = pageView.uri = window.location && window.location.href || \"\";\r\n        }\r\n        // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n        // do not provide the duration, set duration to undefined\r\n        // Also this is case 4\r\n        if (!this._pageViewPerformanceManager.isPerformanceTimingSupported()) {\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NavigationTimingNotSupported, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n            return;\r\n        }\r\n        var pageViewSent = false;\r\n        var customDuration;\r\n        // if the performance timing is supported by the browser, calculate the custom duration\r\n        var start = this._pageViewPerformanceManager.getPerformanceTiming().navigationStart;\r\n        customDuration = DateTimeUtils.GetDuration(start, +new Date);\r\n        if (!this._pageViewPerformanceManager.shouldCollectDuration(customDuration)) {\r\n            customDuration = undefined;\r\n        }\r\n        // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n        // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n        var duration;\r\n        if (!CoreUtils.isNullOrUndefined(customProperties) &&\r\n            !CoreUtils.isNullOrUndefined(customProperties.duration)) {\r\n            duration = customProperties.duration;\r\n        }\r\n        if (this.overridePageViewDuration || !isNaN(duration)) {\r\n            if (isNaN(duration)) {\r\n                // case 3\r\n                if (!customProperties) {\r\n                    customProperties = {};\r\n                }\r\n                customProperties[\"duration\"] = customDuration;\r\n            }\r\n            // case 2\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            pageViewSent = true;\r\n        }\r\n        // now try to send the page view performance telemetry\r\n        var maxDurationLimit = 60000;\r\n        if (!customProperties) {\r\n            customProperties = {};\r\n        }\r\n        var handle = setInterval((function () {\r\n            try {\r\n                if (_this._pageViewPerformanceManager.isPerformanceTimingDataReady()) {\r\n                    clearInterval(handle);\r\n                    var pageViewPerformance = {\r\n                        name: name,\r\n                        uri: uri\r\n                    };\r\n                    _this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n                    if (!pageViewPerformance.isValid && !pageViewSent) {\r\n                        // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                        // That's the best value we can get that makes sense.\r\n                        customProperties[\"duration\"] = customDuration;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                    else {\r\n                        if (!pageViewSent) {\r\n                            customProperties[\"duration\"] = pageViewPerformance.durationMs;\r\n                            _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        }\r\n                        if (!_this.pageViewPerformanceSent) {\r\n                            _this.appInsights.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n                            _this.pageViewPerformanceSent = true;\r\n                        }\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n                else if (DateTimeUtils.GetDuration(start, +new Date) > maxDurationLimit) {\r\n                    // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                    // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                    clearInterval(handle);\r\n                    if (!pageViewSent) {\r\n                        customProperties[\"duration\"] = maxDurationLimit;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailedCalc, \"trackPageView failed on page load calculation: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }), 100);\r\n    };\r\n    return PageViewManager;\r\n}());\r\nexport { PageViewManager };\r\n//# sourceMappingURL=PageViewManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\n/**\r\n * Used to track page visit durations\r\n */\r\nvar PageVisitTimeManager = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of PageVisitTimeManager\r\n     * @param pageVisitTimeTrackingHandler Delegate that will be called to send telemetry data to AI (when trackPreviousPageVisit is called)\r\n     * @returns {}\r\n     */\r\n    function PageVisitTimeManager(logger, pageVisitTimeTrackingHandler) {\r\n        this.prevPageVisitDataKeyName = \"prevPageVisitData\";\r\n        this.pageVisitTimeTrackingHandler = pageVisitTimeTrackingHandler;\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n     * Tracks the previous page visit time telemetry (if exists) and starts timing of new page visit time\r\n     * @param currentPageName Name of page to begin timing for visit duration\r\n     * @param currentPageUrl Url of page to begin timing for visit duration\r\n     */\r\n    PageVisitTimeManager.prototype.trackPreviousPageVisit = function (currentPageName, currentPageUrl) {\r\n        try {\r\n            // Restart timer for new page view\r\n            var prevPageVisitTimeData = this.restartPageVisitTimer(currentPageName, currentPageUrl);\r\n            // If there was a page already being timed, track the visit time for it now.\r\n            if (prevPageVisitTimeData) {\r\n                this.pageVisitTimeTrackingHandler(prevPageVisitTimeData.pageName, prevPageVisitTimeData.pageUrl, prevPageVisitTimeData.pageVisitTime);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Auto track page visit time failed, metric will not be collected: \" + Util.dump(e));\r\n        }\r\n    };\r\n    /**\r\n     * Stops timing of current page (if exists) and starts timing for duration of visit to pageName\r\n     * @param pageName Name of page to begin timing visit duration\r\n     * @returns {PageVisitData} Page visit data (including duration) of pageName from last call to start or restart, if exists. Null if not.\r\n     */\r\n    PageVisitTimeManager.prototype.restartPageVisitTimer = function (pageName, pageUrl) {\r\n        try {\r\n            var prevPageVisitData = this.stopPageVisitTimer();\r\n            this.startPageVisitTimer(pageName, pageUrl);\r\n            return prevPageVisitData;\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Call to restart failed: \" + Util.dump(e));\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Starts timing visit duration of pageName\r\n     * @param pageName\r\n     * @returns {}\r\n     */\r\n    PageVisitTimeManager.prototype.startPageVisitTimer = function (pageName, pageUrl) {\r\n        try {\r\n            if (Util.canUseSessionStorage()) {\r\n                if (Util.getSessionStorage(this._logger, this.prevPageVisitDataKeyName) != null) {\r\n                    throw new Error(\"Cannot call startPageVisit consecutively without first calling stopPageVisit\");\r\n                }\r\n                var currPageVisitData = new PageVisitData(pageName, pageUrl);\r\n                var currPageVisitDataStr = JSON.stringify(currPageVisitData);\r\n                Util.setSessionStorage(this._logger, this.prevPageVisitDataKeyName, currPageVisitDataStr);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // TODO: Remove this catch in next phase, since if start is called twice in a row the exception needs to be propagated out\r\n            this._logger.warnToConsole(\"Call to start failed: \" + Util.dump(e));\r\n        }\r\n    };\r\n    /**\r\n     * Stops timing of current page, if exists.\r\n     * @returns {PageVisitData} Page visit data (including duration) of pageName from call to start, if exists. Null if not.\r\n     */\r\n    PageVisitTimeManager.prototype.stopPageVisitTimer = function () {\r\n        try {\r\n            if (Util.canUseSessionStorage()) {\r\n                // Define end time of page's visit\r\n                var pageVisitEndTime = Date.now();\r\n                // Try to retrieve  page name and start time from session storage\r\n                var pageVisitDataJsonStr = Util.getSessionStorage(this._logger, this.prevPageVisitDataKeyName);\r\n                if (pageVisitDataJsonStr) {\r\n                    // if previous page data exists, set end time of visit\r\n                    var prevPageVisitData = JSON.parse(pageVisitDataJsonStr);\r\n                    prevPageVisitData.pageVisitTime = pageVisitEndTime - prevPageVisitData.pageVisitStartTime;\r\n                    // Remove data from storage since we already used it\r\n                    Util.removeSessionStorage(this._logger, this.prevPageVisitDataKeyName);\r\n                    // Return page visit data\r\n                    return prevPageVisitData;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Stop page visit timer failed: \" + Util.dump(e));\r\n            return null;\r\n        }\r\n    };\r\n    return PageVisitTimeManager;\r\n}());\r\nexport { PageVisitTimeManager };\r\nvar PageVisitData = /** @class */ (function () {\r\n    function PageVisitData(pageName, pageUrl) {\r\n        this.pageVisitStartTime = Date.now();\r\n        this.pageName = pageName;\r\n        this.pageUrl = pageUrl;\r\n    }\r\n    return PageVisitData;\r\n}());\r\nexport { PageVisitData };\r\n//# sourceMappingURL=PageVisitTimeManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n * Class encapsulates sending page view performance telemetry.\r\n */\r\nvar PageViewPerformanceManager = /** @class */ (function () {\r\n    function PageViewPerformanceManager(core) {\r\n        this.MAX_DURATION_ALLOWED = 3600000; // 1h\r\n        if (core) {\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent = function (pageViewPerformance) {\r\n        pageViewPerformance.isValid = false;\r\n        /*\r\n         * http://www.w3.org/TR/navigation-timing/#processing-model\r\n         *  |-navigationStart\r\n         *  |             |-connectEnd\r\n         *  |             ||-requestStart\r\n         *  |             ||             |-responseStart\r\n         *  |             ||             |              |-responseEnd\r\n         *  |             ||             |              |\r\n         *  |             ||             |              |         |-loadEventEnd\r\n         *  |---network---||---request---|---response---|---dom---|\r\n         *  |--------------------------total----------------------|\r\n         */\r\n        var navigationTiming = this.getPerformanceNavigationTiming();\r\n        var timing = this.getPerformanceTiming();\r\n        if (navigationTiming || timing) {\r\n            if (navigationTiming) {\r\n                var total = navigationTiming.duration;\r\n                var network = DateTimeUtils.GetDuration(navigationTiming.startTime, navigationTiming.connectEnd);\r\n                var request = DateTimeUtils.GetDuration(navigationTiming.requestStart, navigationTiming.responseStart);\r\n                var response = DateTimeUtils.GetDuration(navigationTiming.responseStart, navigationTiming.responseEnd);\r\n                var dom = DateTimeUtils.GetDuration(navigationTiming.responseEnd, navigationTiming.loadEventEnd);\r\n            }\r\n            else {\r\n                var total = DateTimeUtils.GetDuration(timing.navigationStart, timing.loadEventEnd);\r\n                var network = DateTimeUtils.GetDuration(timing.navigationStart, timing.connectEnd);\r\n                var request = DateTimeUtils.GetDuration(timing.requestStart, timing.responseStart);\r\n                var response = DateTimeUtils.GetDuration(timing.responseStart, timing.responseEnd);\r\n                var dom = DateTimeUtils.GetDuration(timing.responseEnd, timing.loadEventEnd);\r\n            }\r\n            if (total === 0) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ErrorPVCalc, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (!this.shouldCollectDuration(total, network, request, response, dom)) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.InvalidDurationValue, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                // in this case, don't report client performance from this page\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ClientPerformanceMathError, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else {\r\n                pageViewPerformance.durationMs = total;\r\n                // // convert to timespans\r\n                pageViewPerformance.perfTotal = pageViewPerformance.duration = Util.msToTimeSpan(total);\r\n                pageViewPerformance.networkConnect = Util.msToTimeSpan(network);\r\n                pageViewPerformance.sentRequest = Util.msToTimeSpan(request);\r\n                pageViewPerformance.receivedResponse = Util.msToTimeSpan(response);\r\n                pageViewPerformance.domProcessing = Util.msToTimeSpan(dom);\r\n                pageViewPerformance.isValid = true;\r\n            }\r\n        }\r\n    };\r\n    PageViewPerformanceManager.prototype.getPerformanceTiming = function () {\r\n        if (this.isPerformanceTimingSupported()) {\r\n            return window.performance.timing;\r\n        }\r\n        return null;\r\n    };\r\n    PageViewPerformanceManager.prototype.getPerformanceNavigationTiming = function () {\r\n        if (this.isPerformanceNavigationTimingSupported()) {\r\n            return window.performance.getEntriesByType(\"navigation\")[0];\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns true is window PerformanceNavigationTiming API is supported, false otherwise.\r\n     */\r\n    PageViewPerformanceManager.prototype.isPerformanceNavigationTimingSupported = function () {\r\n        return typeof window !== \"undefined\" && window.performance && window.performance.getEntriesByType && window.performance.getEntriesByType(\"navigation\").length > 0;\r\n    };\r\n    /**\r\n     * Returns true is window performance timing API is supported, false otherwise.\r\n     */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingSupported = function () {\r\n        return typeof window !== \"undefined\" && window.performance && window.performance.timing;\r\n    };\r\n    /**\r\n     * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n     * Returns true if ready, false otherwise.\r\n     */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingDataReady = function () {\r\n        var timing = window.performance.timing;\r\n        return timing.domainLookupStart > 0\r\n            && timing.navigationStart > 0\r\n            && timing.responseStart > 0\r\n            && timing.requestStart > 0\r\n            && timing.loadEventEnd > 0\r\n            && timing.responseEnd > 0\r\n            && timing.connectEnd > 0\r\n            && timing.domLoading > 0;\r\n    };\r\n    /**\r\n     * This method tells if given durations should be excluded from collection.\r\n     */\r\n    PageViewPerformanceManager.prototype.shouldCollectDuration = function () {\r\n        var durations = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            durations[_i] = arguments[_i];\r\n        }\r\n        // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n        var botAgentNames = ['googlebot', 'adsbot-google', 'apis-google', 'mediapartners-google'];\r\n        var userAgent = navigator.userAgent;\r\n        var isGoogleBot = false;\r\n        if (userAgent) {\r\n            for (var i = 0; i < botAgentNames.length; i++) {\r\n                isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i]) !== -1;\r\n            }\r\n        }\r\n        if (isGoogleBot) {\r\n            // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n            return false;\r\n        }\r\n        else {\r\n            // for other page views, don't report if it's outside of a reasonable range\r\n            for (var i = 0; i < durations.length; i++) {\r\n                if (durations[i] >= this.MAX_DURATION_ALLOWED) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return PageViewPerformanceManager;\r\n}());\r\nexport { PageViewPerformanceManager };\r\n//# sourceMappingURL=PageViewPerformanceManager.js.map","/**\r\n * ApplicationInsights.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Util, PageViewPerformance, PageView, RemoteDependencyData, Event as EventTelemetry, TelemetryItemCreator, Metric, Exception, SeverityLevel, Trace, ConfigurationManager, DateTimeUtils, PropertiesPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId, } from \"@microsoft/applicationinsights-core-js\";\r\nimport { PageViewManager } from \"./Telemetry/PageViewManager\";\r\nimport { PageVisitTimeManager } from \"./Telemetry/PageVisitTimeManager\";\r\nimport { PageViewPerformanceManager } from './Telemetry/PageViewPerformanceManager';\r\n\"use strict\";\r\nvar durationProperty = \"duration\";\r\nvar ApplicationInsights = /** @class */ (function () {\r\n    function ApplicationInsights() {\r\n        this.identifier = \"ApplicationInsightsAnalytics\"; // do not change name or priority\r\n        this.priority = 180; // take from reserved priority range 100- 200\r\n        this.autoRoutePVDelay = 500; // ms; Time to wait after a route change before triggering a pageview to allow DOM changes to take place\r\n        this._isInitialized = false;\r\n        // Counts number of trackAjax invokations.\r\n        // By default we only monitor X ajax call per view to avoid too much load.\r\n        // Default value is set in config.\r\n        // This counter keeps increasing even after the limit is reached.\r\n        this._trackAjaxAttempts = 0;\r\n        // array with max length of 2 that store current url and previous url for SPA page route change trackPageview use.\r\n        this._prevUri = typeof window === \"object\" && window.location && window.location.href || \"\";\r\n        this.initialize = this._initialize.bind(this);\r\n    }\r\n    ApplicationInsights.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        config.overridePageViewDuration = Util.stringToBoolOrDefault(config.overridePageViewDuration);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableAutoRouteTracking = Util.stringToBoolOrDefault(config.enableAutoRouteTracking);\r\n        config.namePrefix = config.namePrefix || \"\";\r\n        return config;\r\n    };\r\n    ApplicationInsights.prototype.processTelemetry = function (env) {\r\n        var doNotSendItem = false;\r\n        var telemetryInitializersCount = this._telemetryInitializers.length;\r\n        for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n            var telemetryInitializer = this._telemetryInitializers[i];\r\n            if (telemetryInitializer) {\r\n                try {\r\n                    if (telemetryInitializer.apply(null, [env]) === false) {\r\n                        doNotSendItem = true;\r\n                        break;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // log error but dont stop executing rest of the telemetry initializers\r\n                    // doNotSendItem = true;\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                }\r\n            }\r\n        }\r\n        if (!doNotSendItem && !CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(env);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    ApplicationInsights.prototype.trackEvent = function (event, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(event, EventTelemetry.dataType, EventTelemetry.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.\r\n     * @param   name    A string that identifies this event uniquely within the document.\r\n     */\r\n    ApplicationInsights.prototype.startTrackEvent = function (name) {\r\n        try {\r\n            this._eventTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackEventFailed, \"startTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        try {\r\n            this._eventTracking.stop(name, undefined, properties); // Todo: Fix to pass measurements once type is updated\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackEventFailed, \"stopTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a diagnostic message\r\n     * @param {ITraceTelemetry} trace\r\n     * @param ICustomProperties.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackTrace = function (trace, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(trace, Trace.dataType, Trace.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a numeric value that is not associated with a specific event. Typically\r\n     * used to send regular reports of performance indicators. To send single measurement, just\r\n     * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n     * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n     * and sending the resulting average at intervals\r\n     * @param {IMetricTelemetry} metric input object argument. Only name and average are mandatory.\r\n     * @param {{[key: string]: any}} customProperties additional data used to filter metrics in the\r\n     * portal. Defaults to empty.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackMetric = function (metric, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(metric, Metric.dataType, Metric.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackMetricFailed, \"trackMetric failed, metric will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Logs that a page or other item was viewed.\r\n     * @param IPageViewTelemetry The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param customProperties Additional data used to filter events and metrics. Defaults to empty.\r\n     * If a user wants to provide duration for pageLoad, it'll have to be in pageView.properties.duration\r\n     */\r\n    ApplicationInsights.prototype.trackPageView = function (pageView, customProperties) {\r\n        try {\r\n            var inPv = pageView || {};\r\n            this._pageViewManager.trackPageView(inPv, tslib_1.__assign({}, inPv.properties, inPv.measurements, customProperties));\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(inPv.name, inPv.uri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageView failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n     * @param pageView Page view item to be sent\r\n     * @param properties Custom properties (Part C) that a user can add to the telemetry item\r\n     * @param systemProperties System level properties (Part A) that a user can add to the telemetry item\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewInternal = function (pageView, properties, systemProperties) {\r\n        if (typeof document !== \"undefined\") {\r\n            pageView.refUri = pageView.refUri === undefined ? document.referrer : pageView.refUri;\r\n        }\r\n        var telemetryItem = TelemetryItemCreator.create(pageView, PageView.dataType, PageView.envelopeType, this._logger, properties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n        // reset ajaxes counter\r\n        this._trackAjaxAttempts = 0;\r\n    };\r\n    /**\r\n     * @ignore INTERNAL ONLY\r\n     * @param pageViewPerformance\r\n     * @param properties\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewPerformanceInternal = function (pageViewPerformance, properties, systemProperties) {\r\n        var telemetryItem = TelemetryItemCreator.create(pageViewPerformance, PageViewPerformance.dataType, PageViewPerformance.envelopeType, this._logger, properties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Send browser performance metrics.\r\n     * @param pageViewPerformance\r\n     * @param customProperties\r\n     */\r\n    ApplicationInsights.prototype.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n        try {\r\n            this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n            this.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageViewPerformance failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    ApplicationInsights.prototype.startTrackPage = function (name) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            this._pageTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackFailed, \"startTrackPage failed, page view may not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackPage = function (name, url, properties, measurement) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            if (typeof url !== \"string\") {\r\n                url = window.location && window.location.href || \"\";\r\n            }\r\n            this._pageTracking.stop(name, url, properties, measurement);\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(name, url);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackFailed, \"stopTrackPage failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @ignore INTERNAL ONLY\r\n     * @param exception\r\n     * @param properties\r\n     * @param systemProperties\r\n     */\r\n    ApplicationInsights.prototype.sendExceptionInternal = function (exception, customProperties, systemProperties) {\r\n        var exceptionPartB = new Exception(this._logger, exception.exception || new Error(Util.NotSpecified), exception.properties, exception.measurements, exception.severityLevel, exception.id).toInterface();\r\n        var telemetryItem = TelemetryItemCreator.create(exceptionPartB, Exception.dataType, Exception.envelopeType, this._logger, customProperties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Log an exception you have caught.\r\n     *\r\n     * @param {IExceptionTelemetry} exception   Object which contains exception to be sent\r\n     * @param {{[key: string]: any}} customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     *\r\n     * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackException = function (exception, customProperties) {\r\n        try {\r\n            this.sendExceptionInternal(exception, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackExceptionFailed, \"trackException failed, exception will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Custom error handler for Application Insights Analytics\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype._onerror = function (exception) {\r\n        try {\r\n            var properties_1 = {\r\n                url: (exception && exception.url) || document.URL,\r\n                lineNumber: exception.lineNumber,\r\n                columnNumber: exception.columnNumber,\r\n                message: exception.message\r\n            };\r\n            if (Util.isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception.error)) {\r\n                this._sendCORSException(properties_1.url);\r\n            }\r\n            else {\r\n                if (!Util.isError(exception.error)) {\r\n                    var stack = \"window.onerror@\" + properties_1.url + \":\" + exception.lineNumber + \":\" + (exception.columnNumber || 0);\r\n                    exception.error = new Error(exception.message);\r\n                    exception.error.stack = stack;\r\n                }\r\n                this.trackException({ exception: exception.error, severityLevel: SeverityLevel.Error }, properties_1);\r\n            }\r\n        }\r\n        catch (e) {\r\n            var errorString = exception.error ?\r\n                (exception.error.name + \", \" + exception.error.message)\r\n                : \"null\";\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ExceptionWhileLoggingError, \"_onError threw exception while logging error, error will not be collected: \"\r\n                + Util.getExceptionName(e), { exception: Util.dump(e), errorString: errorString });\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (this._isInitialized) {\r\n            return;\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(core)) {\r\n            throw Error(\"Error initializing\");\r\n        }\r\n        this.core = core;\r\n        this._logger = core.logger;\r\n        this._globalconfig = {\r\n            instrumentationKey: config.instrumentationKey,\r\n            endpointUrl: config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\"\r\n        };\r\n        this.config = config.extensionConfig && config.extensionConfig[this.identifier] ? config.extensionConfig[this.identifier] : {};\r\n        // load default values if specified\r\n        var defaults = ApplicationInsights.getDefaultConfig();\r\n        if (defaults !== undefined) {\r\n            for (var field in defaults) {\r\n                // for each unspecified field, set the default value\r\n                this.config[field] = ConfigurationManager.getConfig(config, field, this.identifier, defaults[field]);\r\n            }\r\n            if (this._globalconfig) {\r\n                for (var field in defaults) {\r\n                    if (this._globalconfig[field] === undefined) {\r\n                        this._globalconfig[field] = defaults[field];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isCookieUseDisabled) {\r\n            Util.disableCookies();\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isStorageUseDisabled) {\r\n            Util.disableStorage();\r\n        }\r\n        var configGetters = {\r\n            instrumentationKey: function () { return config.instrumentationKey; },\r\n            accountId: function () { return _this.config.accountId || config.accountId; },\r\n            sessionRenewalMs: function () { return _this.config.sessionRenewalMs || config.sessionRenewalMs; },\r\n            sessionExpirationMs: function () { return _this.config.sessionExpirationMs || config.sessionExpirationMs; },\r\n            sampleRate: function () { return _this.config.samplingPercentage || config.samplingPercentage; },\r\n            cookieDomain: function () { return _this.config.cookieDomain || config.cookieDomain; },\r\n            sdkExtension: function () { return _this.config.sdkExtension || config.sdkExtension; },\r\n            isBrowserLinkTrackingEnabled: function () { return _this.config.isBrowserLinkTrackingEnabled || config.isBrowserLinkTrackingEnabled; },\r\n            appId: function () { return _this.config.appId || config.appId; }\r\n        };\r\n        this._pageViewPerformanceManager = new PageViewPerformanceManager(this.core);\r\n        this._pageViewManager = new PageViewManager(this, this.config.overridePageViewDuration, this.core, this._pageViewPerformanceManager);\r\n        this._pageVisitTimeManager = new PageVisitTimeManager(this._logger, function (pageName, pageUrl, pageVisitTime) { return _this.trackPageVisitTime(pageName, pageUrl, pageVisitTime); });\r\n        this._telemetryInitializers = [];\r\n        this._addDefaultTelemetryInitializers(configGetters);\r\n        this._eventTracking = new Timing(this._logger, \"trackEvent\");\r\n        this._eventTracking.action =\r\n            function (name, url, duration, properties) {\r\n                if (!properties) {\r\n                    properties = {};\r\n                }\r\n                properties[durationProperty] = duration.toString();\r\n                _this.trackEvent({ name: name, properties: properties });\r\n            };\r\n        // initialize page view timing\r\n        this._pageTracking = new Timing(this._logger, \"trackPageView\");\r\n        this._pageTracking.action = function (name, url, duration, properties, measurements) {\r\n            // duration must be a custom property in order for the collector to extract it\r\n            if (CoreUtils.isNullOrUndefined(properties)) {\r\n                properties = {};\r\n            }\r\n            properties[durationProperty] = duration.toString();\r\n            var pageViewItem = {\r\n                name: name,\r\n                uri: url,\r\n                properties: properties,\r\n                measurements: measurements\r\n            };\r\n            _this.sendPageViewInternal(pageViewItem);\r\n        };\r\n        var instance = this;\r\n        if (this.config.disableExceptionTracking === false &&\r\n            !this.config.autoExceptionInstrumented) {\r\n            // We want to enable exception auto collection and it has not been done so yet\r\n            var onerror_1 = \"onerror\";\r\n            var originalOnError_1 = window[onerror_1];\r\n            window.onerror = function (message, url, lineNumber, columnNumber, error) {\r\n                var handled = originalOnError_1 && originalOnError_1(message, url, lineNumber, columnNumber, error);\r\n                if (handled !== true) {\r\n                    instance._onerror({\r\n                        message: message,\r\n                        url: url,\r\n                        lineNumber: lineNumber,\r\n                        columnNumber: columnNumber,\r\n                        error: error\r\n                    });\r\n                }\r\n                return handled;\r\n            };\r\n            this.config.autoExceptionInstrumented = true;\r\n        }\r\n        /**\r\n         * Create a custom \"locationchange\" event which is triggered each time the history object is changed\r\n         */\r\n        if (this.config.enableAutoRouteTracking === true\r\n            && typeof history === \"object\" && typeof history.pushState === \"function\" && typeof history.replaceState === \"function\"\r\n            && typeof window === \"object\"\r\n            && typeof Event !== \"undefined\") {\r\n            var _self_1 = this;\r\n            // Find the properties plugin\r\n            extensions.forEach(function (extension) {\r\n                if (extension.identifier === PropertiesPluginIdentifier) {\r\n                    _this._properties = extension;\r\n                }\r\n            });\r\n            history.pushState = (function (f) { return function pushState() {\r\n                var ret = f.apply(this, arguments);\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"pushState\"));\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"locationchange\"));\r\n                return ret;\r\n            }; })(history.pushState);\r\n            history.replaceState = (function (f) { return function replaceState() {\r\n                var ret = f.apply(this, arguments);\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"replaceState\"));\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"locationchange\"));\r\n                return ret;\r\n            }; })(history.replaceState);\r\n            window.addEventListener(_self_1.config.namePrefix + \"popstate\", function () {\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"locationchange\"));\r\n            });\r\n            window.addEventListener(_self_1.config.namePrefix + \"locationchange\", function () {\r\n                if (_self_1._properties && _self_1._properties.context && _self_1._properties.context.telemetryTrace) {\r\n                    _self_1._properties.context.telemetryTrace.traceID = Util.generateW3CId();\r\n                    _self_1._properties.context.telemetryTrace.name = window.location && window.location.pathname || \"_unknown_\";\r\n                }\r\n                if (_this._currUri) {\r\n                    _this._prevUri = _this._currUri;\r\n                    _this._currUri = window.location && window.location.href || \"\";\r\n                }\r\n                else {\r\n                    _this._currUri = window.location && window.location.href || \"\";\r\n                }\r\n                setTimeout((function (uri) {\r\n                    // todo: override start time so that it is not affected by autoRoutePVDelay\r\n                    _self_1.trackPageView({ refUri: uri, properties: { duration: 0 } }); // SPA route change loading durations are undefined, so send 0\r\n                }).bind(_this, _this._prevUri), _self_1.autoRoutePVDelay);\r\n            });\r\n        }\r\n        this._isInitialized = true;\r\n    };\r\n    /**\r\n     * Log a page visit time\r\n     * @param    pageName    Name of page\r\n     * @param    pageVisitDuration Duration of visit to the page in milleseconds\r\n     */\r\n    ApplicationInsights.prototype.trackPageVisitTime = function (pageName, pageUrl, pageVisitTime) {\r\n        var properties = { PageName: pageName, PageUrl: pageUrl };\r\n        this.trackMetric({\r\n            name: \"PageVisitTime\",\r\n            average: pageVisitTime,\r\n            max: pageVisitTime,\r\n            min: pageVisitTime,\r\n            sampleCount: 1\r\n        }, properties);\r\n    };\r\n    ApplicationInsights.prototype._addDefaultTelemetryInitializers = function (configGetters) {\r\n        if (!configGetters.isBrowserLinkTrackingEnabled()) {\r\n            var browserLinkPaths_1 = ['/browserLinkSignalR/', '/__browserLink/'];\r\n            var dropBrowserLinkRequests = function (envelope) {\r\n                if (envelope.baseType === RemoteDependencyData.dataType) {\r\n                    var remoteData = envelope.baseData;\r\n                    if (remoteData) {\r\n                        for (var i = 0; i < browserLinkPaths_1.length; i++) {\r\n                            if (remoteData.target && remoteData.target.indexOf(browserLinkPaths_1[i]) >= 0) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            };\r\n            this._addTelemetryInitializer(dropBrowserLinkRequests);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype._addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._sendCORSException = function (url) {\r\n        var exception = {\r\n            message: \"Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.\",\r\n            url: url,\r\n            lineNumber: 0,\r\n            columnNumber: 0,\r\n            error: undefined\r\n        };\r\n        var telemetryItem = TelemetryItemCreator.create(exception, Exception.dataType, Exception.envelopeType, this._logger, { url: url });\r\n        this.core.track(telemetryItem);\r\n    };\r\n    ApplicationInsights.Version = \"2.2.3\"; // Not currently used anywhere\r\n    return ApplicationInsights;\r\n}());\r\nexport { ApplicationInsights };\r\n/**\r\n * Used to record timed events and page views.\r\n */\r\nvar Timing = /** @class */ (function () {\r\n    function Timing(logger, name) {\r\n        this._name = name;\r\n        this._events = {};\r\n        this._logger = logger;\r\n    }\r\n    Timing.prototype.start = function (name) {\r\n        if (typeof this._events[name] !== \"undefined\") {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StartCalledMoreThanOnce, \"start was called more than once for this event without calling stop.\", { name: this._name, key: name }, true);\r\n        }\r\n        this._events[name] = +new Date;\r\n    };\r\n    Timing.prototype.stop = function (name, url, properties, measurements) {\r\n        var start = this._events[name];\r\n        if (isNaN(start)) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StopCalledWithoutStart, \"stop was called without a corresponding start.\", { name: this._name, key: name }, true);\r\n        }\r\n        else {\r\n            var end = +new Date;\r\n            var duration = DateTimeUtils.GetDuration(start, end);\r\n            this.action(name, url, duration, properties, measurements);\r\n        }\r\n        delete this._events[name];\r\n        this._events[name] = undefined;\r\n    };\r\n    return Timing;\r\n}());\r\n//# sourceMappingURL=ApplicationInsights.js.map"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","StorageType","FieldType","DistributedTracingModes","__assign","assign","t","s","i","n","arguments","length","call","apply","CoreUtils","isNullOrUndefined","input","disableCookies","_canUseCookies","newGuid","replace","GuidRegex","c","r","Math","random","toString","LoggingSeverity","ChannelController","processTelemetry","item","channelQueue","forEach","queues","defineProperty","get","enumerable","configurable","initialize","config","core","extensions","invalidChannelIdentifier_1","_this","isCookieUseDisabled","channels","queue","sort","a","priority","setNextPlugin","queueItem","identifier","Error","push","arr","plugin","_InternalMessageId","DataSanitizer","sanitizeKeyAndAddUniqueness","logger","key","map","origLength","field","sanitizeKey","uniqueField","undefined","substring","MAX_NAME_LENGTH","padNumber","name","nameTrunc","trim","throwInternal","WARNING","sanitizeString","value","maxLength","valueTrunc","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","message","messageTrunc","MAX_MESSAGE_LENGTH","sanitizeException","exception","exceptionTrunc","MAX_EXCEPTION_LENGTH","sanitizeProperties","properties","tempProps","prop","JSON","stringify","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","inputTrunc","data","num","substr","str","Util","createDomEvent","eventName","event","Event","document","createEvent","initEvent","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","Date","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","canUseCookies","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","random32","generateW3CId","tmp","hexValues","oct","clockSequenceHi","isArray","obj","isError","isDate","toISOStringForIE8","date","toISOString","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","getExtension","extension","extIx","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","host","parseHost","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","match","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","_super","Data","tslib_1.__extends","Envelope","ver","sampleRate","tags","time","aiDataContract","Required","iKey","Hidden","Domain","EventData","envelopeType","dataType","Default","StackFrame","ExceptionData","exceptions","ExceptionDetails","hasFullStack","parsedStack","Exception","CreateFromInterface","ex","_ExceptionDetails","tslib_1.__assign","toInterface","_a","severityLevel","problemGroup","isManual","CreateSimpleException","typeName","assembly","fileName","details","line","frame","outerId","_StackFrame","parseStack","frames_1","level","totalSizeInBytes","regex","test","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","splice","baseSize","sourceFrame","matches","DataPointType","MetricData","metrics","DataPoint","kind","Measurement","count","max","stdDev","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","GeneratedRemoteDependencyData","resultCode","requestAPI","correlationContext","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","MessageData","Trace","PageViewPerfData","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","SeverityLevel","AIData","baseType","baseData","ConfigurationManager","getConfig","configValue","extensionConfig","TelemetryItemCreator","envelopeName","customProperties","systemProperties","telemetryItem","ext","PageViewManager","trackPageView","pageView","title","uri","_pageViewPerformanceManager","isPerformanceTimingSupported","appInsights","sendPageViewInternal","_channel","q","flush","_logger","customDuration","pageViewSent","getPerformanceTiming","shouldCollectDuration","overridePageViewDuration","handle","setInterval","isPerformanceTimingDataReady","clearInterval","pageViewPerformance","populatePageViewPerformanceEvent","isValid","pageViewPerformanceSent","sendPageViewPerformanceInternal","CRITICAL","pageViewPerformanceManager","getTransmissionControls","PageVisitTimeManager","trackPreviousPageVisit","currentPageName","currentPageUrl","prevPageVisitTimeData","restartPageVisitTimer","pageVisitTimeTrackingHandler","pageName","pageUrl","pageVisitTime","warnToConsole","prevPageVisitData","stopPageVisitTimer","startPageVisitTimer","prevPageVisitDataKeyName","currPageVisitData","PageVisitData","currPageVisitDataStr","pageVisitEndTime","pageVisitDataJsonStr","parse","pageVisitStartTime","PageViewPerformanceManager","navigationTiming","getPerformanceNavigationTiming","total","network","startTime","connectEnd","request","requestStart","responseStart","response","responseEnd","dom","loadEventEnd","isPerformanceNavigationTimingSupported","getEntriesByType","domainLookupStart","domLoading","durations","_i","botAgentNames","isGoogleBot","MAX_DURATION_ALLOWED","durationProperty","ApplicationInsights","getDefaultConfig","sessionRenewalMs","sessionExpirationMs","disableExceptionTracking","autoTrackPageVisitTime","samplingPercentage","isStorageUseDisabled","isBrowserLinkTrackingEnabled","enableAutoRouteTracking","namePrefix","env","doNotSendItem","telemetryInitializersCount","_telemetryInitializers","telemetryInitializer","_nextPlugin","next","trackEvent","EventTelemetry","track","startTrackEvent","_eventTracking","stopTrackEvent","stop","trackTrace","trace","trackMetric","metric","inPv","_pageViewManager","_pageVisitTimeManager","refUri","referrer","_trackAjaxAttempts","trackPageViewPerformance","startTrackPage","_pageTracking","stopTrackPage","measurement","sendExceptionInternal","exceptionPartB","trackException","_onerror","properties_1","URL","_sendCORSException","errorString","addTelemetryInitializer","_initialize","_isInitialized","_globalconfig","instrumentationKey","defaults","configGetters","accountId","cookieDomain","sdkExtension","appId","trackPageVisitTime","_addDefaultTelemetryInitializers","Timing","action","pageViewItem","f","instance","autoExceptionInstrumented","originalOnError_1","onerror","handled","history","pushState","replaceState","_self_1","_properties","ret","dispatchEvent","context","telemetryTrace","traceID","_currUri","_prevUri","setTimeout","bind","autoRoutePVDelay","PageName","PageUrl","average","sampleCount","browserLinkPaths_1","_addTelemetryInitializer","envelope","remoteData","Version","_events","_name"],"mappings":"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"}