{"version":3,"file":"ai.2.min.js","sources":["../../shared/AppInsightsCommon/dist-esm/Enums.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/ChannelController.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/BaseCore.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/NotificationManager.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/DiagnosticLogger.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/AppInsightsCore.js","../../shared/AppInsightsCommon/dist-esm/RequestResponseHeaders.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataSanitizer.js","../../shared/AppInsightsCommon/dist-esm/Util.js","../../shared/AppInsightsCommon/dist-esm/Constants.js","../../common/temp/node_modules/tslib/tslib.es6.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Data.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Base.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Envelope.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Domain.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/EventData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Event.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Exception.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataPoint.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Metric.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/PageView.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/RemoteDependencyData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Trace.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/PageViewPerformance.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Data.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/IConfig.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","../../shared/AppInsightsCommon/dist-esm/TelemetryItemCreator.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/PartAExtensions.js","../../shared/AppInsightsCommon/dist-esm/applicationinsights-common.js","../dist-esm/ApplicationInsightsDeprecated.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageVisitTimeManager.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/ApplicationInsights.js","../../channels/applicationinsights-channel-js/dist-esm/SendBuffer.js","../../channels/applicationinsights-channel-js/dist-esm/EnvelopeCreator.js","../../channels/applicationinsights-channel-js/dist-esm/Serializer.js","../../channels/applicationinsights-channel-js/dist-esm/Offline.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryProcessors/Sample.js","../../channels/applicationinsights-channel-js/dist-esm/Sender.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Session.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Application.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Device.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Internal.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/User.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Location.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js","../../extensions/applicationinsights-properties-js/dist-esm/TelemetryContext.js","../../extensions/applicationinsights-properties-js/dist-esm/PropertiesPlugin.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajaxRecord.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajaxUtils.js","../../extensions/applicationinsights-dependencies-js/dist-esm/TraceParent.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajax.js","../dist-esm/Initialization.js","../dist-esm/ApplicationInsightsContainer.js","../dist-esm/Init.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Type of storage to differentiate between local storage and session storage\r\n */\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\nexport var DistributedTracingModes;\r\n(function (DistributedTracingModes) {\r\n    /**\r\n     * (Default) Send Application Insights correlation headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI\"] = 0] = \"AI\";\r\n    /**\r\n     * Send both W3C Trace Context headers and back-compatibility Application Insights headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI_AND_W3C\"] = 1] = \"AI_AND_W3C\";\r\n    /**\r\n     * Send W3C Trace Context headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"W3C\"] = 2] = \"W3C\";\r\n})(DistributedTracingModes || (DistributedTracingModes = {}));\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nexport var EventsDiscardedReason = {\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5,\r\n};\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n     * Creates a new GUID.\r\n     * @return {string} A GUID.\r\n     */\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","import { CoreUtils } from \"./CoreUtils\";\r\n\"use strict\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (config.isCookieUseDisabled) {\r\n            CoreUtils.disableCookies();\r\n        }\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nexport { ChannelController };\r\n//# sourceMappingURL=ChannelController.js.map","import { CoreUtils } from \"./CoreUtils\";\r\nimport { ChannelController } from './ChannelController';\r\n\"use strict\";\r\nvar validationError = \"Extensions must provide callback to initialize\";\r\nvar BaseCore = /** @class */ (function () {\r\n    function BaseCore() {\r\n        this._isInitialized = false;\r\n        this._extensions = new Array();\r\n        this._channelController = new ChannelController();\r\n    }\r\n    BaseCore.prototype.initialize = function (config, extensions, logger, notificationManager) {\r\n        var _this = this;\r\n        // Make sure core is only initialized once\r\n        if (this._isInitialized) {\r\n            throw Error(\"Core should not be initialized more than once\");\r\n        }\r\n        if (!config || CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n            throw Error(\"Please provide instrumentation key\");\r\n        }\r\n        this.config = config;\r\n        this._notificationManager = notificationManager;\r\n        if (!this._notificationManager) {\r\n            this._notificationManager = Object.create({\r\n                addNotificationListener: function (listener) { },\r\n                removeNotificationListener: function (listener) { },\r\n                eventsSent: function (events) { },\r\n                eventsDiscarded: function (events, reason) { }\r\n            });\r\n        }\r\n        this.config.extensions = CoreUtils.isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions;\r\n        // add notification to the extensions in the config so other plugins can access it\r\n        this.config.extensionConfig = CoreUtils.isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig;\r\n        if (this._notificationManager) {\r\n            this.config.extensionConfig.NotificationManager = this._notificationManager;\r\n        }\r\n        this.logger = logger;\r\n        if (!this.logger) {\r\n            this.logger = Object.create({\r\n                throwInternal: function (severity, msgId, msg, properties, isUserAct) {\r\n                    if (isUserAct === void 0) { isUserAct = false; }\r\n                },\r\n                warnToConsole: function (message) { },\r\n                resetInternalMessageCount: function () { }\r\n            });\r\n        }\r\n        // Concat all available extensions \r\n        (_a = this._extensions).push.apply(_a, extensions.concat(this.config.extensions));\r\n        // Initial validation \r\n        this._extensions.forEach(function (extension) {\r\n            var isValid = true;\r\n            if (CoreUtils.isNullOrUndefined(extension) || CoreUtils.isNullOrUndefined(extension.initialize)) {\r\n                isValid = false;\r\n            }\r\n            if (!isValid) {\r\n                throw Error(validationError);\r\n            }\r\n        });\r\n        // Initial validation complete\r\n        this._extensions.push(this._channelController);\r\n        // Sort by priority\r\n        this._extensions = this._extensions.sort(function (a, b) {\r\n            var extA = a;\r\n            var extB = b;\r\n            var typeExtA = typeof extA.processTelemetry;\r\n            var typeExtB = typeof extB.processTelemetry;\r\n            if (typeExtA === 'function' && typeExtB === 'function') {\r\n                return extA.priority - extB.priority;\r\n            }\r\n            if (typeExtA === 'function' && typeExtB !== 'function') {\r\n                // keep non telemetryplugin specific extensions at start\r\n                return 1;\r\n            }\r\n            if (typeExtA !== 'function' && typeExtB === 'function') {\r\n                return -1;\r\n            }\r\n        });\r\n        // sort complete\r\n        // Check if any two extensions have the same priority, then warn to console\r\n        var priority = {};\r\n        this._extensions.forEach(function (ext) {\r\n            var t = ext;\r\n            if (t && t.priority) {\r\n                if (!CoreUtils.isNullOrUndefined(priority[t.priority])) {\r\n                    if (_this.logger) {\r\n                        _this.logger.warnToConsole(\"Two extensions have same priority\" + priority[t.priority] + \", \" + t.identifier);\r\n                    }\r\n                }\r\n                else {\r\n                    priority[t.priority] = t.identifier; // set a value\r\n                }\r\n            }\r\n        });\r\n        var c = -1;\r\n        // Set next plugin for all until channel controller\r\n        for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n            var curr = (this._extensions[idx]);\r\n            if (curr && typeof curr.processTelemetry !== 'function') {\r\n                // these are initialized only, allowing an entry point for extensions to be initialized when SDK initializes\r\n                continue;\r\n            }\r\n            if (curr.priority === this._channelController.priority) {\r\n                c = idx + 1;\r\n                break; // channel controller will set remaining pipeline\r\n            }\r\n            this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n        }\r\n        // initialize channel controller first, this will initialize all channel plugins\r\n        this._channelController.initialize(this.config, this, this._extensions);\r\n        // initialize remaining regular plugins\r\n        this._extensions.forEach(function (ext) {\r\n            var e = ext;\r\n            if (e && e.priority < _this._channelController.priority) {\r\n                ext.initialize(_this.config, _this, _this._extensions); // initialize\r\n            }\r\n        });\r\n        // Remove sender channels from main list\r\n        if (c < this._extensions.length) {\r\n            this._extensions.splice(c);\r\n        }\r\n        if (this.getTransmissionControls().length === 0) {\r\n            throw new Error(\"No channels available\");\r\n        }\r\n        this._isInitialized = true;\r\n        var _a;\r\n    };\r\n    BaseCore.prototype.getTransmissionControls = function () {\r\n        return this._channelController.ChannelControls;\r\n    };\r\n    BaseCore.prototype.track = function (telemetryItem) {\r\n        if (!telemetryItem.iKey) {\r\n            // setup default iKey if not passed in\r\n            telemetryItem.iKey = this.config.instrumentationKey;\r\n        }\r\n        if (!telemetryItem.time) {\r\n            // add default timestamp if not passed in\r\n            telemetryItem.time = new Date().toISOString();\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.ver)) {\r\n            // CommonSchema 4.0\r\n            telemetryItem.ver = \"4.0\";\r\n        }\r\n        // invoke any common telemetry processors before sending through pipeline\r\n        if (this._extensions.length === 0) {\r\n            this._channelController.processTelemetry(telemetryItem); // Pass to Channel controller so data is sent to correct channel queues\r\n        }\r\n        var i = 0;\r\n        while (i < this._extensions.length) {\r\n            if (this._extensions[i].processTelemetry) {\r\n                this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n    };\r\n    return BaseCore;\r\n}());\r\nexport { BaseCore };\r\n//# sourceMappingURL=BaseCore.js.map","/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager() {\r\n        this.listeners = [];\r\n    }\r\n    /**\r\n     * Adds a notification listener.\r\n     * @param {INotificationListener} listener - The notification listener to be added.\r\n     */\r\n    NotificationManager.prototype.addNotificationListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n     */\r\n    NotificationManager.prototype.removeNotificationListener = function (listener) {\r\n        var index = this.listeners.indexOf(listener);\r\n        while (index > -1) {\r\n            this.listeners.splice(index, 1);\r\n            index = this.listeners.indexOf(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events sent.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n     */\r\n    NotificationManager.prototype.eventsSent = function (events) {\r\n        var _this = this;\r\n        var _loop_1 = function (i) {\r\n            if (this_1.listeners[i].eventsSent) {\r\n                setTimeout(function () { return _this.listeners[i].eventsSent(events); }, 0);\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events being discarded.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n     * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n     * constant should be used to check the different values.\r\n     */\r\n    NotificationManager.prototype.eventsDiscarded = function (events, reason) {\r\n        var _this = this;\r\n        var _loop_2 = function (i) {\r\n            if (this_2.listeners[i].eventsDiscarded) {\r\n                setTimeout(function () { return _this.listeners[i].eventsDiscarded(events, reason); }, 0);\r\n            }\r\n        };\r\n        var this_2 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_2(i);\r\n        }\r\n    };\r\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n    FailedMonitorAjaxSetRequestHeader: 71,\r\n    SendBrowserInfoOnUserInit: 72\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { _InternalMessageId, LoggingSeverity } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        this.messageId = msgId;\r\n        this.message =\r\n            (isUserAct ? _InternalLogMessage.AiUserActionablePrefix : _InternalLogMessage.AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var diagnosticText = (msg ? \" message:\" + _InternalLogMessage.sanitizeDiagnosticText(msg) : \"\") +\r\n            (properties ? \" props:\" + _InternalLogMessage.sanitizeDiagnosticText(JSON.stringify(properties)) : \"\");\r\n        this.message += diagnosticText;\r\n    }\r\n    _InternalLogMessage.sanitizeDiagnosticText = function (text) {\r\n        return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n    };\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    /**\r\n     * For user non actionable traces use AI Internal prefix.\r\n     */\r\n    _InternalLogMessage.AiNonUserActionablePrefix = \"AI (Internal): \";\r\n    /**\r\n     * Prefix of the traces in portal.\r\n     */\r\n    _InternalLogMessage.AiUserActionablePrefix = \"AI: \";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         *  Session storage key for the prefix for the key indicating message type already logged\r\n         */\r\n        this.AIInternalMessagePrefix = \"AITR_\";\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        this._messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        this._messageLogged = {};\r\n        /**\r\n         * When this is true the SDK will throw exceptions to aid in debugging.\r\n         */\r\n        this.enableDebugExceptions = function () { return false; };\r\n        /**\r\n         * 0: OFF (default)\r\n         * 1: CRITICAL\r\n         * 2: >= WARNING\r\n         */\r\n        this.consoleLoggingLevel = function () { return 0; };\r\n        /**\r\n         * 0: OFF\r\n         * 1: CRITICAL (default)\r\n         * 2: >= WARNING\r\n         */\r\n        this.telemetryLoggingLevel = function () { return 1; };\r\n        /**\r\n         * The maximum number of internal messages allowed to be sent per page view\r\n         */\r\n        this.maxInternalMessageLimit = function () { return 25; };\r\n        if (CoreUtils.isNullOrUndefined(config)) {\r\n            // TODO: Use default config\r\n            // config = AppInsightsCore.defaultConfig;\r\n            // For now, use defaults specified in DiagnosticLogger members;\r\n            return;\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelConsole)) {\r\n            this.consoleLoggingLevel = function () { return config.loggingLevelConsole; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelTelemetry)) {\r\n            this.telemetryLoggingLevel = function () { return config.loggingLevelTelemetry; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.maxMessageLimit)) {\r\n            this.maxInternalMessageLimit = function () { return config.maxMessageLimit; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.enableDebugExceptions)) {\r\n            this.enableDebugExceptions = function () { return config.enableDebugExceptions; };\r\n        }\r\n    }\r\n    /**\r\n     * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The log message.\r\n     */\r\n    DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n        if (this.enableDebugExceptions()) {\r\n            throw message;\r\n        }\r\n        else {\r\n            if (typeof (message) !== \"undefined\" && !!message) {\r\n                if (typeof (message.message) !== \"undefined\") {\r\n                    if (isUserAct) {\r\n                        // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                        var messageKey = +message.messageId;\r\n                        if (!this._messageLogged[messageKey] || this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                            this._messageLogged[messageKey] = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                        if (this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                        }\r\n                    }\r\n                    this.logInternalMessage(severity, message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This will write a warning to the console if possible\r\n     * @param message {string} - The warning message\r\n     */\r\n    DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n        if (typeof console !== \"undefined\" && !!console) {\r\n            if (typeof console.warn === \"function\") {\r\n                console.warn(message);\r\n            }\r\n            else if (typeof console.log === \"function\") {\r\n                console.log(message);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Resets the internal message count\r\n     */\r\n    DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n        this._messageCount = 0;\r\n        this._messageLogged = {};\r\n    };\r\n    /**\r\n     * Logs a message to the internal queue.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The message to log.\r\n     */\r\n    DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n        if (this._areInternalMessagesThrottled()) {\r\n            return;\r\n        }\r\n        // check if this message type was already logged for this session and if so, don't log it again\r\n        var logMessage = true;\r\n        var messageKey = this.AIInternalMessagePrefix + message.messageId;\r\n        // if the session storage is not available, limit to only one message type per page view\r\n        if (this._messageLogged[messageKey]) {\r\n            logMessage = false;\r\n        }\r\n        else {\r\n            this._messageLogged[messageKey] = true;\r\n        }\r\n        if (logMessage) {\r\n            // Push the event in the internal queue\r\n            if (severity <= this.telemetryLoggingLevel()) {\r\n                this.queue.push(message);\r\n                this._messageCount++;\r\n            }\r\n            // When throttle limit reached, send a special event\r\n            if (this._messageCount === this.maxInternalMessageLimit()) {\r\n                var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                var throttleMessage = new _InternalLogMessage(_InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                this.queue.push(throttleMessage);\r\n                this.warnToConsole(throttleLimitMessage);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Indicates whether the internal events are throttled\r\n     */\r\n    DiagnosticLogger.prototype._areInternalMessagesThrottled = function () {\r\n        return this._messageCount >= this.maxInternalMessageLimit();\r\n    };\r\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\n//# sourceMappingURL=DiagnosticLogger.js.map","import { BaseCore } from './BaseCore';\r\nimport { EventsDiscardedReason } from \"../JavaScriptSDK.Enums/EventsDiscardedReason\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { _InternalLogMessage, DiagnosticLogger } from \"./DiagnosticLogger\";\r\n\"use strict\";\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        this.baseCore = new BaseCore();\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n        this._notificationManager = new NotificationManager();\r\n        this.logger = new DiagnosticLogger(config);\r\n        this.config = config;\r\n        this.baseCore.initialize(config, extensions, this.logger, this._notificationManager);\r\n    };\r\n    AppInsightsCore.prototype.getTransmissionControls = function () {\r\n        return this.baseCore.getTransmissionControls();\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        if (telemetryItem === null) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            // throw error\r\n            throw Error(\"Invalid telemetry item\");\r\n        }\r\n        // do basic validation before sending it through the pipeline\r\n        this._validateTelemetryItem(telemetryItem);\r\n        this.baseCore.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        if (this._notificationManager) {\r\n            this._notificationManager.addNotificationListener(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        if (this._notificationManager) {\r\n            this._notificationManager.removeNotificationListener(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function (eventName) {\r\n        var _this = this;\r\n        var interval = this.baseCore.config.diagnosticLogInterval;\r\n        if (!(interval > 0)) {\r\n            interval = 10000;\r\n        }\r\n        return setInterval(function () {\r\n            var queue = _this.logger ? _this.logger.queue : [];\r\n            queue.forEach(function (logMessage) {\r\n                var item = {\r\n                    name: eventName ? eventName : \"InternalMessageId: \" + logMessage.messageId,\r\n                    iKey: _this.baseCore.config.instrumentationKey,\r\n                    time: new Date().toISOString(),\r\n                    baseType: _InternalLogMessage.dataType,\r\n                    baseData: { message: logMessage.message }\r\n                };\r\n                _this.track(item);\r\n            });\r\n            queue.length = 0;\r\n        }, interval);\r\n    };\r\n    AppInsightsCore.prototype._validateTelemetryItem = function (telemetryItem) {\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry name required\");\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._notifyInvalidEvent = function (telemetryItem) {\r\n        if (this._notificationManager) {\r\n            this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);\r\n        }\r\n    };\r\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar RequestHeaders = /** @class */ (function () {\r\n    function RequestHeaders() {\r\n    }\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    RequestHeaders.requestContextHeader = \"Request-Context\";\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    RequestHeaders.requestContextTargetKey = \"appId\";\r\n    /**\r\n     * Request-Context appId format\r\n     */\r\n    RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    RequestHeaders.requestIdHeader = \"Request-Id\";\r\n    /**\r\n     * W3C distributed tracing protocol header\r\n     */\r\n    RequestHeaders.traceParentHeader = \"traceparent\";\r\n    /**\r\n     * Sdk-Context header\r\n     * If this header passed with appId in content then appId will be returned back by the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n    /**\r\n     * String to pass in header for requesting appId back from the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n    RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n    return RequestHeaders;\r\n}());\r\nexport { RequestHeaders };\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        var nameTrunc;\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                nameTrunc = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return nameTrunc || name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        var valueTrunc;\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                valueTrunc = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return valueTrunc || value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        var messageTrunc;\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                messageTrunc = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return messageTrunc || message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        var exceptionTrunc;\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exceptionTrunc = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exceptionTrunc || exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        var inputTrunc;\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                inputTrunc = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return inputTrunc || input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\") {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * Max length allowed for custom names.\r\n     */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    Util.createDomEvent = function (eventName) {\r\n        var event = null;\r\n        if (typeof Event === \"function\") {\r\n            event = new Event(eventName);\r\n        }\r\n        else {\r\n            event = document.createEvent(\"Event\");\r\n            event.initEvent(eventName, true, true);\r\n        }\r\n        return event;\r\n    };\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid.toString(), uid.toString());\r\n            fail = storage.getItem(uid.toString()) !== uid.toString();\r\n            storage.removeItem(uid.toString());\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        CoreUtils.disableCookies();\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (CoreUtils._canUseCookies === undefined) {\r\n            CoreUtils._canUseCookies = false;\r\n            try {\r\n                CoreUtils._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return CoreUtils._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\") {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; // 5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * generate a random 32bit number (-0x80000000..0x7FFFFFFF).\r\n     */\r\n    Util.random32 = function () {\r\n        return (0x100000000 * Math.random()) | 0;\r\n    };\r\n    /**\r\n     * generate W3C trace id\r\n     */\r\n    Util.generateW3CId = function () {\r\n        var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n        // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n        var oct = \"\", tmp;\r\n        for (var a = 0; a < 4; a++) {\r\n            tmp = Util.random32();\r\n            oct +=\r\n                hexValues[tmp & 0xF] +\r\n                    hexValues[tmp >> 4 & 0xF] +\r\n                    hexValues[tmp >> 8 & 0xF] +\r\n                    hexValues[tmp >> 12 & 0xF] +\r\n                    hexValues[tmp >> 16 & 0xF] +\r\n                    hexValues[tmp >> 20 & 0xF] +\r\n                    hexValues[tmp >> 24 & 0xF] +\r\n                    hexValues[tmp >> 28 & 0xF];\r\n        }\r\n        // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n        var clockSequenceHi = hexValues[8 + (Math.random() * 4) | 0];\r\n        return oct.substr(0, 8) + oct.substr(9, 4) + \"4\" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') !== -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n     * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n     * happens in a script from other domain (cross origin, CORS).\r\n     */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n     * Returns string representation of an object suitable for diagnostics logging.\r\n     */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n     * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n     */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.getExtension = function (extensions, identifier) {\r\n        var extension = null;\r\n        var extIx = 0;\r\n        while (!extension && extIx < extensions.length) {\r\n            if (extensions[extIx] && extensions[extIx].identifier === identifier) {\r\n                extension = extensions[extIx];\r\n            }\r\n            extIx++;\r\n        }\r\n        return extension;\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations\r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : { host: UrlHelper.parseHost(url) }; // fill host field in the fallback case as that is the only externally required field from this fn\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    // Fallback method to grab host from url if document.createElement method is not available\r\n    UrlHelper.parseHost = function (url) {\r\n        var match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\r\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\r\n            return match[2];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n     * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n     */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var includedDomains = config && config.correlationHeaderDomains;\r\n        if (includedDomains) {\r\n            var matchExists_1;\r\n            includedDomains.forEach(function (domain) {\r\n                var regex = new RegExp(domain.toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n            });\r\n            if (!matchExists_1) {\r\n                return false;\r\n            }\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length === 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Combines target appId and target role name from response header.\r\n     */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets key from correlation response header\r\n     */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length === 2 && keyValue[0] === key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\n//# sourceMappingURL=Constants.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Data struct to contain only C section with custom fields.\r\n */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n            if (id) {\r\n                _this.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _this.exceptions = exception.exceptions;\r\n            _this.properties = exception.properties;\r\n            _this.measurements = exception.measurements;\r\n            if (exception.severityLevel) {\r\n                _this.severityLevel = exception.severityLevel;\r\n            }\r\n            if (exception.id) {\r\n                _this.id = exception.id;\r\n            }\r\n            if (exception.problemGroup) {\r\n                _this.problemGroup = exception.problemGroup;\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            _this.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n            if (!CoreUtils.isNullOrUndefined(exception.isManual)) {\r\n                _this.isManual = exception.isManual;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    Exception.CreateFromInterface = function (logger, exception) {\r\n        var exceptions = exception.exceptions\r\n            && exception.exceptions.map(function (ex) { return _ExceptionDetails.CreateFromInterface(logger, ex); });\r\n        var exceptionData = new Exception(logger, tslib_1.__assign({}, exception, { exceptions: exceptions }));\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a = this, exceptions = _a.exceptions, properties = _a.properties, measurements = _a.measurements, severityLevel = _a.severityLevel, ver = _a.ver, problemGroup = _a.problemGroup, id = _a.id, isManual = _a.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && exceptions.map(function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return {\r\n            ver: \"4.0\",\r\n            exceptions: exceptionDetailsInterface,\r\n            severityLevel: severityLevel,\r\n            properties: properties,\r\n            measurements: measurements,\r\n            problemGroup: problemGroup,\r\n            id: id,\r\n            isManual: isManual\r\n        };\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n            _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n            var stack = exception.stack;\r\n            _this.parsedStack = _ExceptionDetails.parseStack(stack);\r\n            _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        }\r\n        else {\r\n            _this.typeName = exception.typeName;\r\n            _this.message = exception.message;\r\n            _this.stack = exception.stack;\r\n            _this.parsedStack = exception.parsedStack;\r\n            _this.hasFullStack = exception.hasFullStack;\r\n        }\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var parsedStack = this.parsedStack instanceof Array\r\n            && this.parsedStack.map(function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = {\r\n            id: this.id,\r\n            outerId: this.outerId,\r\n            typeName: this.typeName,\r\n            message: this.message,\r\n            hasFullStack: this.hasFullStack,\r\n            stack: this.stack,\r\n            parsedStack: parsedStack || undefined\r\n        };\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception.parsedStack instanceof Array\r\n            && exception.parsedStack.map(function (frame) { return _StackFrame.CreateFromInterface(frame); }))\r\n            || exception.parsedStack;\r\n        var exceptionDetails = new _ExceptionDetails(logger, tslib_1.__assign({}, exception, { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    _ExceptionDetails.parseStack = function (stack) {\r\n        var parsedStack;\r\n        if (typeof stack === \"string\") {\r\n            var frames_1 = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames_1.length; i++) {\r\n                var frame = frames_1[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames_1[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(sourceFrame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default,\r\n        };\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util.trim(frame);\r\n            _this.fileName = \"\";\r\n            _this.line = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _this.level = sourceFrame.level;\r\n            _this.method = sourceFrame.method;\r\n            _this.assembly = sourceFrame.assembly;\r\n            _this.fileName = sourceFrame.fileName;\r\n            _this.line = sourceFrame.line;\r\n            _this.sizeInBytes = 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        return {\r\n            level: this.level,\r\n            method: this.method,\r\n            assembly: this.assembly,\r\n            fileName: this.fileName,\r\n            line: this.line\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util, AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = DataSanitizer.sanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _this.target = _this.target + \" | \" + correlationContext;\r\n        }\r\n        _this.name = DataSanitizer.sanitizeString(logger, dependencyFields.name);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _this.domProcessing = cs4BaseData.domProcessing;\r\n            _this.duration = cs4BaseData.duration;\r\n            _this.networkConnect = cs4BaseData.networkConnect;\r\n            _this.perfTotal = cs4BaseData.perfTotal;\r\n            _this.receivedResponse = cs4BaseData.receivedResponse;\r\n            _this.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.applicationBuild = \"ai.application.build\";\r\n        this.applicationTypeId = \"ai.application.typeId\";\r\n        this.applicationId = \"ai.application.applicationId\";\r\n        this.applicationLayer = \"ai.application.layer\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceIp = \"ai.device.ip\";\r\n        this.deviceLanguage = \"ai.device.language\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n        this.deviceNetwork = \"ai.device.network\";\r\n        this.deviceNetworkName = \"ai.device.networkName\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOS = \"ai.device.os\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n        this.deviceRoleName = \"ai.device.roleName\";\r\n        this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.deviceMachineName = \"ai.device.machineName\";\r\n        this.deviceVMName = \"ai.device.vmName\";\r\n        this.deviceBrowser = \"ai.device.browser\";\r\n        this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.locationCountry = \"ai.location.country\";\r\n        this.locationProvince = \"ai.location.province\";\r\n        this.locationCity = \"ai.location.city\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationRootId = \"ai.operation.rootId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.sessionIsNew = \"ai.session.isNew\";\r\n        this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userAgent = \"ai.user.userAgent\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userStoreRegion = \"ai.user.storeRegion\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n        this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n        this.cloudName = \"ai.cloud.name\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.cloudEnvironment = \"ai.cloud.environment\";\r\n        this.cloudLocation = \"ai.cloud.location\";\r\n        this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from \"./Util\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { CoreUtils } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item domain specific properties; part B\r\n     * @param baseType telemetry item type. ie PageViewData\r\n     * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties user defined custom properties; part C\r\n     * @param systemProperties system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n        envelopeName = DataSanitizer.sanitizeString(logger, envelopeName) || Util.NotSpecified;\r\n        if (CoreUtils.isNullOrUndefined(item) ||\r\n            CoreUtils.isNullOrUndefined(baseType) ||\r\n            CoreUtils.isNullOrUndefined(envelopeName)) {\r\n            throw Error(\"Input doesn't contain all required fields\");\r\n        }\r\n        var telemetryItem = {\r\n            name: envelopeName,\r\n            time: new Date().toISOString(),\r\n            iKey: \"\",\r\n            ext: systemProperties ? systemProperties : {},\r\n            tags: [],\r\n            data: {},\r\n            baseType: baseType,\r\n            baseData: item // Part B\r\n        };\r\n        // Part C\r\n        if (!CoreUtils.isNullOrUndefined(customProperties)) {\r\n            for (var prop in customProperties) {\r\n                if (customProperties.hasOwnProperty(prop)) {\r\n                    telemetryItem.data[prop] = customProperties[prop];\r\n                }\r\n            }\r\n        }\r\n        return telemetryItem;\r\n    };\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","import { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = \"user\";\r\n    Extensions.DeviceExt = \"device\";\r\n    Extensions.TraceExt = \"trace\";\r\n    Extensions.WebExt = \"web\";\r\n    Extensions.AppExt = \"app\";\r\n    Extensions.OSExt = \"os\";\r\n    Extensions.SessionExt = \"ses\";\r\n    Extensions.SDKExt = \"sdk\";\r\n    return Extensions;\r\n}());\r\nexport { Extensions };\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions } from './Interfaces/PartAExtensions';\r\nexport { DistributedTracingModes } from './Enums';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","import { Util, ProcessLegacy } from \"@microsoft/applicationinsights-common\";\r\n// ToDo: fix properties and measurements once updates are done to common\r\nvar AppInsightsDeprecated = /** @class */ (function () {\r\n    function AppInsightsDeprecated(snippet, appInsightsNew) {\r\n        this._hasLegacyInitializers = false;\r\n        this._queue = [];\r\n        this.config = AppInsightsDeprecated.getDefaultConfig(snippet.config);\r\n        this.appInsightsNew = appInsightsNew;\r\n        this.context = { addTelemetryInitializer: this.addTelemetryInitializers.bind(this) };\r\n    }\r\n    AppInsightsDeprecated.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.endpointUrl = config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\";\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.maxBatchSizeInBytes = config.maxBatchSizeInBytes > 0 ? config.maxBatchSizeInBytes : 102400; // 100kb\r\n        config.maxBatchInterval = !isNaN(config.maxBatchInterval) ? config.maxBatchInterval : 15000;\r\n        config.enableDebug = Util.stringToBoolOrDefault(config.enableDebug);\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.disableTelemetry = Util.stringToBoolOrDefault(config.disableTelemetry);\r\n        config.verboseLogging = Util.stringToBoolOrDefault(config.verboseLogging);\r\n        config.emitLineDelimitedJson = Util.stringToBoolOrDefault(config.emitLineDelimitedJson);\r\n        config.diagnosticLogInterval = config.diagnosticLogInterval || 10000;\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.disableAjaxTracking = Util.stringToBoolOrDefault(config.disableAjaxTracking);\r\n        config.maxAjaxCallsPerView = !isNaN(config.maxAjaxCallsPerView) ? config.maxAjaxCallsPerView : 500;\r\n        config.isBeaconApiDisabled = Util.stringToBoolOrDefault(config.isBeaconApiDisabled, true);\r\n        config.disableCorrelationHeaders = Util.stringToBoolOrDefault(config.disableCorrelationHeaders);\r\n        config.correlationHeaderExcludedDomains = config.correlationHeaderExcludedDomains || [\r\n            \"*.blob.core.windows.net\",\r\n            \"*.blob.core.chinacloudapi.cn\",\r\n            \"*.blob.core.cloudapi.de\",\r\n            \"*.blob.core.usgovcloudapi.net\"\r\n        ];\r\n        config.disableFlushOnBeforeUnload = Util.stringToBoolOrDefault(config.disableFlushOnBeforeUnload);\r\n        config.enableSessionStorageBuffer = Util.stringToBoolOrDefault(config.enableSessionStorageBuffer, true);\r\n        config.isRetryDisabled = Util.stringToBoolOrDefault(config.isRetryDisabled);\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableCorsCorrelation = Util.stringToBoolOrDefault(config.enableCorsCorrelation);\r\n        return config;\r\n    };\r\n    /**\r\n     * The array of telemetry initializers to call before sending each telemetry item.\r\n     */\r\n    AppInsightsDeprecated.prototype.addTelemetryInitializers = function (callBack) {\r\n        var _this = this;\r\n        // Add initializer to current processing only if there is any old telemetry initializer\r\n        if (!this._hasLegacyInitializers) {\r\n            this.appInsightsNew.addTelemetryInitializer(function (item) {\r\n                _this._processLegacyInitializers(item); // setup call back for each legacy processor\r\n            });\r\n            this._hasLegacyInitializers = true;\r\n        }\r\n        this._queue.push(callBack);\r\n    };\r\n    AppInsightsDeprecated.prototype.startTrackPage = function (name) {\r\n        this.appInsightsNew.startTrackPage(name);\r\n    };\r\n    AppInsightsDeprecated.prototype.stopTrackPage = function (name, url, properties, measurements) {\r\n        this.appInsightsNew.stopTrackPage(name, url, properties); // update\r\n    };\r\n    AppInsightsDeprecated.prototype.trackPageView = function (name, url, properties, measurements, duration) {\r\n        var telemetry = {\r\n            name: name,\r\n            uri: url,\r\n            properties: properties,\r\n            measurements: measurements\r\n        };\r\n        // fix for props, measurements, duration\r\n        this.appInsightsNew.trackPageView(telemetry);\r\n    };\r\n    AppInsightsDeprecated.prototype.trackEvent = function (name, properties, measurements) {\r\n        this.appInsightsNew.trackEvent({ name: name });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackDependency = function (id, method, absoluteUrl, pathName, totalTime, success, resultCode) {\r\n        this.appInsightsNew.trackDependencyData({\r\n            id: id,\r\n            target: absoluteUrl,\r\n            type: pathName,\r\n            duration: totalTime,\r\n            properties: { HttpMethod: method },\r\n            success: success,\r\n            responseCode: resultCode\r\n        });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackException = function (exception, handledAt, properties, measurements, severityLevel) {\r\n        this.appInsightsNew.trackException({\r\n            exception: exception\r\n        });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackMetric = function (name, average, sampleCount, min, max, properties) {\r\n        this.appInsightsNew.trackMetric({ name: name, average: average, sampleCount: sampleCount, min: min, max: max });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackTrace = function (message, properties, severityLevel) {\r\n        this.appInsightsNew.trackTrace({ message: message, severityLevel: severityLevel });\r\n    };\r\n    AppInsightsDeprecated.prototype.flush = function (async) {\r\n        this.appInsightsNew.flush(async);\r\n    };\r\n    AppInsightsDeprecated.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        this.appInsightsNew.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    };\r\n    AppInsightsDeprecated.prototype.clearAuthenticatedUserContext = function () {\r\n        this.appInsightsNew.context.user.clearAuthenticatedUserContext();\r\n    };\r\n    AppInsightsDeprecated.prototype._onerror = function (message, url, lineNumber, columnNumber, error) {\r\n        this.appInsightsNew._onerror({ message: message, url: url, lineNumber: lineNumber, columnNumber: columnNumber, error: error });\r\n    };\r\n    AppInsightsDeprecated.prototype.startTrackEvent = function (name) {\r\n        this.appInsightsNew.startTrackEvent(name);\r\n    };\r\n    AppInsightsDeprecated.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        this.appInsightsNew.stopTrackEvent(name, properties, measurements);\r\n    };\r\n    AppInsightsDeprecated.prototype.downloadAndSetup = function (config) {\r\n        throw new Error(\"downloadAndSetup not implemented in web SKU\");\r\n    };\r\n    AppInsightsDeprecated.prototype.updateSnippetDefinitions = function (snippet) {\r\n        // apply full appInsights to the global instance\r\n        // Note: This must be called before loadAppInsights is called\r\n        for (var field in this) {\r\n            if (typeof field === 'string') {\r\n                snippet[field] = this[field];\r\n            }\r\n        }\r\n    };\r\n    // note: these are split into methods to enable unit tests\r\n    AppInsightsDeprecated.prototype.loadAppInsights = function () {\r\n        // initialize global instance of appInsights\r\n        // var appInsights = new Microsoft.ApplicationInsights.AppInsights(this.config);\r\n        var _this = this;\r\n        // implement legacy version of trackPageView for 0.10<\r\n        if (this.config[\"iKey\"]) {\r\n            var originalTrackPageView_1 = this.trackPageView;\r\n            this.trackPageView = function (pagePath, properties, measurements) {\r\n                originalTrackPageView_1.apply(_this, [null, pagePath, properties, measurements]);\r\n            };\r\n        }\r\n        // implement legacy pageView interface if it is present in the snippet\r\n        var legacyPageView = \"logPageView\";\r\n        if (typeof this.snippet[legacyPageView] === \"function\") {\r\n            this[legacyPageView] = function (pagePath, properties, measurements) {\r\n                _this.trackPageView(null, pagePath, properties, measurements);\r\n            };\r\n        }\r\n        // implement legacy event interface if it is present in the snippet\r\n        var legacyEvent = \"logEvent\";\r\n        if (typeof this.snippet[legacyEvent] === \"function\") {\r\n            this[legacyEvent] = function (name, props, measurements) {\r\n                _this.trackEvent(name, props, measurements);\r\n            };\r\n        }\r\n        return this;\r\n    };\r\n    AppInsightsDeprecated.prototype._processLegacyInitializers = function (item) {\r\n        // instead of mapping new to legacy and then back again and repeating in channel, attach callback for channel to call\r\n        item.tags[ProcessLegacy] = this._queue;\r\n        return item;\r\n    };\r\n    return AppInsightsDeprecated;\r\n}());\r\nexport { AppInsightsDeprecated };\r\n//# sourceMappingURL=ApplicationInsightsDeprecated.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DateTimeUtils, Util } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n * Class encapsulates sending page views and page view performance telemetry.\r\n */\r\nvar PageViewManager = /** @class */ (function () {\r\n    function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {\r\n        this.pageViewPerformanceSent = false;\r\n        this.overridePageViewDuration = false;\r\n        this.overridePageViewDuration = overridePageViewDuration;\r\n        this.appInsights = appInsights;\r\n        this._pageViewPerformanceManager = pageViewPerformanceManager;\r\n        if (core) {\r\n            this._channel = function () { return (core.getTransmissionControls()); };\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    /**\r\n     * Currently supported cases:\r\n     * 1) (default case) track page view called with default parameters, overridePageViewDuration = false. Page view is sent with page view performance when navigation timing data is available.\r\n     *    a. If navigation timing is not supported then page view is sent right away with undefined duration. Page view performance is not sent.\r\n     * 2) overridePageViewDuration = true, custom duration provided. Custom duration is used, page view sends right away.\r\n     * 3) overridePageViewDuration = true, custom duration NOT provided. Page view is sent right away, duration is time spent from page load till now (or undefined if navigation timing is not supported).\r\n     * 4) overridePageViewDuration = false, custom duration is provided. Page view is sent right away with custom duration.\r\n     *\r\n     * In all cases page view performance is sent once (only for the 1st call of trackPageView), or not sent if navigation timing is not supported.\r\n     */\r\n    PageViewManager.prototype.trackPageView = function (pageView, customProperties) {\r\n        var _this = this;\r\n        var name = pageView.name;\r\n        if (CoreUtils.isNullOrUndefined(name) || typeof name !== \"string\") {\r\n            name = pageView.name = window.document && window.document.title || \"\";\r\n        }\r\n        var uri = pageView.uri;\r\n        if (CoreUtils.isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n            uri = pageView.uri = window.location && window.location.href || \"\";\r\n        }\r\n        // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n        // do not provide the duration, set duration to undefined\r\n        // Also this is case 4\r\n        if (!this._pageViewPerformanceManager.isPerformanceTimingSupported()) {\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NavigationTimingNotSupported, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n            return;\r\n        }\r\n        var pageViewSent = false;\r\n        var customDuration;\r\n        // if the performance timing is supported by the browser, calculate the custom duration\r\n        var start = this._pageViewPerformanceManager.getPerformanceTiming().navigationStart;\r\n        customDuration = DateTimeUtils.GetDuration(start, +new Date);\r\n        if (!this._pageViewPerformanceManager.shouldCollectDuration(customDuration)) {\r\n            customDuration = undefined;\r\n        }\r\n        // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n        // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n        var duration;\r\n        if (!CoreUtils.isNullOrUndefined(customProperties) &&\r\n            !CoreUtils.isNullOrUndefined(customProperties.duration)) {\r\n            duration = customProperties.duration;\r\n        }\r\n        if (this.overridePageViewDuration || !isNaN(duration)) {\r\n            if (isNaN(duration)) {\r\n                // case 3\r\n                if (!customProperties) {\r\n                    customProperties = {};\r\n                }\r\n                customProperties[\"duration\"] = customDuration;\r\n            }\r\n            // case 2\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            pageViewSent = true;\r\n        }\r\n        // now try to send the page view performance telemetry\r\n        var maxDurationLimit = 60000;\r\n        if (!customProperties) {\r\n            customProperties = {};\r\n        }\r\n        var handle = setInterval((function () {\r\n            try {\r\n                if (_this._pageViewPerformanceManager.isPerformanceTimingDataReady()) {\r\n                    clearInterval(handle);\r\n                    var pageViewPerformance = {\r\n                        name: name,\r\n                        uri: uri\r\n                    };\r\n                    _this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n                    if (!pageViewPerformance.isValid && !pageViewSent) {\r\n                        // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                        // That's the best value we can get that makes sense.\r\n                        customProperties[\"duration\"] = customDuration;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                    else {\r\n                        if (!pageViewSent) {\r\n                            customProperties[\"duration\"] = pageViewPerformance.durationMs;\r\n                            _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        }\r\n                        if (!_this.pageViewPerformanceSent) {\r\n                            _this.appInsights.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n                            _this.pageViewPerformanceSent = true;\r\n                        }\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n                else if (DateTimeUtils.GetDuration(start, +new Date) > maxDurationLimit) {\r\n                    // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                    // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                    clearInterval(handle);\r\n                    if (!pageViewSent) {\r\n                        customProperties[\"duration\"] = maxDurationLimit;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailedCalc, \"trackPageView failed on page load calculation: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }), 100);\r\n    };\r\n    return PageViewManager;\r\n}());\r\nexport { PageViewManager };\r\n//# sourceMappingURL=PageViewManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\n/**\r\n * Used to track page visit durations\r\n */\r\nvar PageVisitTimeManager = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of PageVisitTimeManager\r\n     * @param pageVisitTimeTrackingHandler Delegate that will be called to send telemetry data to AI (when trackPreviousPageVisit is called)\r\n     * @returns {}\r\n     */\r\n    function PageVisitTimeManager(logger, pageVisitTimeTrackingHandler) {\r\n        this.prevPageVisitDataKeyName = \"prevPageVisitData\";\r\n        this.pageVisitTimeTrackingHandler = pageVisitTimeTrackingHandler;\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n     * Tracks the previous page visit time telemetry (if exists) and starts timing of new page visit time\r\n     * @param currentPageName Name of page to begin timing for visit duration\r\n     * @param currentPageUrl Url of page to begin timing for visit duration\r\n     */\r\n    PageVisitTimeManager.prototype.trackPreviousPageVisit = function (currentPageName, currentPageUrl) {\r\n        try {\r\n            // Restart timer for new page view\r\n            var prevPageVisitTimeData = this.restartPageVisitTimer(currentPageName, currentPageUrl);\r\n            // If there was a page already being timed, track the visit time for it now.\r\n            if (prevPageVisitTimeData) {\r\n                this.pageVisitTimeTrackingHandler(prevPageVisitTimeData.pageName, prevPageVisitTimeData.pageUrl, prevPageVisitTimeData.pageVisitTime);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Auto track page visit time failed, metric will not be collected: \" + Util.dump(e));\r\n        }\r\n    };\r\n    /**\r\n     * Stops timing of current page (if exists) and starts timing for duration of visit to pageName\r\n     * @param pageName Name of page to begin timing visit duration\r\n     * @returns {PageVisitData} Page visit data (including duration) of pageName from last call to start or restart, if exists. Null if not.\r\n     */\r\n    PageVisitTimeManager.prototype.restartPageVisitTimer = function (pageName, pageUrl) {\r\n        try {\r\n            var prevPageVisitData = this.stopPageVisitTimer();\r\n            this.startPageVisitTimer(pageName, pageUrl);\r\n            return prevPageVisitData;\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Call to restart failed: \" + Util.dump(e));\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Starts timing visit duration of pageName\r\n     * @param pageName\r\n     * @returns {}\r\n     */\r\n    PageVisitTimeManager.prototype.startPageVisitTimer = function (pageName, pageUrl) {\r\n        try {\r\n            if (Util.canUseSessionStorage()) {\r\n                if (Util.getSessionStorage(this._logger, this.prevPageVisitDataKeyName) != null) {\r\n                    throw new Error(\"Cannot call startPageVisit consecutively without first calling stopPageVisit\");\r\n                }\r\n                var currPageVisitData = new PageVisitData(pageName, pageUrl);\r\n                var currPageVisitDataStr = JSON.stringify(currPageVisitData);\r\n                Util.setSessionStorage(this._logger, this.prevPageVisitDataKeyName, currPageVisitDataStr);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // TODO: Remove this catch in next phase, since if start is called twice in a row the exception needs to be propagated out\r\n            this._logger.warnToConsole(\"Call to start failed: \" + Util.dump(e));\r\n        }\r\n    };\r\n    /**\r\n     * Stops timing of current page, if exists.\r\n     * @returns {PageVisitData} Page visit data (including duration) of pageName from call to start, if exists. Null if not.\r\n     */\r\n    PageVisitTimeManager.prototype.stopPageVisitTimer = function () {\r\n        try {\r\n            if (Util.canUseSessionStorage()) {\r\n                // Define end time of page's visit\r\n                var pageVisitEndTime = Date.now();\r\n                // Try to retrieve  page name and start time from session storage\r\n                var pageVisitDataJsonStr = Util.getSessionStorage(this._logger, this.prevPageVisitDataKeyName);\r\n                if (pageVisitDataJsonStr) {\r\n                    // if previous page data exists, set end time of visit\r\n                    var prevPageVisitData = JSON.parse(pageVisitDataJsonStr);\r\n                    prevPageVisitData.pageVisitTime = pageVisitEndTime - prevPageVisitData.pageVisitStartTime;\r\n                    // Remove data from storage since we already used it\r\n                    Util.removeSessionStorage(this._logger, this.prevPageVisitDataKeyName);\r\n                    // Return page visit data\r\n                    return prevPageVisitData;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Stop page visit timer failed: \" + Util.dump(e));\r\n            return null;\r\n        }\r\n    };\r\n    return PageVisitTimeManager;\r\n}());\r\nexport { PageVisitTimeManager };\r\nvar PageVisitData = /** @class */ (function () {\r\n    function PageVisitData(pageName, pageUrl) {\r\n        this.pageVisitStartTime = Date.now();\r\n        this.pageName = pageName;\r\n        this.pageUrl = pageUrl;\r\n    }\r\n    return PageVisitData;\r\n}());\r\nexport { PageVisitData };\r\n//# sourceMappingURL=PageVisitTimeManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n * Class encapsulates sending page view performance telemetry.\r\n */\r\nvar PageViewPerformanceManager = /** @class */ (function () {\r\n    function PageViewPerformanceManager(core) {\r\n        this.MAX_DURATION_ALLOWED = 3600000; // 1h\r\n        if (core) {\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent = function (pageViewPerformance) {\r\n        pageViewPerformance.isValid = false;\r\n        /*\r\n         * http://www.w3.org/TR/navigation-timing/#processing-model\r\n         *  |-navigationStart\r\n         *  |             |-connectEnd\r\n         *  |             ||-requestStart\r\n         *  |             ||             |-responseStart\r\n         *  |             ||             |              |-responseEnd\r\n         *  |             ||             |              |\r\n         *  |             ||             |              |         |-loadEventEnd\r\n         *  |---network---||---request---|---response---|---dom---|\r\n         *  |--------------------------total----------------------|\r\n         */\r\n        var navigationTiming = this.getPerformanceNavigationTiming();\r\n        var timing = this.getPerformanceTiming();\r\n        if (navigationTiming || timing) {\r\n            if (navigationTiming) {\r\n                var total = navigationTiming.duration;\r\n                var network = DateTimeUtils.GetDuration(navigationTiming.startTime, navigationTiming.connectEnd);\r\n                var request = DateTimeUtils.GetDuration(navigationTiming.requestStart, navigationTiming.responseStart);\r\n                var response = DateTimeUtils.GetDuration(navigationTiming.responseStart, navigationTiming.responseEnd);\r\n                var dom = DateTimeUtils.GetDuration(navigationTiming.responseEnd, navigationTiming.loadEventEnd);\r\n            }\r\n            else {\r\n                var total = DateTimeUtils.GetDuration(timing.navigationStart, timing.loadEventEnd);\r\n                var network = DateTimeUtils.GetDuration(timing.navigationStart, timing.connectEnd);\r\n                var request = DateTimeUtils.GetDuration(timing.requestStart, timing.responseStart);\r\n                var response = DateTimeUtils.GetDuration(timing.responseStart, timing.responseEnd);\r\n                var dom = DateTimeUtils.GetDuration(timing.responseEnd, timing.loadEventEnd);\r\n            }\r\n            if (total === 0) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ErrorPVCalc, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (!this.shouldCollectDuration(total, network, request, response, dom)) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.InvalidDurationValue, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                // in this case, don't report client performance from this page\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ClientPerformanceMathError, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else {\r\n                pageViewPerformance.durationMs = total;\r\n                // // convert to timespans\r\n                pageViewPerformance.perfTotal = pageViewPerformance.duration = Util.msToTimeSpan(total);\r\n                pageViewPerformance.networkConnect = Util.msToTimeSpan(network);\r\n                pageViewPerformance.sentRequest = Util.msToTimeSpan(request);\r\n                pageViewPerformance.receivedResponse = Util.msToTimeSpan(response);\r\n                pageViewPerformance.domProcessing = Util.msToTimeSpan(dom);\r\n                pageViewPerformance.isValid = true;\r\n            }\r\n        }\r\n    };\r\n    PageViewPerformanceManager.prototype.getPerformanceTiming = function () {\r\n        if (this.isPerformanceTimingSupported()) {\r\n            return window.performance.timing;\r\n        }\r\n        return null;\r\n    };\r\n    PageViewPerformanceManager.prototype.getPerformanceNavigationTiming = function () {\r\n        if (this.isPerformanceNavigationTimingSupported()) {\r\n            return window.performance.getEntriesByType(\"navigation\")[0];\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns true is window PerformanceNavigationTiming API is supported, false otherwise.\r\n     */\r\n    PageViewPerformanceManager.prototype.isPerformanceNavigationTimingSupported = function () {\r\n        return typeof window !== \"undefined\" && window.performance && window.performance.getEntriesByType && window.performance.getEntriesByType(\"navigation\").length > 0;\r\n    };\r\n    /**\r\n     * Returns true is window performance timing API is supported, false otherwise.\r\n     */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingSupported = function () {\r\n        return typeof window !== \"undefined\" && window.performance && window.performance.timing;\r\n    };\r\n    /**\r\n     * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n     * Returns true if ready, false otherwise.\r\n     */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingDataReady = function () {\r\n        var timing = window.performance.timing;\r\n        return timing.domainLookupStart > 0\r\n            && timing.navigationStart > 0\r\n            && timing.responseStart > 0\r\n            && timing.requestStart > 0\r\n            && timing.loadEventEnd > 0\r\n            && timing.responseEnd > 0\r\n            && timing.connectEnd > 0\r\n            && timing.domLoading > 0;\r\n    };\r\n    /**\r\n     * This method tells if given durations should be excluded from collection.\r\n     */\r\n    PageViewPerformanceManager.prototype.shouldCollectDuration = function () {\r\n        var durations = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            durations[_i] = arguments[_i];\r\n        }\r\n        // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n        var botAgentNames = ['googlebot', 'adsbot-google', 'apis-google', 'mediapartners-google'];\r\n        var userAgent = navigator.userAgent;\r\n        var isGoogleBot = false;\r\n        if (userAgent) {\r\n            for (var i = 0; i < botAgentNames.length; i++) {\r\n                isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i]) !== -1;\r\n            }\r\n        }\r\n        if (isGoogleBot) {\r\n            // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n            return false;\r\n        }\r\n        else {\r\n            // for other page views, don't report if it's outside of a reasonable range\r\n            for (var i = 0; i < durations.length; i++) {\r\n                if (durations[i] >= this.MAX_DURATION_ALLOWED) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return PageViewPerformanceManager;\r\n}());\r\nexport { PageViewPerformanceManager };\r\n//# sourceMappingURL=PageViewPerformanceManager.js.map","/**\r\n * ApplicationInsights.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Util, PageViewPerformance, PageView, RemoteDependencyData, Event as EventTelemetry, TelemetryItemCreator, Metric, Exception, SeverityLevel, Trace, ConfigurationManager, DateTimeUtils, PropertiesPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId, } from \"@microsoft/applicationinsights-core-js\";\r\nimport { PageViewManager } from \"./Telemetry/PageViewManager\";\r\nimport { PageVisitTimeManager } from \"./Telemetry/PageVisitTimeManager\";\r\nimport { PageViewPerformanceManager } from './Telemetry/PageViewPerformanceManager';\r\n\"use strict\";\r\nvar durationProperty = \"duration\";\r\nvar ApplicationInsights = /** @class */ (function () {\r\n    function ApplicationInsights() {\r\n        this.identifier = \"ApplicationInsightsAnalytics\"; // do not change name or priority\r\n        this.priority = 180; // take from reserved priority range 100- 200\r\n        this.autoRoutePVDelay = 500; // ms; Time to wait after a route change before triggering a pageview to allow DOM changes to take place\r\n        this._isInitialized = false;\r\n        // Counts number of trackAjax invokations.\r\n        // By default we only monitor X ajax call per view to avoid too much load.\r\n        // Default value is set in config.\r\n        // This counter keeps increasing even after the limit is reached.\r\n        this._trackAjaxAttempts = 0;\r\n        // array with max length of 2 that store current url and previous url for SPA page route change trackPageview use.\r\n        this._prevUri = typeof window === \"object\" && window.location && window.location.href || \"\";\r\n        this.initialize = this._initialize.bind(this);\r\n    }\r\n    ApplicationInsights.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        config.overridePageViewDuration = Util.stringToBoolOrDefault(config.overridePageViewDuration);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableAutoRouteTracking = Util.stringToBoolOrDefault(config.enableAutoRouteTracking);\r\n        config.namePrefix = config.namePrefix || \"\";\r\n        return config;\r\n    };\r\n    ApplicationInsights.prototype.processTelemetry = function (env) {\r\n        var doNotSendItem = false;\r\n        var telemetryInitializersCount = this._telemetryInitializers.length;\r\n        for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n            var telemetryInitializer = this._telemetryInitializers[i];\r\n            if (telemetryInitializer) {\r\n                try {\r\n                    if (telemetryInitializer.apply(null, [env]) === false) {\r\n                        doNotSendItem = true;\r\n                        break;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // log error but dont stop executing rest of the telemetry initializers\r\n                    // doNotSendItem = true;\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                }\r\n            }\r\n        }\r\n        if (!doNotSendItem && !CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(env);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    ApplicationInsights.prototype.trackEvent = function (event, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(event, EventTelemetry.dataType, EventTelemetry.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.\r\n     * @param   name    A string that identifies this event uniquely within the document.\r\n     */\r\n    ApplicationInsights.prototype.startTrackEvent = function (name) {\r\n        try {\r\n            this._eventTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackEventFailed, \"startTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        try {\r\n            this._eventTracking.stop(name, undefined, properties); // Todo: Fix to pass measurements once type is updated\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackEventFailed, \"stopTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a diagnostic message\r\n     * @param {ITraceTelemetry} trace\r\n     * @param ICustomProperties.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackTrace = function (trace, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(trace, Trace.dataType, Trace.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a numeric value that is not associated with a specific event. Typically\r\n     * used to send regular reports of performance indicators. To send single measurement, just\r\n     * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n     * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n     * and sending the resulting average at intervals\r\n     * @param {IMetricTelemetry} metric input object argument. Only name and average are mandatory.\r\n     * @param {{[key: string]: any}} customProperties additional data used to filter metrics in the\r\n     * portal. Defaults to empty.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackMetric = function (metric, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(metric, Metric.dataType, Metric.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackMetricFailed, \"trackMetric failed, metric will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Logs that a page or other item was viewed.\r\n     * @param IPageViewTelemetry The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param customProperties Additional data used to filter events and metrics. Defaults to empty.\r\n     * If a user wants to provide duration for pageLoad, it'll have to be in pageView.properties.duration\r\n     */\r\n    ApplicationInsights.prototype.trackPageView = function (pageView, customProperties) {\r\n        try {\r\n            var inPv = pageView || {};\r\n            this._pageViewManager.trackPageView(inPv, tslib_1.__assign({}, inPv.properties, inPv.measurements, customProperties));\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(inPv.name, inPv.uri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageView failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n     * @param pageView Page view item to be sent\r\n     * @param properties Custom properties (Part C) that a user can add to the telemetry item\r\n     * @param systemProperties System level properties (Part A) that a user can add to the telemetry item\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewInternal = function (pageView, properties, systemProperties) {\r\n        if (typeof document !== \"undefined\") {\r\n            pageView.refUri = pageView.refUri === undefined ? document.referrer : pageView.refUri;\r\n        }\r\n        var telemetryItem = TelemetryItemCreator.create(pageView, PageView.dataType, PageView.envelopeType, this._logger, properties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n        // reset ajaxes counter\r\n        this._trackAjaxAttempts = 0;\r\n    };\r\n    /**\r\n     * @ignore INTERNAL ONLY\r\n     * @param pageViewPerformance\r\n     * @param properties\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewPerformanceInternal = function (pageViewPerformance, properties, systemProperties) {\r\n        var telemetryItem = TelemetryItemCreator.create(pageViewPerformance, PageViewPerformance.dataType, PageViewPerformance.envelopeType, this._logger, properties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Send browser performance metrics.\r\n     * @param pageViewPerformance\r\n     * @param customProperties\r\n     */\r\n    ApplicationInsights.prototype.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n        try {\r\n            this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n            this.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageViewPerformance failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    ApplicationInsights.prototype.startTrackPage = function (name) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            this._pageTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackFailed, \"startTrackPage failed, page view may not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackPage = function (name, url, properties, measurement) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            if (typeof url !== \"string\") {\r\n                url = window.location && window.location.href || \"\";\r\n            }\r\n            this._pageTracking.stop(name, url, properties, measurement);\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(name, url);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackFailed, \"stopTrackPage failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @ignore INTERNAL ONLY\r\n     * @param exception\r\n     * @param properties\r\n     * @param systemProperties\r\n     */\r\n    ApplicationInsights.prototype.sendExceptionInternal = function (exception, customProperties, systemProperties) {\r\n        var exceptionPartB = new Exception(this._logger, exception.exception || new Error(Util.NotSpecified), exception.properties, exception.measurements, exception.severityLevel, exception.id).toInterface();\r\n        var telemetryItem = TelemetryItemCreator.create(exceptionPartB, Exception.dataType, Exception.envelopeType, this._logger, customProperties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Log an exception you have caught.\r\n     *\r\n     * @param {IExceptionTelemetry} exception   Object which contains exception to be sent\r\n     * @param {{[key: string]: any}} customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     *\r\n     * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackException = function (exception, customProperties) {\r\n        try {\r\n            this.sendExceptionInternal(exception, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackExceptionFailed, \"trackException failed, exception will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Custom error handler for Application Insights Analytics\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype._onerror = function (exception) {\r\n        try {\r\n            var properties_1 = {\r\n                url: (exception && exception.url) || document.URL,\r\n                lineNumber: exception.lineNumber,\r\n                columnNumber: exception.columnNumber,\r\n                message: exception.message\r\n            };\r\n            if (Util.isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception.error)) {\r\n                this._sendCORSException(properties_1.url);\r\n            }\r\n            else {\r\n                if (!Util.isError(exception.error)) {\r\n                    var stack = \"window.onerror@\" + properties_1.url + \":\" + exception.lineNumber + \":\" + (exception.columnNumber || 0);\r\n                    exception.error = new Error(exception.message);\r\n                    exception.error.stack = stack;\r\n                }\r\n                this.trackException({ exception: exception.error, severityLevel: SeverityLevel.Error }, properties_1);\r\n            }\r\n        }\r\n        catch (e) {\r\n            var errorString = exception.error ?\r\n                (exception.error.name + \", \" + exception.error.message)\r\n                : \"null\";\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ExceptionWhileLoggingError, \"_onError threw exception while logging error, error will not be collected: \"\r\n                + Util.getExceptionName(e), { exception: Util.dump(e), errorString: errorString });\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (this._isInitialized) {\r\n            return;\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(core)) {\r\n            throw Error(\"Error initializing\");\r\n        }\r\n        this.core = core;\r\n        this._logger = core.logger;\r\n        this._globalconfig = {\r\n            instrumentationKey: config.instrumentationKey,\r\n            endpointUrl: config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\"\r\n        };\r\n        this.config = config.extensionConfig && config.extensionConfig[this.identifier] ? config.extensionConfig[this.identifier] : {};\r\n        // load default values if specified\r\n        var defaults = ApplicationInsights.getDefaultConfig();\r\n        if (defaults !== undefined) {\r\n            for (var field in defaults) {\r\n                // for each unspecified field, set the default value\r\n                this.config[field] = ConfigurationManager.getConfig(config, field, this.identifier, defaults[field]);\r\n            }\r\n            if (this._globalconfig) {\r\n                for (var field in defaults) {\r\n                    if (this._globalconfig[field] === undefined) {\r\n                        this._globalconfig[field] = defaults[field];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isCookieUseDisabled) {\r\n            Util.disableCookies();\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isStorageUseDisabled) {\r\n            Util.disableStorage();\r\n        }\r\n        var configGetters = {\r\n            instrumentationKey: function () { return config.instrumentationKey; },\r\n            accountId: function () { return _this.config.accountId || config.accountId; },\r\n            sessionRenewalMs: function () { return _this.config.sessionRenewalMs || config.sessionRenewalMs; },\r\n            sessionExpirationMs: function () { return _this.config.sessionExpirationMs || config.sessionExpirationMs; },\r\n            sampleRate: function () { return _this.config.samplingPercentage || config.samplingPercentage; },\r\n            cookieDomain: function () { return _this.config.cookieDomain || config.cookieDomain; },\r\n            sdkExtension: function () { return _this.config.sdkExtension || config.sdkExtension; },\r\n            isBrowserLinkTrackingEnabled: function () { return _this.config.isBrowserLinkTrackingEnabled || config.isBrowserLinkTrackingEnabled; },\r\n            appId: function () { return _this.config.appId || config.appId; }\r\n        };\r\n        this._pageViewPerformanceManager = new PageViewPerformanceManager(this.core);\r\n        this._pageViewManager = new PageViewManager(this, this.config.overridePageViewDuration, this.core, this._pageViewPerformanceManager);\r\n        this._pageVisitTimeManager = new PageVisitTimeManager(this._logger, function (pageName, pageUrl, pageVisitTime) { return _this.trackPageVisitTime(pageName, pageUrl, pageVisitTime); });\r\n        this._telemetryInitializers = [];\r\n        this._addDefaultTelemetryInitializers(configGetters);\r\n        this._eventTracking = new Timing(this._logger, \"trackEvent\");\r\n        this._eventTracking.action =\r\n            function (name, url, duration, properties) {\r\n                if (!properties) {\r\n                    properties = {};\r\n                }\r\n                properties[durationProperty] = duration.toString();\r\n                _this.trackEvent({ name: name, properties: properties });\r\n            };\r\n        // initialize page view timing\r\n        this._pageTracking = new Timing(this._logger, \"trackPageView\");\r\n        this._pageTracking.action = function (name, url, duration, properties, measurements) {\r\n            // duration must be a custom property in order for the collector to extract it\r\n            if (CoreUtils.isNullOrUndefined(properties)) {\r\n                properties = {};\r\n            }\r\n            properties[durationProperty] = duration.toString();\r\n            var pageViewItem = {\r\n                name: name,\r\n                uri: url,\r\n                properties: properties,\r\n                measurements: measurements\r\n            };\r\n            _this.sendPageViewInternal(pageViewItem);\r\n        };\r\n        var instance = this;\r\n        if (this.config.disableExceptionTracking === false &&\r\n            !this.config.autoExceptionInstrumented) {\r\n            // We want to enable exception auto collection and it has not been done so yet\r\n            var onerror_1 = \"onerror\";\r\n            var originalOnError_1 = window[onerror_1];\r\n            window.onerror = function (message, url, lineNumber, columnNumber, error) {\r\n                var handled = originalOnError_1 && originalOnError_1(message, url, lineNumber, columnNumber, error);\r\n                if (handled !== true) {\r\n                    instance._onerror({\r\n                        message: message,\r\n                        url: url,\r\n                        lineNumber: lineNumber,\r\n                        columnNumber: columnNumber,\r\n                        error: error\r\n                    });\r\n                }\r\n                return handled;\r\n            };\r\n            this.config.autoExceptionInstrumented = true;\r\n        }\r\n        /**\r\n         * Create a custom \"locationchange\" event which is triggered each time the history object is changed\r\n         */\r\n        if (this.config.enableAutoRouteTracking === true\r\n            && typeof history === \"object\" && typeof history.pushState === \"function\" && typeof history.replaceState === \"function\"\r\n            && typeof window === \"object\"\r\n            && typeof Event !== \"undefined\") {\r\n            var _self_1 = this;\r\n            // Find the properties plugin\r\n            extensions.forEach(function (extension) {\r\n                if (extension.identifier === PropertiesPluginIdentifier) {\r\n                    _this._properties = extension;\r\n                }\r\n            });\r\n            history.pushState = (function (f) { return function pushState() {\r\n                var ret = f.apply(this, arguments);\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"pushState\"));\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"locationchange\"));\r\n                return ret;\r\n            }; })(history.pushState);\r\n            history.replaceState = (function (f) { return function replaceState() {\r\n                var ret = f.apply(this, arguments);\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"replaceState\"));\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"locationchange\"));\r\n                return ret;\r\n            }; })(history.replaceState);\r\n            window.addEventListener(_self_1.config.namePrefix + \"popstate\", function () {\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"locationchange\"));\r\n            });\r\n            window.addEventListener(_self_1.config.namePrefix + \"locationchange\", function () {\r\n                if (_self_1._properties && _self_1._properties.context && _self_1._properties.context.telemetryTrace) {\r\n                    _self_1._properties.context.telemetryTrace.traceID = Util.generateW3CId();\r\n                    _self_1._properties.context.telemetryTrace.name = window.location && window.location.pathname || \"_unknown_\";\r\n                }\r\n                if (_this._currUri) {\r\n                    _this._prevUri = _this._currUri;\r\n                    _this._currUri = window.location && window.location.href || \"\";\r\n                }\r\n                else {\r\n                    _this._currUri = window.location && window.location.href || \"\";\r\n                }\r\n                setTimeout((function (uri) {\r\n                    // todo: override start time so that it is not affected by autoRoutePVDelay\r\n                    _self_1.trackPageView({ refUri: uri, properties: { duration: 0 } }); // SPA route change loading durations are undefined, so send 0\r\n                }).bind(_this, _this._prevUri), _self_1.autoRoutePVDelay);\r\n            });\r\n        }\r\n        this._isInitialized = true;\r\n    };\r\n    /**\r\n     * Log a page visit time\r\n     * @param    pageName    Name of page\r\n     * @param    pageVisitDuration Duration of visit to the page in milleseconds\r\n     */\r\n    ApplicationInsights.prototype.trackPageVisitTime = function (pageName, pageUrl, pageVisitTime) {\r\n        var properties = { PageName: pageName, PageUrl: pageUrl };\r\n        this.trackMetric({\r\n            name: \"PageVisitTime\",\r\n            average: pageVisitTime,\r\n            max: pageVisitTime,\r\n            min: pageVisitTime,\r\n            sampleCount: 1\r\n        }, properties);\r\n    };\r\n    ApplicationInsights.prototype._addDefaultTelemetryInitializers = function (configGetters) {\r\n        if (!configGetters.isBrowserLinkTrackingEnabled()) {\r\n            var browserLinkPaths_1 = ['/browserLinkSignalR/', '/__browserLink/'];\r\n            var dropBrowserLinkRequests = function (envelope) {\r\n                if (envelope.baseType === RemoteDependencyData.dataType) {\r\n                    var remoteData = envelope.baseData;\r\n                    if (remoteData) {\r\n                        for (var i = 0; i < browserLinkPaths_1.length; i++) {\r\n                            if (remoteData.target && remoteData.target.indexOf(browserLinkPaths_1[i]) >= 0) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            };\r\n            this._addTelemetryInitializer(dropBrowserLinkRequests);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype._addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._sendCORSException = function (url) {\r\n        var exception = {\r\n            message: \"Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.\",\r\n            url: url,\r\n            lineNumber: 0,\r\n            columnNumber: 0,\r\n            error: undefined\r\n        };\r\n        var telemetryItem = TelemetryItemCreator.create(exception, Exception.dataType, Exception.envelopeType, this._logger, { url: url });\r\n        this.core.track(telemetryItem);\r\n    };\r\n    ApplicationInsights.Version = \"2.2.3\"; // Not currently used anywhere\r\n    return ApplicationInsights;\r\n}());\r\nexport { ApplicationInsights };\r\n/**\r\n * Used to record timed events and page views.\r\n */\r\nvar Timing = /** @class */ (function () {\r\n    function Timing(logger, name) {\r\n        this._name = name;\r\n        this._events = {};\r\n        this._logger = logger;\r\n    }\r\n    Timing.prototype.start = function (name) {\r\n        if (typeof this._events[name] !== \"undefined\") {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StartCalledMoreThanOnce, \"start was called more than once for this event without calling stop.\", { name: this._name, key: name }, true);\r\n        }\r\n        this._events[name] = +new Date;\r\n    };\r\n    Timing.prototype.stop = function (name, url, properties, measurements) {\r\n        var start = this._events[name];\r\n        if (isNaN(start)) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StopCalledWithoutStart, \"stop was called without a corresponding start.\", { name: this._name, key: name }, true);\r\n        }\r\n        else {\r\n            var end = +new Date;\r\n            var duration = DateTimeUtils.GetDuration(start, end);\r\n            this.action(name, url, duration, properties, measurements);\r\n        }\r\n        delete this._events[name];\r\n        this._events[name] = undefined;\r\n    };\r\n    return Timing;\r\n}());\r\n//# sourceMappingURL=ApplicationInsights.js.map","import { Util } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function () {\r\n    function ArraySendBuffer(config) {\r\n        this._config = config;\r\n        this._buffer = [];\r\n    }\r\n    ArraySendBuffer.prototype.enqueue = function (payload) {\r\n        this._buffer.push(payload);\r\n    };\r\n    ArraySendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    ArraySendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n    };\r\n    ArraySendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    ArraySendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    ArraySendBuffer.prototype.markAsSent = function (payload) {\r\n        this.clear();\r\n    };\r\n    ArraySendBuffer.prototype.clearSent = function (payload) {\r\n        // not supported\r\n    };\r\n    return ArraySendBuffer;\r\n}());\r\nexport { ArraySendBuffer };\r\n/*\r\n * Session storege buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function () {\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        this._bufferFullMessageSent = false;\r\n        this._logger = logger;\r\n        this._config = config;\r\n        var bufferItems = this.getBuffer(SessionStorageSendBuffer.BUFFER_KEY);\r\n        var notDeliveredItems = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        this._buffer = bufferItems.concat(notDeliveredItems);\r\n        // If the buffer has too many items, drop items from the end.\r\n        if (this._buffer.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            this._buffer.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n        }\r\n        // update DataLossAnalyzer with the number of recovered items\r\n        // Uncomment if you want to use DataLossanalyzer\r\n        // DataLossAnalyzer.itemsRestoredFromSessionBuffer = this._buffer.length;\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    }\r\n    SessionStorageSendBuffer.prototype.enqueue = function (payload) {\r\n        if (this._buffer.length >= SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            // sent internal log only once per page view\r\n            if (!this._bufferFullMessageSent) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionStorageBufferFull, \"Maximum buffer size reached: \" + this._buffer.length, true);\r\n                this._bufferFullMessageSent = true;\r\n            }\r\n            return;\r\n        }\r\n        this._buffer.push(payload);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    };\r\n    SessionStorageSendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    SessionStorageSendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this._bufferFullMessageSent = false;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    SessionStorageSendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    SessionStorageSendBuffer.prototype.markAsSent = function (payload) {\r\n        this._buffer = this.removePayloadsFromBuffer(payload, this._buffer);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        if (sentElements instanceof Array && payload instanceof Array) {\r\n            sentElements = sentElements.concat(payload);\r\n            if (sentElements.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SessionStorageBufferFull, \"Sent buffer reached its maximum size: \" + sentElements.length, true);\r\n                sentElements.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n            }\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.prototype.clearSent = function (payload) {\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        sentElements = this.removePayloadsFromBuffer(payload, sentElements);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n    };\r\n    SessionStorageSendBuffer.prototype.removePayloadsFromBuffer = function (payloads, buffer) {\r\n        var remaining = [];\r\n        for (var i in buffer) {\r\n            var contains = false;\r\n            for (var j in payloads) {\r\n                if (payloads[j] === buffer[i]) {\r\n                    contains = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!contains) {\r\n                remaining.push(buffer[i]);\r\n            }\r\n        }\r\n        ;\r\n        return remaining;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getBuffer = function (key) {\r\n        var prefixedKey = key;\r\n        try {\r\n            prefixedKey = this._config.namePrefix && this._config.namePrefix() ? this._config.namePrefix() + \"_\" + prefixedKey : prefixedKey;\r\n            var bufferJson = Util.getSessionStorage(this._logger, prefixedKey);\r\n            if (bufferJson) {\r\n                var buffer = JSON.parse(bufferJson);\r\n                if (buffer) {\r\n                    return buffer;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToRestoreStorageBuffer, \" storage key: \" + prefixedKey + \", \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        return [];\r\n    };\r\n    SessionStorageSendBuffer.prototype.setBuffer = function (key, buffer) {\r\n        var prefixedKey = key;\r\n        try {\r\n            prefixedKey = this._config.namePrefix && this._config.namePrefix() ? this._config.namePrefix() + \"_\" + prefixedKey : prefixedKey;\r\n            var bufferJson = JSON.stringify(buffer);\r\n            Util.setSessionStorage(this._logger, prefixedKey, bufferJson);\r\n        }\r\n        catch (e) {\r\n            // if there was an error, clear the buffer\r\n            // telemetry is stored in the _buffer array so we won't loose any items\r\n            Util.setSessionStorage(this._logger, prefixedKey, JSON.stringify([]));\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedToSetStorageBuffer, \" storage key: \" + prefixedKey + \", \" + Util.getExceptionName(e) + \". Buffer cleared\", { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\";\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\";\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.\r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}());\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Data, Envelope, RemoteDependencyData, Event, Exception, Metric, PageView, Trace, PageViewPerformance, CtxTagKeys, HttpMethod } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar baseType = \"baseType\";\r\nvar baseData = \"baseData\";\r\nvar EnvelopeCreator = /** @class */ (function () {\r\n    function EnvelopeCreator() {\r\n    }\r\n    EnvelopeCreator.extractProperties = function (data) {\r\n        var customProperties = null;\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                var value = data[key];\r\n                if (typeof value !== \"number\") {\r\n                    if (!customProperties) {\r\n                        customProperties = {};\r\n                    }\r\n                    customProperties[key] = value;\r\n                }\r\n            }\r\n        }\r\n        return customProperties;\r\n    };\r\n    EnvelopeCreator.extractPropsAndMeasurements = function (data, properties, measurements) {\r\n        if (!CoreUtils.isNullOrUndefined(data)) {\r\n            for (var key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    var value = data[key];\r\n                    if (typeof value === \"number\") {\r\n                        measurements[key] = value;\r\n                    }\r\n                    else if (typeof value === \"string\") {\r\n                        properties[key] = value;\r\n                    }\r\n                    else {\r\n                        properties[key] = JSON.stringify(value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\n    EnvelopeCreator.createEnvelope = function (logger, envelopeType, telemetryItem, data) {\r\n        var envelope = new Envelope(logger, data, envelopeType);\r\n        envelope.iKey = telemetryItem.iKey;\r\n        var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n        envelope.name = envelope.name.replace(\"{0}\", iKeyNoDashes);\r\n        // extract all extensions from ctx\r\n        EnvelopeCreator.extractPartAExtensions(telemetryItem, envelope);\r\n        // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n        if (!telemetryItem.tags) {\r\n            telemetryItem.tags = [];\r\n        }\r\n        return envelope;\r\n    };\r\n    /*\r\n     * Maps Part A data from CS 4.0\r\n     */\r\n    EnvelopeCreator.extractPartAExtensions = function (item, env) {\r\n        // todo: switch to keys from common in this method\r\n        if (!env.tags) {\r\n            env.tags = {};\r\n        }\r\n        if (!item.ext) {\r\n            item.ext = {};\r\n        }\r\n        if (!item.tags) {\r\n            item.tags = [];\r\n        }\r\n        if (item.ext.user) {\r\n            if (item.ext.user.authId) {\r\n                env.tags[CtxTagKeys.userAuthUserId] = item.ext.user.authId;\r\n            }\r\n            var userId = item.ext.user.id || item.ext.user.localId;\r\n            if (userId) {\r\n                env.tags[CtxTagKeys.userId] = userId;\r\n            }\r\n        }\r\n        if (item.ext.app) {\r\n            if (item.ext.app.sesId) {\r\n                env.tags[CtxTagKeys.sessionId] = item.ext.app.sesId;\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.id || item.ext.device.localId) {\r\n                env.tags[CtxTagKeys.deviceId] = item.ext.device.id || item.ext.device.localId;\r\n            }\r\n            if (item.ext.device.deviceClass) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceClass;\r\n            }\r\n            if (item.ext.device.ip) {\r\n                env.tags[CtxTagKeys.deviceIp] = item.ext.device.ip;\r\n            }\r\n        }\r\n        if (item.ext.web) {\r\n            var web = item.ext.web;\r\n            if (web.browserLang) {\r\n                env.tags[CtxTagKeys.deviceLanguage] = web.browserLang;\r\n            }\r\n            if (web.browserVer) {\r\n                env.tags[CtxTagKeys.deviceBrowserVersion] = web.browserVer;\r\n            }\r\n            if (web.browser) {\r\n                env.tags[CtxTagKeys.deviceBrowser] = web.browser;\r\n            }\r\n            env.data = env.data || {};\r\n            env.data.baseData = env.data.baseData || {};\r\n            env.data.baseData.properties = env.data.baseData.properties || {};\r\n            if (web.domain) {\r\n                env.data.baseData.properties['domain'] = web.domain;\r\n            }\r\n            if (web.isManual) {\r\n                env.data.baseData.properties['isManual'] = web.isManual.toString();\r\n            }\r\n            if (web.screenRes) {\r\n                env.data.baseData.properties['screenRes'] = web.screenRes;\r\n            }\r\n            if (web.userConsent) {\r\n                env.data.baseData.properties['userConsent'] = web.userConsent.toString();\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.model) {\r\n                env.tags[CtxTagKeys.deviceModel] = item.ext.device.model;\r\n            }\r\n        }\r\n        if (item.ext.os && item.ext.os.name) {\r\n            env.tags[CtxTagKeys.deviceOS] = item.ext.os.name;\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.deviceType) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceType;\r\n            }\r\n        }\r\n        // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n        if (item.ext.trace) {\r\n            if (item.ext.trace.parentID) {\r\n                env.tags[CtxTagKeys.operationParentId] = item.ext.trace.parentID;\r\n            }\r\n            if (item.ext.trace.name) {\r\n                env.tags[CtxTagKeys.operationName] = item.ext.trace.name;\r\n            }\r\n            if (item.ext.trace.traceID) {\r\n                env.tags[CtxTagKeys.operationId] = item.ext.trace.traceID;\r\n            }\r\n        }\r\n        // Sample 4.0 schema\r\n        //  {\r\n        //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n        //     \"name\" : \"MetricWithNamespace\",\r\n        //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n        //     \"ext\": {  \"cloud\": {\r\n        //          \"role\": \"WATSON3\",\r\n        //          \"roleInstance\": \"CO4AEAP00000260\"\r\n        //      },\r\n        //      \"device\": {}, \"correlation\": {} },\r\n        //      \"tags\": [\r\n        //        { \"amazon.region\" : \"east2\" },\r\n        //        { \"os.expid\" : \"wp:02df239\" }\r\n        //     ]\r\n        //   }\r\n        var tgs = {};\r\n        var _loop_1 = function (i) {\r\n            var tg = item.tags[i];\r\n            // Object.keys returns an array of keys\r\n            Object.keys(tg).forEach(function (key) {\r\n                tgs[key] = tg[key];\r\n            });\r\n            item.tags.splice(i, 1);\r\n        };\r\n        // deals with tags.push({object})\r\n        for (var i = item.tags.length - 1; i >= 0; i--) {\r\n            _loop_1(i);\r\n        }\r\n        // deals with tags[key]=value\r\n        for (var tg in item.tags) {\r\n            tgs[tg] = item.tags[tg];\r\n        }\r\n        env.tags = tslib_1.__assign({}, env.tags, tgs);\r\n        if (!env.tags[CtxTagKeys.internalSdkVersion]) {\r\n            // Append a version in case it is not already set\r\n            env.tags[CtxTagKeys.internalSdkVersion] = \"javascript:\" + EnvelopeCreator.Version;\r\n        }\r\n    };\r\n    EnvelopeCreator.Version = \"2.2.3\";\r\n    return EnvelopeCreator;\r\n}());\r\nexport { EnvelopeCreator };\r\nvar DependencyEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DependencyEnvelopeCreator, _super);\r\n    function DependencyEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DependencyEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customMeasurements = telemetryItem.baseData.measurements || {};\r\n        var customProperties = telemetryItem.baseData.properties || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var bd = telemetryItem.baseData;\r\n        if (CoreUtils.isNullOrUndefined(bd)) {\r\n            logger.warnToConsole(\"Invalid input for dependency data\");\r\n            return null;\r\n        }\r\n        var id = bd.id;\r\n        var absoluteUrl = bd.target;\r\n        var command = bd.name;\r\n        var duration = bd.duration;\r\n        var success = bd.success;\r\n        var resultCode = bd.responseCode;\r\n        var requestAPI = bd.type;\r\n        var correlationContext = bd.correlationContext;\r\n        var method = bd.properties && bd.properties[HttpMethod] ? bd.properties[HttpMethod] : \"GET\";\r\n        var baseData = new RemoteDependencyData(logger, id, absoluteUrl, command, duration, success, resultCode, method, requestAPI, correlationContext, customProperties, customMeasurements);\r\n        var data = new Data(RemoteDependencyData.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, RemoteDependencyData.envelopeType, telemetryItem, data);\r\n    };\r\n    DependencyEnvelopeCreator.DependencyEnvelopeCreator = new DependencyEnvelopeCreator();\r\n    return DependencyEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { DependencyEnvelopeCreator };\r\nvar EventEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventEnvelopeCreator, _super);\r\n    function EventEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EventEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customProperties = {};\r\n        var customMeasurements = {};\r\n        if (telemetryItem.baseType !== Event.dataType) {\r\n            customProperties['baseTypeSource'] = telemetryItem.baseType; // save the passed in base type as a property\r\n        }\r\n        if (telemetryItem.baseType === Event.dataType) {\r\n            customProperties = telemetryItem.baseData.properties || {};\r\n            customMeasurements = telemetryItem.baseData.measurements || {};\r\n        }\r\n        else {\r\n            if (telemetryItem.baseData) {\r\n                EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.baseData, customProperties, customMeasurements);\r\n            }\r\n        }\r\n        // Exract root level properties from part C telemetryItem.data\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var eventName = telemetryItem.baseData.name;\r\n        var baseData = new Event(logger, eventName, customProperties, customMeasurements);\r\n        var data = new Data(Event.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Event.envelopeType, telemetryItem, data);\r\n    };\r\n    EventEnvelopeCreator.EventEnvelopeCreator = new EventEnvelopeCreator();\r\n    return EventEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { EventEnvelopeCreator };\r\nvar ExceptionEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionEnvelopeCreator, _super);\r\n    function ExceptionEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ExceptionEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var baseData = Exception.CreateFromInterface(logger, bd);\r\n        var data = new Data(Exception.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Exception.envelopeType, telemetryItem, data);\r\n    };\r\n    ExceptionEnvelopeCreator.ExceptionEnvelopeCreator = new ExceptionEnvelopeCreator();\r\n    return ExceptionEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { ExceptionEnvelopeCreator };\r\nvar MetricEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricEnvelopeCreator, _super);\r\n    function MetricEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MetricEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var props = telemetryItem.baseData.properties || {};\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        customProperties = tslib_1.__assign({}, props, customProperties);\r\n        var name = telemetryItem.baseData.name;\r\n        var average = telemetryItem.baseData.average;\r\n        var sampleCount = telemetryItem.baseData.sampleCount;\r\n        var min = telemetryItem.baseData.min;\r\n        var max = telemetryItem.baseData.max;\r\n        var baseData = new Metric(logger, name, average, sampleCount, min, max, customProperties);\r\n        var data = new Data(Metric.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Metric.envelopeType, telemetryItem, data);\r\n    };\r\n    MetricEnvelopeCreator.MetricEnvelopeCreator = new MetricEnvelopeCreator();\r\n    return MetricEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { MetricEnvelopeCreator };\r\nvar PageViewEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewEnvelopeCreator, _super);\r\n    function PageViewEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n        var duration;\r\n        if (!CoreUtils.isNullOrUndefined(telemetryItem.baseData) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties.duration)) {\r\n            duration = telemetryItem.baseData.properties.duration;\r\n            delete telemetryItem.baseData.properties.duration;\r\n        }\r\n        else if (!CoreUtils.isNullOrUndefined(telemetryItem.data) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.data[\"duration\"])) {\r\n            duration = telemetryItem.data[\"duration\"];\r\n            delete telemetryItem.data[\"duration\"];\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n        var currentContextId;\r\n        if (telemetryItem.ext && telemetryItem.ext.trace && telemetryItem.ext.trace.traceID) {\r\n            currentContextId = telemetryItem.ext.trace.traceID;\r\n        }\r\n        var id = bd.id || currentContextId;\r\n        var name = bd.name;\r\n        var url = bd.uri;\r\n        var properties = bd.properties || {};\r\n        var measurements = bd.measurements || {};\r\n        // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.refUri)) {\r\n            properties[\"refUri\"] = bd.refUri;\r\n        }\r\n        // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.pageType)) {\r\n            properties[\"pageType\"] = bd.pageType;\r\n        }\r\n        // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.isLoggedIn)) {\r\n            properties[\"isLoggedIn\"] = bd.isLoggedIn.toString();\r\n        }\r\n        // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.properties)) {\r\n            var pageTags = bd.properties;\r\n            for (var key in pageTags) {\r\n                if (pageTags.hasOwnProperty(key)) {\r\n                    properties[key] = pageTags[key];\r\n                }\r\n            }\r\n        }\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, properties, measurements);\r\n        var baseData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n        var data = new Data(PageView.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageView.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewEnvelopeCreator.PageViewEnvelopeCreator = new PageViewEnvelopeCreator();\r\n    return PageViewEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewEnvelopeCreator };\r\nvar PageViewPerformanceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformanceEnvelopeCreator, _super);\r\n    function PageViewPerformanceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewPerformanceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var name = bd.name;\r\n        var url = bd.uri || bd.url;\r\n        var properties = bd.properties || {};\r\n        var measurements = bd.measurements || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, properties, measurements);\r\n        var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);\r\n        var data = new Data(PageViewPerformance.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageViewPerformance.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator = new PageViewPerformanceEnvelopeCreator();\r\n    return PageViewPerformanceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewPerformanceEnvelopeCreator };\r\nvar TraceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TraceEnvelopeCreator, _super);\r\n    function TraceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TraceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var message = telemetryItem.baseData.message;\r\n        var severityLevel = telemetryItem.baseData.severityLevel;\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        var props = tslib_1.__assign({}, customProperties, telemetryItem.baseData.properties);\r\n        var baseData = new Trace(logger, message, severityLevel, props);\r\n        var data = new Data(Trace.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Trace.envelopeType, telemetryItem, data);\r\n    };\r\n    TraceEnvelopeCreator.TraceEnvelopeCreator = new TraceEnvelopeCreator();\r\n    return TraceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { TraceEnvelopeCreator };\r\n//# sourceMappingURL=EnvelopeCreator.js.map","import { Util, FieldType } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n     * Serializes the current object to a JSON string.\r\n     */\r\n    Serializer.prototype.serialize = function (input) {\r\n        var output = this._serializeObject(input, \"root\");\r\n        return JSON.stringify(output);\r\n    };\r\n    Serializer.prototype._serializeObject = function (source, name) {\r\n        var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n        var output = {};\r\n        if (!source) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (source[circularReferenceCheck]) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CircularReferenceDetected, \"Circular reference detected while serializing object\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (!source.aiDataContract) {\r\n            // special case for measurements/properties/tags\r\n            if (name === \"measurements\") {\r\n                output = this._serializeStringMap(source, \"number\", name);\r\n            }\r\n            else if (name === \"properties\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (name === \"tags\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (Util.isArray(source)) {\r\n                output = this._serializeArray(source, name);\r\n            }\r\n            else {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                try {\r\n                    // verify that the object can be stringified\r\n                    JSON.stringify(source);\r\n                    output = source;\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, (e && typeof e.toString === 'function') ? e.toString() : \"Error serializing object\", null, true);\r\n                }\r\n            }\r\n            return output;\r\n        }\r\n        source[circularReferenceCheck] = true;\r\n        for (var field in source.aiDataContract) {\r\n            var contract = source.aiDataContract[field];\r\n            var isRequired = (typeof contract === \"function\") ? (contract() & FieldType.Required) : (contract & FieldType.Required);\r\n            var isHidden = (typeof contract === \"function\") ? (contract() & FieldType.Hidden) : (contract & FieldType.Hidden);\r\n            var isArray = contract & FieldType.Array;\r\n            var isPresent = source[field] !== undefined;\r\n            var isObject = typeof source[field] === \"object\" && source[field] !== null;\r\n            if (isRequired && !isPresent && !isArray) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MissingRequiredFieldSpecification, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                // If not in debug mode, continue and hope the error is permissible\r\n                continue;\r\n            }\r\n            if (isHidden) {\r\n                // Don't serialize hidden fields\r\n                continue;\r\n            }\r\n            var value = void 0;\r\n            if (isObject) {\r\n                if (isArray) {\r\n                    // special case; resurse on each object in the source array\r\n                    value = this._serializeArray(source[field], field);\r\n                }\r\n                else {\r\n                    // recurse on the source object in this field\r\n                    value = this._serializeObject(source[field], field);\r\n                }\r\n            }\r\n            else {\r\n                // assign the source field to the output even if undefined or required\r\n                value = source[field];\r\n            }\r\n            // only emit this field if the value is defined\r\n            if (value !== undefined) {\r\n                output[field] = value;\r\n            }\r\n        }\r\n        delete source[circularReferenceCheck];\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeArray = function (sources, name) {\r\n        var output;\r\n        if (!!sources) {\r\n            if (!Util.isArray(sources)) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ItemNotInArray, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n            }\r\n            else {\r\n                output = [];\r\n                for (var i = 0; i < sources.length; i++) {\r\n                    var source = sources[i];\r\n                    var item = this._serializeObject(source, name + \"[\" + i + \"]\");\r\n                    output.push(item);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeStringMap = function (map, expectedType, name) {\r\n        var output;\r\n        if (map) {\r\n            output = {};\r\n            for (var field in map) {\r\n                var value = map[field];\r\n                if (expectedType === \"string\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else if (!value.toString) {\r\n                        output[field] = \"invalid field: toString() is not defined.\";\r\n                    }\r\n                    else {\r\n                        output[field] = value.toString();\r\n                    }\r\n                }\r\n                else if (expectedType === \"number\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else {\r\n                        var num = parseFloat(value);\r\n                        if (isNaN(num)) {\r\n                            output[field] = \"NaN\";\r\n                        }\r\n                        else {\r\n                            output[field] = num;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, output[field], null, true);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","import { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n * @description Monitors browser for offline events\r\n * @export default - Offline: Static instance of OfflineListener\r\n * @class OfflineListener\r\n */\r\nvar OfflineListener = /** @class */ (function () {\r\n    function OfflineListener() {\r\n        this._onlineStatus = true;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                this.isListening = false;\r\n            }\r\n            else if (window && window.addEventListener) {\r\n                window.addEventListener('online', this._setOnline.bind(this), false);\r\n                window.addEventListener('offline', this._setOffline.bind(this), false);\r\n                this.isListening = true;\r\n            }\r\n            else if (document && document.body) {\r\n                document.body.ononline = this._setOnline.bind(this);\r\n                document.body.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else if (document) {\r\n                document.ononline = this._setOnline.bind(this);\r\n                document.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else {\r\n                // Could not find a place to add event listener\r\n                this.isListening = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // this makes react-native less angry\r\n            this.isListening = false;\r\n        }\r\n    }\r\n    OfflineListener.prototype.isOnline = function () {\r\n        if (this.isListening) {\r\n            return this._onlineStatus;\r\n        }\r\n        else if (navigator && !CoreUtils.isNullOrUndefined(navigator.onLine)) {\r\n            return navigator.onLine;\r\n        }\r\n        else {\r\n            // Cannot determine online status - report as online\r\n            return true;\r\n        }\r\n    };\r\n    OfflineListener.prototype.isOffline = function () {\r\n        return !this.isOnline();\r\n    };\r\n    OfflineListener.prototype._setOnline = function () {\r\n        this._onlineStatus = true;\r\n    };\r\n    OfflineListener.prototype._setOffline = function () {\r\n        this._onlineStatus = false;\r\n    };\r\n    OfflineListener.Offline = new OfflineListener;\r\n    return OfflineListener;\r\n}());\r\nexport { OfflineListener };\r\nexport var Offline = OfflineListener.Offline;\r\n//# sourceMappingURL=Offline.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input === \"\") {\r\n            return 0;\r\n        }\r\n        while (input.length < HashCodeScoreGenerator.MIN_INPUT_LENGTH) {\r\n            input = input.concat(input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input.length; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    // (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\n    HashCodeScoreGenerator.MIN_INPUT_LENGTH = 8;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { HashCodeScoreGenerator } from './HashCodeScoreGenerator';\r\nimport { ContextTagKeys } from '@microsoft/applicationinsights-common';\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        this.hashCodeGeneragor = new HashCodeScoreGenerator();\r\n        this.keys = new ContextTagKeys();\r\n    }\r\n    SamplingScoreGenerator.prototype.getSamplingScore = function (item) {\r\n        var score = 0;\r\n        if (item.tags && item.tags[this.keys.userId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.userId]);\r\n        }\r\n        else if (item.ext && item.ext.user && item.ext.user.id) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.user.id);\r\n        }\r\n        else if (item.tags && item.tags[this.keys.operationId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.operationId]);\r\n        }\r\n        else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace.traceID) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.telemetryTrace.traceID);\r\n        }\r\n        else {\r\n            // tslint:disable-next-line:insecure-random\r\n            score = (Math.random() * 100);\r\n        }\r\n        return score;\r\n    };\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { SamplingScoreGenerator } from './SamplingScoreGenerators/SamplingScoreGenerator';\r\nimport { Metric } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, DiagnosticLogger, CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        this._logger = CoreUtils.isNullOrUndefined(logger) ? new DiagnosticLogger() : logger;\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SampleRateOutOfRange, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            this.sampleRate = 100;\r\n        }\r\n        this.sampleRate = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n     * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n     */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this.sampleRate; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === Metric.dataType) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator.getSamplingScore(envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SessionStorageSendBuffer, ArraySendBuffer } from './SendBuffer';\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from './EnvelopeCreator';\r\nimport { Serializer } from './Serializer'; // todo move to channel\r\nimport { DisabledPropertyName, RequestHeaders, Util, PageView, Event, Trace, Exception, Metric, PageViewPerformance, RemoteDependencyData, ConfigurationManager, ProcessLegacy, BreezeChannelIdentifier, SampleRate } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity, } from '@microsoft/applicationinsights-core-js';\r\nimport { Offline } from './Offline';\r\nimport { Sample } from './TelemetryProcessors/Sample';\r\nvar Sender = /** @class */ (function () {\r\n    function Sender() {\r\n        this.priority = 1001;\r\n        this.identifier = BreezeChannelIdentifier;\r\n        /**\r\n         * Whether XMLHttpRequest object is supported. Older version of IE (8,9) do not support it.\r\n         */\r\n        this._XMLHttpRequestSupported = false;\r\n    }\r\n    Sender.constructEnvelope = function (orig, iKey, logger) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !CoreUtils.isNullOrUndefined(iKey)) {\r\n            envelope = tslib_1.__assign({}, orig, { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        switch (envelope.baseType) {\r\n            case Event.dataType:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n            case Trace.dataType:\r\n                return TraceEnvelopeCreator.TraceEnvelopeCreator.Create(logger, envelope);\r\n            case PageView.dataType:\r\n                return PageViewEnvelopeCreator.PageViewEnvelopeCreator.Create(logger, envelope);\r\n            case PageViewPerformance.dataType:\r\n                return PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator.Create(logger, envelope);\r\n            case Exception.dataType:\r\n                return ExceptionEnvelopeCreator.ExceptionEnvelopeCreator.Create(logger, envelope);\r\n            case Metric.dataType:\r\n                return MetricEnvelopeCreator.MetricEnvelopeCreator.Create(logger, envelope);\r\n            case RemoteDependencyData.dataType:\r\n                return DependencyEnvelopeCreator.DependencyEnvelopeCreator.Create(logger, envelope);\r\n            default:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n        }\r\n    };\r\n    Sender._getDefaultAppInsightsChannelConfig = function () {\r\n        // set default values\r\n        return {\r\n            endpointUrl: function () { return \"https://dc.services.visualstudio.com/v2/track\"; },\r\n            emitLineDelimitedJson: function () { return false; },\r\n            maxBatchInterval: function () { return 15000; },\r\n            maxBatchSizeInBytes: function () { return 102400; },\r\n            disableTelemetry: function () { return false; },\r\n            enableSessionStorageBuffer: function () { return true; },\r\n            isRetryDisabled: function () { return false; },\r\n            isBeaconApiDisabled: function () { return true; },\r\n            onunloadDisableBeacon: function () { return false; },\r\n            instrumentationKey: function () { return undefined; },\r\n            namePrefix: function () { return undefined; },\r\n            samplingPercentage: function () { return 100; }\r\n        };\r\n    };\r\n    Sender._getEmptyAppInsightsChannelConfig = function () {\r\n        return {\r\n            endpointUrl: undefined,\r\n            emitLineDelimitedJson: undefined,\r\n            maxBatchInterval: undefined,\r\n            maxBatchSizeInBytes: undefined,\r\n            disableTelemetry: undefined,\r\n            enableSessionStorageBuffer: undefined,\r\n            isRetryDisabled: undefined,\r\n            isBeaconApiDisabled: undefined,\r\n            onunloadDisableBeacon: undefined,\r\n            instrumentationKey: undefined,\r\n            namePrefix: undefined,\r\n            samplingPercentage: undefined\r\n        };\r\n    };\r\n    Sender.prototype.pause = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.resume = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.flush = function () {\r\n        try {\r\n            this.triggerSend();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FlushFailed, \"flush failed, telemetry will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    Sender.prototype.onunloadFlush = function () {\r\n        if ((this._config.onunloadDisableBeacon() === false || this._config.isBeaconApiDisabled() === false) && Util.IsBeaconApiSupported()) {\r\n            try {\r\n                this.triggerSend(true, this._beaconSender);\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToSendQueuedTelemetry, \"failed to flush with beacon sender on page unload, telemetry will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        else {\r\n            this.flush();\r\n        }\r\n    };\r\n    Sender.prototype.teardown = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this._logger = core.logger;\r\n        this._serializer = new Serializer(core.logger);\r\n        this._consecutiveErrors = 0;\r\n        this._retryAt = null;\r\n        this._lastSend = 0;\r\n        this._sender = null;\r\n        var defaultConfig = Sender._getDefaultAppInsightsChannelConfig();\r\n        this._config = Sender._getEmptyAppInsightsChannelConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._config[field] = function () { return ConfigurationManager.getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._buffer = (this._config.enableSessionStorageBuffer && Util.canUseSessionStorage())\r\n            ? new SessionStorageSendBuffer(this._logger, this._config) : new ArraySendBuffer(this._config);\r\n        this._sample = new Sample(this._config.samplingPercentage(), this._logger);\r\n        if (!this._config.isBeaconApiDisabled() && Util.IsBeaconApiSupported()) {\r\n            this._sender = this._beaconSender;\r\n        }\r\n        else {\r\n            if (typeof XMLHttpRequest !== \"undefined\") {\r\n                var testXhr = new XMLHttpRequest();\r\n                if (\"withCredentials\" in testXhr) {\r\n                    this._sender = this._xhrSender;\r\n                    this._XMLHttpRequestSupported = true;\r\n                }\r\n                else if (typeof XDomainRequest !== \"undefined\") {\r\n                    this._sender = this._xdrSender; // IE 8 and 9\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Sender.prototype.processTelemetry = function (telemetryItem) {\r\n        var _this = this;\r\n        try {\r\n            // if master off switch is set, don't send any data\r\n            if (this._config.disableTelemetry()) {\r\n                // Do not send/save data\r\n                return;\r\n            }\r\n            // validate input\r\n            if (!telemetryItem) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSendEmptyTelemetry, \"Cannot send empty telemetry\");\r\n                return;\r\n            }\r\n            // validate event\r\n            if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidEvent, \"Cannot send telemetry without baseData and baseType\");\r\n                return;\r\n            }\r\n            if (!telemetryItem.baseType) {\r\n                // Default\r\n                telemetryItem.baseType = \"EventData\";\r\n            }\r\n            // ensure a sender was constructed\r\n            if (!this._sender) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SenderNotInitialized, \"Sender was not initialized\");\r\n                return;\r\n            }\r\n            // check if this item should be sampled in, else add sampleRate tag\r\n            if (!this._isSampledIn(telemetryItem)) {\r\n                // Item is sampled out, do not send it\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TelemetrySampledAndNotSent, \"Telemetry item was sampled out and not sent\", { SampleRate: this._sample.sampleRate });\r\n                return;\r\n            }\r\n            else {\r\n                telemetryItem.tags = telemetryItem.tags || {};\r\n                telemetryItem.tags[SampleRate] = this._sample.sampleRate;\r\n            }\r\n            // construct an envelope that Application Insights endpoint can understand\r\n            var aiEnvelope_1 = Sender.constructEnvelope(telemetryItem, this._config.instrumentationKey(), this._logger);\r\n            if (!aiEnvelope_1) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CreateEnvelopeError, \"Unable to create an AppInsights envelope\");\r\n                return;\r\n            }\r\n            var doNotSendItem_1 = false;\r\n            // this is for running in legacy mode, where customer may already have a custom initializer present\r\n            if (telemetryItem.tags && telemetryItem.tags[ProcessLegacy]) {\r\n                telemetryItem.tags[ProcessLegacy].forEach(function (callBack) {\r\n                    try {\r\n                        if (callBack && callBack(aiEnvelope_1) === false) {\r\n                            doNotSendItem_1 = true;\r\n                            _this._logger.warnToConsole(\"Telemetry processor check returns false\");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // log error but dont stop executing rest of the telemetry initializers\r\n                        // doNotSendItem = true;\r\n                        _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                    }\r\n                });\r\n                delete telemetryItem.tags[ProcessLegacy];\r\n            }\r\n            if (doNotSendItem_1) {\r\n                return; // do not send, no need to execute next plugin\r\n            }\r\n            // check if the incoming payload is too large, truncate if necessary\r\n            var payload = this._serializer.serialize(aiEnvelope_1);\r\n            // flush if we would exceed the max-size limit by adding this item\r\n            var bufferPayload = this._buffer.getItems();\r\n            var batch = this._buffer.batchPayloads(bufferPayload);\r\n            if (batch && (batch.length + payload.length > this._config.maxBatchSizeInBytes())) {\r\n                this.triggerSend();\r\n            }\r\n            // enqueue the payload\r\n            this._buffer.enqueue(payload);\r\n            // ensure an invocation timeout is set\r\n            this._setupTimer();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedAddingTelemetryToBuffer, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        // hand off the telemetry item to the next plugin\r\n        if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(telemetryItem);\r\n        }\r\n    };\r\n    Sender.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    /**\r\n     * xhr state changes\r\n     */\r\n    Sender.prototype._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n        if (xhr.readyState === 4) {\r\n            var response = null;\r\n            if (!this._appId) {\r\n                response = this._parseResponse(xhr.responseText || xhr.response);\r\n                if (response && response.appId) {\r\n                    this._appId = response.appId;\r\n                }\r\n            }\r\n            if ((xhr.status < 200 || xhr.status >= 300) && xhr.status !== 0) {\r\n                if (!this._config.isRetryDisabled() && this._isRetriable(xhr.status)) {\r\n                    this._resendPayload(payload);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                        \"Response code \" + xhr.status + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n                else {\r\n                    this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                }\r\n            }\r\n            else if (Offline.isOffline()) {\r\n                // Note: Don't check for staus == 0, since adblock gives this code\r\n                if (!this._config.isRetryDisabled()) {\r\n                    var offlineBackOffMultiplier = 10; // arbritrary number\r\n                    this._resendPayload(payload, offlineBackOffMultiplier);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". Offline - Response Code: \" + xhr.status + \". Offline status: \" + Offline.isOffline() + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n            }\r\n            else {\r\n                if (xhr.status === 206) {\r\n                    if (!response) {\r\n                        response = this._parseResponse(xhr.responseText || xhr.response);\r\n                    }\r\n                    if (response && !this._config.isRetryDisabled()) {\r\n                        this._onPartialSuccess(payload, response);\r\n                    }\r\n                    else {\r\n                        this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                    }\r\n                }\r\n                else {\r\n                    this._consecutiveErrors = 0;\r\n                    this._onSuccess(payload, countOfItemsInPayload);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Immediately send buffered data\r\n     * @param async {boolean} - Indicates if the events should be sent asynchronously\r\n     * @param forcedSender {SenderFunction} - Indicates the forcedSender, undefined if not passed\r\n     */\r\n    Sender.prototype.triggerSend = function (async, forcedSender) {\r\n        if (async === void 0) { async = true; }\r\n        try {\r\n            // Send data only if disableTelemetry is false\r\n            if (!this._config.disableTelemetry()) {\r\n                if (this._buffer.count() > 0) {\r\n                    var payload = this._buffer.getItems();\r\n                    // invoke send\r\n                    if (forcedSender) {\r\n                        forcedSender.call(this, payload, async);\r\n                    }\r\n                    else {\r\n                        this._sender(payload, async);\r\n                    }\r\n                }\r\n                // update lastSend time to enable throttling\r\n                this._lastSend = +new Date;\r\n            }\r\n            else {\r\n                this._buffer.clear();\r\n            }\r\n            clearTimeout(this._timeoutHandle);\r\n            this._timeoutHandle = null;\r\n            this._retryAt = null;\r\n        }\r\n        catch (e) {\r\n            /* Ignore this error for IE under v10 */\r\n            if (!Util.getIEVersion() || Util.getIEVersion() > 9) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TransmissionFailed, \"Telemetry transmission failed, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * error handler\r\n     */\r\n    Sender.prototype._onError = function (payload, message, event) {\r\n        this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.OnError, \"Failed to send telemetry.\", { message: message });\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * partial success handler\r\n     */\r\n    Sender.prototype._onPartialSuccess = function (payload, results) {\r\n        var failed = [];\r\n        var retry = [];\r\n        // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n        var errors = results.errors.reverse();\r\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n            var error = errors_1[_i];\r\n            var extracted = payload.splice(error.index, 1)[0];\r\n            if (this._isRetriable(error.statusCode)) {\r\n                retry.push(extracted);\r\n            }\r\n            else {\r\n                // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                failed.push(extracted);\r\n            }\r\n        }\r\n        if (payload.length > 0) {\r\n            this._onSuccess(payload, results.itemsAccepted);\r\n        }\r\n        if (failed.length > 0) {\r\n            this._onError(failed, this._formatErrorMessageXhr(null, ['partial success', results.itemsAccepted, 'of', results.itemsReceived].join(' ')));\r\n        }\r\n        if (retry.length > 0) {\r\n            this._resendPayload(retry);\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \"Partial success. \" +\r\n                \"Delivered: \" + payload.length + \", Failed: \" + failed.length +\r\n                \". Will retry to send \" + retry.length + \" our of \" + results.itemsReceived + \" items\");\r\n        }\r\n    };\r\n    /**\r\n     * success handler\r\n     */\r\n    Sender.prototype._onSuccess = function (payload, countOfItemsInPayload) {\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * xdr state changes\r\n     */\r\n    Sender.prototype._xdrOnLoad = function (xdr, payload) {\r\n        if (xdr && (xdr.responseText + \"\" === \"200\" || xdr.responseText === \"\")) {\r\n            this._consecutiveErrors = 0;\r\n            this._onSuccess(payload, 0);\r\n        }\r\n        else {\r\n            var results = this._parseResponse(xdr.responseText);\r\n            if (results && results.itemsReceived && results.itemsReceived > results.itemsAccepted\r\n                && !this._config.isRetryDisabled()) {\r\n                this._onPartialSuccess(payload, results);\r\n            }\r\n            else {\r\n                this._onError(payload, this._formatErrorMessageXdr(xdr));\r\n            }\r\n        }\r\n    };\r\n    Sender.prototype._isSampledIn = function (envelope) {\r\n        return this._sample.isSampledIn(envelope);\r\n    };\r\n    /**\r\n     * Send Beacon API request\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - not used\r\n     * Note: Beacon API does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._beaconSender = function (payload, isAsync) {\r\n        var url = this._config.endpointUrl();\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n        // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n        var plainTextBatch = new Blob([batch], { type: 'text/plain;charset=UTF-8' });\r\n        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n        var queued = navigator.sendBeacon(url, plainTextBatch);\r\n        if (queued) {\r\n            this._buffer.markAsSent(payload);\r\n            // no response from beaconSender, clear buffer\r\n            this._onSuccess(payload, payload.length);\r\n        }\r\n        else {\r\n            this._xhrSender(payload, true);\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" + \"Failed to send telemetry with Beacon API, retried with xhrSender.\");\r\n        }\r\n    };\r\n    /**\r\n     * Send XMLHttpRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     */\r\n    Sender.prototype._xhrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xhr = new XMLHttpRequest();\r\n        xhr[DisabledPropertyName] = true;\r\n        xhr.open(\"POST\", this._config.endpointUrl(), isAsync);\r\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n        // append Sdk-Context request header only in case of breeze endpoint\r\n        if (Util.isInternalApplicationInsightsEndpoint(this._config.endpointUrl())) {\r\n            xhr.setRequestHeader(RequestHeaders.sdkContextHeader, RequestHeaders.sdkContextHeaderAppIdRequest);\r\n        }\r\n        xhr.onreadystatechange = function () { return _this._xhrReadyStateChange(xhr, payload, payload.length); };\r\n        xhr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXhr(xhr), event); };\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xhr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    /**\r\n     * Parses the response from the backend.\r\n     * @param response - XMLHttpRequest or XDomainRequest response\r\n     */\r\n    Sender.prototype._parseResponse = function (response) {\r\n        try {\r\n            if (response && response !== \"\") {\r\n                var result = JSON.parse(response);\r\n                if (result && result.itemsReceived && result.itemsReceived >= result.itemsAccepted &&\r\n                    result.itemsReceived - result.itemsAccepted === result.errors.length) {\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidBackendResponse, \"Cannot parse the response. \" + Util.getExceptionName(e), {\r\n                response: response\r\n            });\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n     * @param payload\r\n     */\r\n    Sender.prototype._resendPayload = function (payload, linearFactor) {\r\n        if (linearFactor === void 0) { linearFactor = 1; }\r\n        if (!payload || payload.length === 0) {\r\n            return;\r\n        }\r\n        this._buffer.clearSent(payload);\r\n        this._consecutiveErrors++;\r\n        for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n            var item = payload_1[_i];\r\n            this._buffer.enqueue(item);\r\n        }\r\n        // setup timer\r\n        this._setRetryTime(linearFactor);\r\n        this._setupTimer();\r\n    };\r\n    /**\r\n     * Calculates the time to wait before retrying in case of an error based on\r\n     * http://en.wikipedia.org/wiki/Exponential_backoff\r\n     */\r\n    Sender.prototype._setRetryTime = function (linearFactor) {\r\n        var SlotDelayInSeconds = 10;\r\n        var delayInSeconds;\r\n        if (this._consecutiveErrors <= 1) {\r\n            delayInSeconds = SlotDelayInSeconds;\r\n        }\r\n        else {\r\n            var backOffSlot = (Math.pow(2, this._consecutiveErrors) - 1) / 2;\r\n            // tslint:disable-next-line:insecure-random\r\n            var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n            backOffDelay = linearFactor * backOffDelay;\r\n            delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n        }\r\n        // TODO: Log the backoff time like the C# version does.\r\n        var retryAfterTimeSpan = Date.now() + (delayInSeconds * 1000);\r\n        // TODO: Log the retry at time like the C# version does.\r\n        this._retryAt = retryAfterTimeSpan;\r\n    };\r\n    /**\r\n     * Sets up the timer which triggers actually sending the data.\r\n     */\r\n    Sender.prototype._setupTimer = function () {\r\n        var _this = this;\r\n        if (!this._timeoutHandle) {\r\n            var retryInterval = this._retryAt ? Math.max(0, this._retryAt - Date.now()) : 0;\r\n            var timerValue = Math.max(this._config.maxBatchInterval(), retryInterval);\r\n            this._timeoutHandle = setTimeout(function () {\r\n                _this.triggerSend();\r\n            }, timerValue);\r\n        }\r\n    };\r\n    /**\r\n     * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n     * @param statusCode\r\n     */\r\n    Sender.prototype._isRetriable = function (statusCode) {\r\n        return statusCode === 408 // Timeout\r\n            || statusCode === 429 // Too many requests.\r\n            || statusCode === 500 // Internal server error.\r\n            || statusCode === 503; // Service unavailable.\r\n    };\r\n    Sender.prototype._formatErrorMessageXhr = function (xhr, message) {\r\n        if (xhr) {\r\n            return \"XMLHttpRequest,Status:\" + xhr.status + \",Response:\" + xhr.responseText || xhr.response || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    /**\r\n     * Send XDomainRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     *\r\n     * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n     * to maintain consistency with the xhrSender's contract\r\n     * Note: XDomainRequest does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._xdrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xdr = new XDomainRequest();\r\n        xdr.onload = function () { return _this._xdrOnLoad(xdr, payload); };\r\n        xdr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXdr(xdr), event); };\r\n        // XDomainRequest requires the same protocol as the hosting page.\r\n        // If the protocol doesn't match, we can't send the telemetry :(.\r\n        var hostingProtocol = window.location && window.location.protocol;\r\n        if (this._config.endpointUrl().lastIndexOf(hostingProtocol, 0) !== 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\");\r\n            this._buffer.clear();\r\n            return;\r\n        }\r\n        var endpointUrl = this._config.endpointUrl().replace(/^(https?:)/, \"\");\r\n        xdr.open('POST', endpointUrl);\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xdr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    Sender.prototype._formatErrorMessageXdr = function (xdr, message) {\r\n        if (xdr) {\r\n            return \"XDomainRequest,Response:\" + xdr.responseText || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    return Sender;\r\n}());\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, CoreUtils, DiagnosticLogger } from '@microsoft/applicationinsights-core-js';\r\nvar Session = /** @class */ (function () {\r\n    function Session() {\r\n    }\r\n    return Session;\r\n}());\r\nexport { Session };\r\nvar _SessionManager = /** @class */ (function () {\r\n    function _SessionManager(config, logger) {\r\n        var _this = this;\r\n        if (CoreUtils.isNullOrUndefined(logger)) {\r\n            this._logger = new DiagnosticLogger();\r\n        }\r\n        else {\r\n            this._logger = logger;\r\n        }\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        if (!(typeof config.sessionExpirationMs === \"function\")) {\r\n            config.sessionExpirationMs = function () { return _SessionManager.acquisitionSpan; };\r\n        }\r\n        if (!(typeof config.sessionRenewalMs === \"function\")) {\r\n            config.sessionRenewalMs = function () { return _SessionManager.renewalSpan; };\r\n        }\r\n        this.config = config;\r\n        this._storageNamePrefix = function () { return _this.config.namePrefix && _this.config.namePrefix() ? _SessionManager.cookieNameConst + _this.config.namePrefix() : _SessionManager.cookieNameConst; };\r\n        this.automaticSession = new Session();\r\n    }\r\n    _SessionManager.prototype.update = function () {\r\n        if (!this.automaticSession.id) {\r\n            this.initializeAutomaticSession();\r\n        }\r\n        var now = DateTimeUtils.Now();\r\n        var acquisitionExpired = now - this.automaticSession.acquisitionDate > this.config.sessionExpirationMs();\r\n        var renewalExpired = now - this.automaticSession.renewalDate > this.config.sessionRenewalMs();\r\n        // renew if acquisitionSpan or renewalSpan has ellapsed\r\n        if (acquisitionExpired || renewalExpired) {\r\n            // update automaticSession so session state has correct id\r\n            this.renew();\r\n        }\r\n        else {\r\n            // do not update the cookie more often than cookieUpdateInterval\r\n            if (!this.cookieUpdatedTimestamp || now - this.cookieUpdatedTimestamp > _SessionManager.cookieUpdateInterval) {\r\n                this.automaticSession.renewalDate = now;\r\n                this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *  Record the current state of the automatic session and store it in our cookie string format\r\n     *  into the browser's local storage. This is used to restore the session data when the cookie\r\n     *  expires.\r\n     */\r\n    _SessionManager.prototype.backup = function () {\r\n        this.setStorage(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n    };\r\n    /**\r\n     *  Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n     *  initialize the automatic session.\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSession = function () {\r\n        var cookie = Util.getCookie(this._logger, this._storageNamePrefix());\r\n        if (cookie && typeof cookie.split === \"function\") {\r\n            this.initializeAutomaticSessionWithData(cookie);\r\n        }\r\n        else {\r\n            // There's no cookie, but we might have session data in local storage\r\n            // This can happen if the session expired or the user actively deleted the cookie\r\n            // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n            // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n            var storage = Util.getStorage(this._logger, this._storageNamePrefix());\r\n            if (storage) {\r\n                this.initializeAutomaticSessionWithData(storage);\r\n            }\r\n        }\r\n        if (!this.automaticSession.id) {\r\n            this.renew();\r\n        }\r\n    };\r\n    /**\r\n     *  Extract id, aquisitionDate, and renewalDate from an ai_session payload string and\r\n     *  use this data to initialize automaticSession.\r\n     *\r\n     *  @param {string} sessionData - The string stored in an ai_session cookie or local storage backup\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSessionWithData = function (sessionData) {\r\n        var params = sessionData.split(\"|\");\r\n        if (params.length > 0) {\r\n            this.automaticSession.id = params[0];\r\n        }\r\n        try {\r\n            if (params.length > 1) {\r\n                var acq = +params[1];\r\n                this.automaticSession.acquisitionDate = +new Date(acq);\r\n                this.automaticSession.acquisitionDate = this.automaticSession.acquisitionDate > 0 ? this.automaticSession.acquisitionDate : 0;\r\n            }\r\n            if (params.length > 2) {\r\n                var renewal = +params[2];\r\n                this.automaticSession.renewalDate = +new Date(renewal);\r\n                this.automaticSession.renewalDate = this.automaticSession.renewalDate > 0 ? this.automaticSession.renewalDate : 0;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ErrorParsingAISessionCookie, \"Error parsing ai_session cookie, session will be reset: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        if (this.automaticSession.renewalDate === 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionRenewalDateIsZero, \"AI session renewal date is 0, session will be reset.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.renew = function () {\r\n        var now = DateTimeUtils.Now();\r\n        this.automaticSession.id = Util.newId();\r\n        this.automaticSession.acquisitionDate = now;\r\n        this.automaticSession.renewalDate = now;\r\n        this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n        // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n        if (!Util.canUseLocalStorage()) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserDoesNotSupportLocalStorage, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.setCookie = function (guid, acq, renewal) {\r\n        // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n        // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n        var acquisitionExpiry = acq + this.config.sessionExpirationMs();\r\n        var renewalExpiry = renewal + this.config.sessionRenewalMs();\r\n        var cookieExpiry = new Date();\r\n        var cookie = [guid, acq, renewal];\r\n        if (acquisitionExpiry < renewalExpiry) {\r\n            cookieExpiry.setTime(acquisitionExpiry);\r\n        }\r\n        else {\r\n            cookieExpiry.setTime(renewalExpiry);\r\n        }\r\n        var cookieDomnain = this.config.cookieDomain ? this.config.cookieDomain() : null;\r\n        Util.setCookie(this._logger, this._storageNamePrefix(), cookie.join('|') + ';expires=' + cookieExpiry.toUTCString(), cookieDomnain);\r\n        this.cookieUpdatedTimestamp = DateTimeUtils.Now();\r\n    };\r\n    _SessionManager.prototype.setStorage = function (guid, acq, renewal) {\r\n        // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n        // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n        // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n        Util.setStorage(this._logger, this._storageNamePrefix(), [guid, acq, renewal].join('|'));\r\n    };\r\n    _SessionManager.acquisitionSpan = 86400000; // 24 hours in ms\r\n    _SessionManager.renewalSpan = 1800000; // 30 minutes in ms\r\n    _SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms\r\n    _SessionManager.cookieNameConst = 'ai_session';\r\n    return _SessionManager;\r\n}());\r\nexport { _SessionManager };\r\n//# sourceMappingURL=Session.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Application = /** @class */ (function () {\r\n    function Application() {\r\n    }\r\n    return Application;\r\n}());\r\nexport { Application };\r\n//# sourceMappingURL=Application.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Device = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Device class\r\n     */\r\n    function Device() {\r\n        // don't attempt to fingerprint browsers\r\n        this.id = \"browser\";\r\n        // Device type is a dimension in our data platform\r\n        // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n        this.deviceClass = \"Browser\";\r\n    }\r\n    return Device;\r\n}());\r\nexport { Device };\r\n//# sourceMappingURL=Device.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Version = \"2.2.3\";\r\nvar Internal = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the internal telemetry data class.\r\n     */\r\n    function Internal(config) {\r\n        this.sdkVersion = (config.sdkExtension && config.sdkExtension() ? config.sdkExtension() + \"_\" : \"\") + \"javascript:\" + Version;\r\n    }\r\n    return Internal;\r\n}());\r\nexport { Internal };\r\n//# sourceMappingURL=Internal.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity } from '@microsoft/applicationinsights-core-js';\r\nvar User = /** @class */ (function () {\r\n    function User(config, logger) {\r\n        this.isNewUser = false;\r\n        this._logger = logger;\r\n        // get userId or create new one if none exists\r\n        var cookie = Util.getCookie(this._logger, User.userCookieName);\r\n        if (cookie) {\r\n            this.isNewUser = false;\r\n            var params = cookie.split(User.cookieSeparator);\r\n            if (params.length > 0) {\r\n                this.id = params[0];\r\n            }\r\n        }\r\n        this.config = config;\r\n        if (!this.id) {\r\n            this.id = Util.newId();\r\n            var date = new Date();\r\n            var acqStr = Util.toISOStringForIE8(date);\r\n            this.accountAcquisitionDate = acqStr;\r\n            this.isNewUser = true;\r\n            // without expiration, cookies expire at the end of the session\r\n            // set it to 365 days from now\r\n            // 365 * 24 * 60 * 60 * 1000 = 31536000000 \r\n            date.setTime(date.getTime() + 31536000000);\r\n            var newCookie = [this.id, acqStr];\r\n            var cookieDomain = this.config.cookieDomain ? this.config.cookieDomain() : undefined;\r\n            Util.setCookie(this._logger, User.userCookieName, newCookie.join(User.cookieSeparator) + ';expires=' + date.toUTCString(), cookieDomain);\r\n            // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.\r\n            // We should respect their wishes and clear ourselves from local storage\r\n            var name_1 = config.namePrefix && config.namePrefix() ? config.namePrefix() + 'ai_session' : 'ai_session';\r\n            Util.removeStorage(this._logger, name_1);\r\n        }\r\n        // We still take the account id from the ctor param for backward compatibility. \r\n        // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n        this.accountId = config.accountId ? config.accountId() : undefined;\r\n        // Get the auth user id and account id from the cookie if exists\r\n        // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n        var authCookie = Util.getCookie(this._logger, User.authUserCookieName);\r\n        if (authCookie) {\r\n            authCookie = decodeURI(authCookie);\r\n            var authCookieString = authCookie.split(User.cookieSeparator);\r\n            if (authCookieString[0]) {\r\n                this.authenticatedId = authCookieString[0];\r\n            }\r\n            if (authCookieString.length > 1 && authCookieString[1]) {\r\n                this.accountId = authCookieString[1];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sets the authenticated user id and the account id in this session.\r\n     *\r\n     * @param authenticatedUserId {string} - The authenticated user id. A unique and persistent string that represents each authenticated user in the service.\r\n     * @param accountId {string} - An optional string to represent the account associated with the authenticated user.\r\n     */\r\n    User.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        // Validate inputs to ensure no cookie control characters.\r\n        var isInvalidInput = !this.validateUserInput(authenticatedUserId) || (accountId && !this.validateUserInput(accountId));\r\n        if (isInvalidInput) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SetAuthContextFailedAccountName, \"Setting auth user context failed. \" +\r\n                \"User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.\", true);\r\n            return;\r\n        }\r\n        // Create cookie string.\r\n        this.authenticatedId = authenticatedUserId;\r\n        var authCookie = this.authenticatedId;\r\n        if (accountId) {\r\n            this.accountId = accountId;\r\n            authCookie = [this.authenticatedId, this.accountId].join(User.cookieSeparator);\r\n        }\r\n        if (storeInCookie) {\r\n            // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n            // Encoding the cookie to handle unexpected unicode characters.\r\n            Util.setCookie(this._logger, User.authUserCookieName, encodeURI(authCookie), this.config.cookieDomain());\r\n        }\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and the account id from the user context.\r\n     * @returns {}\r\n     */\r\n    User.prototype.clearAuthenticatedUserContext = function () {\r\n        this.authenticatedId = null;\r\n        this.accountId = null;\r\n        Util.deleteCookie(this._logger, User.authUserCookieName);\r\n    };\r\n    User.prototype.validateUserInput = function (id) {\r\n        // Validate:\r\n        // 1. Id is a non-empty string.\r\n        // 2. It does not contain special characters for cookies.\r\n        if (typeof id !== 'string' ||\r\n            !id ||\r\n            id.match(/,|;|=| |\\|/)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    User.cookieSeparator = '|';\r\n    User.userCookieName = 'ai_user';\r\n    User.authUserCookieName = 'ai_authUser';\r\n    return User;\r\n}());\r\nexport { User };\r\n//# sourceMappingURL=User.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Location = /** @class */ (function () {\r\n    function Location() {\r\n    }\r\n    return Location;\r\n}());\r\nexport { Location };\r\n//# sourceMappingURL=Location.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nvar TelemetryTrace = /** @class */ (function () {\r\n    function TelemetryTrace(id, parentId, name) {\r\n        this.traceID = id || Util.generateW3CId();\r\n        this.parentID = parentId;\r\n        this.name = name;\r\n        if (window && window.location && window.location.pathname) {\r\n            this.name = window.location.pathname;\r\n        }\r\n    }\r\n    return TelemetryTrace;\r\n}());\r\nexport { TelemetryTrace };\r\n//# sourceMappingURL=TelemetryTrace.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { Session, _SessionManager } from './Context/Session';\r\nimport { Extensions, CtxTagKeys } from '@microsoft/applicationinsights-common';\r\nimport { Application } from './Context/Application';\r\nimport { Device } from './Context/Device';\r\nimport { Internal } from './Context/Internal';\r\nimport { User } from './Context/User';\r\nimport { Location } from './Context/Location';\r\nimport { TelemetryTrace } from './Context/TelemetryTrace';\r\nvar TelemetryContext = /** @class */ (function () {\r\n    function TelemetryContext(logger, defaultConfig) {\r\n        if (typeof window !== 'undefined') {\r\n            this.sessionManager = new _SessionManager(defaultConfig, logger);\r\n            this.application = new Application();\r\n            this.device = new Device();\r\n            this.internal = new Internal(defaultConfig);\r\n            this.location = new Location();\r\n            this.user = new User(defaultConfig, logger);\r\n            this.telemetryTrace = new TelemetryTrace();\r\n            this.session = new Session();\r\n        }\r\n        this.appId = function () { return null; };\r\n    }\r\n    TelemetryContext.prototype.applySessionContext = function (event) {\r\n        var sessionContext = this.session || this.sessionManager.automaticSession;\r\n        if (sessionContext) {\r\n            if (typeof sessionContext.id === \"string\") {\r\n                event.ext.app.sesId = sessionContext.id;\r\n            }\r\n        }\r\n        if (this.session) {\r\n            // If customer set session info, apply his context; otherwise apply context automatically generated\r\n            if (typeof this.session.id === \"string\") {\r\n                event.ext.app.sesId = this.session.id;\r\n            }\r\n            else {\r\n                event.ext.app.sesId = this.sessionManager.automaticSession.id;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperatingSystemContxt = function (event) {\r\n        if (this.os && this.os.name) {\r\n            event.ext.os = this.os;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyApplicationContext = function (event) {\r\n        if (this.application) {\r\n            if (typeof this.application.ver === \"string\") {\r\n                event.tags[CtxTagKeys.applicationVersion] = this.application.ver;\r\n            }\r\n            if (typeof this.application.build === \"string\") {\r\n                event.tags[CtxTagKeys.applicationBuild] = this.application.build;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyDeviceContext = function (event) {\r\n        if (this.device) {\r\n            if (typeof this.device.id === \"string\") {\r\n                event.ext.device.localId = this.device.id;\r\n            }\r\n            if (typeof this.device.ip === \"string\") {\r\n                event.ext.device.ip = this.device.ip;\r\n            }\r\n            if (typeof this.device.model === \"string\") {\r\n                event.ext.device.model = this.device.model;\r\n            }\r\n            if (typeof this.device.deviceClass === \"string\") {\r\n                event.ext.device.deviceClass = this.device.deviceClass;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyInternalContext = function (event) {\r\n        if (this.internal) {\r\n            if (typeof this.internal.agentVersion === \"string\") {\r\n                event.tags[CtxTagKeys.internalAgentVersion] = this.internal.agentVersion; // not mapped in CS 4.0\r\n            }\r\n            if (typeof this.internal.sdkVersion === \"string\") {\r\n                event.tags[CtxTagKeys.internalSdkVersion] = this.internal.sdkVersion;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyLocationContext = function (event) {\r\n        if (this.location) {\r\n            if (typeof this.location.ip === \"string\") {\r\n                event.tags[CtxTagKeys.locationIp] = this.location.ip;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperationContext = function (event) {\r\n        if (this.telemetryTrace) {\r\n            var trace = event.ext.trace || { traceID: undefined, parentID: undefined };\r\n            if (typeof this.telemetryTrace.traceID === \"string\") {\r\n                trace.traceID = this.telemetryTrace.traceID;\r\n            }\r\n            if (typeof this.telemetryTrace.name === \"string\") {\r\n                trace.name = this.telemetryTrace.name;\r\n            }\r\n            if (typeof this.telemetryTrace.parentID === \"string\") {\r\n                trace.parentID = this.telemetryTrace.parentID;\r\n            }\r\n            event.ext.trace = trace;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyWebContext = function (event) {\r\n        if (this.web) {\r\n            event.ext.web = event.ext.web || {};\r\n            event.ext.web = this.web;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyUserContext = function (event) {\r\n        if (this.user) {\r\n            if (!event.tags) {\r\n                event.tags = [];\r\n            }\r\n            // stays in tags\r\n            if (typeof this.user.accountId === \"string\") {\r\n                var item = {};\r\n                event.tags[CtxTagKeys.userAccountId] = this.user.accountId;\r\n            }\r\n            // CS 4.0\r\n            if (typeof this.user.id === \"string\") {\r\n                event.ext.user.id = this.user.id;\r\n            }\r\n            if (typeof this.user.authenticatedId === \"string\") {\r\n                event.ext.user.authId = this.user.authenticatedId;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.cleanUp = function (event) {\r\n        if (event.ext[Extensions.DeviceExt] && Object.keys(event.ext[Extensions.DeviceExt]).length === 0) {\r\n            delete event.ext[Extensions.DeviceExt];\r\n        }\r\n        if (event.ext[Extensions.UserExt] && Object.keys(event.ext[Extensions.UserExt]).length === 0) {\r\n            delete event.ext[Extensions.UserExt];\r\n        }\r\n        if (event.ext[Extensions.WebExt] && Object.keys(event.ext[Extensions.WebExt]).length === 0) {\r\n            delete event.ext[Extensions.WebExt];\r\n        }\r\n        if (event.ext[Extensions.OSExt] && Object.keys(event.ext[Extensions.OSExt]).length === 0) {\r\n            delete event.ext[Extensions.OSExt];\r\n        }\r\n        if (event.ext[Extensions.AppExt] && Object.keys(event.ext[Extensions.AppExt]).length === 0) {\r\n            delete event.ext[Extensions.AppExt];\r\n        }\r\n        if (event.ext[Extensions.TraceExt] && Object.keys(event.ext[Extensions.TraceExt]).length === 0) {\r\n            delete event.ext[Extensions.TraceExt];\r\n        }\r\n    };\r\n    return TelemetryContext;\r\n}());\r\nexport { TelemetryContext };\r\n//# sourceMappingURL=TelemetryContext.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { CoreUtils, _InternalLogMessage, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nimport { TelemetryContext } from './TelemetryContext';\r\nimport { PageView, ConfigurationManager, BreezeChannelIdentifier, PropertiesPluginIdentifier, Extensions, Util } from '@microsoft/applicationinsights-common';\r\nvar PropertiesPlugin = /** @class */ (function () {\r\n    function PropertiesPlugin() {\r\n        this.priority = 110;\r\n        this.identifier = PropertiesPluginIdentifier;\r\n    }\r\n    PropertiesPlugin.getDefaultConfig = function () {\r\n        var defaultConfig = {\r\n            instrumentationKey: function () { return undefined; },\r\n            accountId: function () { return null; },\r\n            sessionRenewalMs: function () { return 30 * 60 * 1000; },\r\n            samplingPercentage: function () { return 100; },\r\n            sessionExpirationMs: function () { return 24 * 60 * 60 * 1000; },\r\n            cookieDomain: function () { return null; },\r\n            sdkExtension: function () { return null; },\r\n            isBrowserLinkTrackingEnabled: function () { return false; },\r\n            appId: function () { return null; },\r\n            namePrefix: function () { return undefined; }\r\n        };\r\n        return defaultConfig;\r\n    };\r\n    PropertiesPlugin.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        var defaultConfig = PropertiesPlugin.getDefaultConfig();\r\n        this._extensionConfig = this._extensionConfig || PropertiesPlugin.getDefaultConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._extensionConfig[field] = function () { return ConfigurationManager.getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._logger = core.logger;\r\n        this.context = new TelemetryContext(core.logger, this._extensionConfig);\r\n        this._breezeChannel = Util.getExtension(extensions, BreezeChannelIdentifier);\r\n        this.context.appId = function () { return _this._breezeChannel ? _this._breezeChannel[\"_appId\"] : null; };\r\n    };\r\n    /**\r\n     * Add Part A fields to the event\r\n     * @param event The event that needs to be processed\r\n     */\r\n    PropertiesPlugin.prototype.processTelemetry = function (event) {\r\n        if (CoreUtils.isNullOrUndefined(event)) {\r\n            // TODO(barustum): throw an internal event once we have support for internal logging\r\n        }\r\n        else {\r\n            // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n            if (event.name === PageView.envelopeType) {\r\n                this._logger.resetInternalMessageCount();\r\n            }\r\n            if (this.context.session) {\r\n                // If customer did not provide custom session id update the session manager\r\n                if (typeof this.context.session.id !== \"string\") {\r\n                    this.context.sessionManager.update();\r\n                }\r\n            }\r\n            this._processTelemetryInternal(event);\r\n            if (this.context && this.context.user && this.context.user.isNewUser) {\r\n                this.context.user.isNewUser = false;\r\n                var message = new _InternalLogMessage(_InternalMessageId.SendBrowserInfoOnUserInit, navigator.userAgent);\r\n                this._logger.logInternalMessage(LoggingSeverity.CRITICAL, message);\r\n            }\r\n            if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n                this._nextPlugin.processTelemetry(event);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the next plugin that comes after this plugin\r\n     * @param nextPlugin The next plugin\r\n     */\r\n    PropertiesPlugin.prototype.setNextPlugin = function (nextPlugin) {\r\n        this._nextPlugin = nextPlugin;\r\n    };\r\n    PropertiesPlugin.prototype._processTelemetryInternal = function (event) {\r\n        // set part A  fields\r\n        if (!event.tags) {\r\n            event.tags = [];\r\n        }\r\n        if (!event.ext) {\r\n            event.ext = {};\r\n        }\r\n        event.ext[Extensions.DeviceExt] = event.ext[Extensions.DeviceExt] || {};\r\n        event.ext[Extensions.WebExt] = event.ext[Extensions.WebExt] || {};\r\n        event.ext[Extensions.UserExt] = event.ext[Extensions.UserExt] || {};\r\n        event.ext[Extensions.OSExt] = event.ext[Extensions.OSExt] || {};\r\n        event.ext[Extensions.AppExt] = event.ext[Extensions.AppExt] || {};\r\n        event.ext[Extensions.TraceExt] = event.ext[Extensions.TraceExt] || {};\r\n        this.context.applySessionContext(event);\r\n        this.context.applyApplicationContext(event);\r\n        this.context.applyDeviceContext(event);\r\n        this.context.applyOperationContext(event);\r\n        this.context.applyUserContext(event);\r\n        this.context.applyOperatingSystemContxt(event);\r\n        this.context.applyWebContext(event);\r\n        this.context.applyLocationContext(event); // legacy tags\r\n        this.context.applyInternalContext(event); // legacy tags\r\n        this.context.cleanUp(event);\r\n    };\r\n    return PropertiesPlugin;\r\n}());\r\nexport default PropertiesPlugin;\r\n//# sourceMappingURL=PropertiesPlugin.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DataSanitizer, UrlHelper, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nvar XHRMonitoringState = /** @class */ (function () {\r\n    function XHRMonitoringState() {\r\n        this.openDone = false;\r\n        this.setRequestHeaderDone = false;\r\n        this.sendDone = false;\r\n        this.abortDone = false;\r\n        // <summary>True, if onreadyStateChangeCallback function attached to xhr, otherwise false</summary>\r\n        this.onreadystatechangeCallbackAttached = false;\r\n    }\r\n    return XHRMonitoringState;\r\n}());\r\nexport { XHRMonitoringState };\r\nvar ajaxRecord = /** @class */ (function () {\r\n    function ajaxRecord(traceID, spanID, logger) {\r\n        this.completed = false;\r\n        this.requestHeadersSize = null;\r\n        this.requestHeaders = null;\r\n        this.ttfb = null;\r\n        this.responseReceivingDuration = null;\r\n        this.callbackDuration = null;\r\n        this.ajaxTotalDuration = null;\r\n        this.aborted = null;\r\n        this.pageUrl = null;\r\n        this.requestUrl = null;\r\n        this.requestSize = 0;\r\n        this.method = null;\r\n        /// <summary>Returns the HTTP status code.</summary>\r\n        this.status = null;\r\n        // <summary>The timestamp when open method was invoked</summary>\r\n        this.requestSentTime = null;\r\n        // <summary>The timestamps when first byte was received</summary>\r\n        this.responseStartedTime = null;\r\n        // <summary>The timestamp when last byte was received</summary>\r\n        this.responseFinishedTime = null;\r\n        // <summary>The timestamp when onreadystatechange callback in readyState 4 finished</summary>\r\n        this.callbackFinishedTime = null;\r\n        // <summary>The timestamp at which ajax was ended</summary>\r\n        this.endTime = null;\r\n        // <summary>The original xhr onreadystatechange event</summary>\r\n        this.originalOnreadystatechage = null;\r\n        this.xhrMonitoringState = new XHRMonitoringState();\r\n        // <summary>Determines whether or not JavaScript exception occured in xhr.onreadystatechange code. 1 if occured, otherwise 0.</summary>\r\n        this.clientFailure = 0;\r\n        this.CalculateMetrics = function () {\r\n            var self = this;\r\n            // round to 3 decimal points\r\n            self.ajaxTotalDuration = Math.round(DateTimeUtils.GetDuration(self.requestSentTime, self.responseFinishedTime) * 1000) / 1000;\r\n        };\r\n        this.traceID = traceID;\r\n        this.spanID = spanID;\r\n        this._logger = logger;\r\n    }\r\n    ajaxRecord.prototype.getAbsoluteUrl = function () {\r\n        return this.requestUrl ? UrlHelper.getAbsoluteUrl(this.requestUrl) : null;\r\n    };\r\n    ajaxRecord.prototype.getPathName = function () {\r\n        return this.requestUrl ? DataSanitizer.sanitizeUrl(this._logger, UrlHelper.getCompleteUrl(this.method, this.requestUrl)) : null;\r\n    };\r\n    return ajaxRecord;\r\n}());\r\nexport { ajaxRecord };\r\n;\r\n//# sourceMappingURL=ajaxRecord.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar stringUtils = /** @class */ (function () {\r\n    function stringUtils() {\r\n    }\r\n    stringUtils.GetLength = function (strObject) {\r\n        var res = 0;\r\n        if (!CoreUtils.isNullOrUndefined(strObject)) {\r\n            var stringified = \"\";\r\n            try {\r\n                stringified = strObject.toString();\r\n            }\r\n            catch (ex) {\r\n                // some troubles with complex object\r\n            }\r\n            res = stringified.length;\r\n            res = isNaN(res) ? 0 : res;\r\n        }\r\n        return res;\r\n    };\r\n    return stringUtils;\r\n}());\r\nexport { stringUtils };\r\nvar EventHelper = /** @class */ (function () {\r\n    function EventHelper() {\r\n    }\r\n    /// <summary>Binds the specified function to an event, so that the function gets called whenever the event fires on the object</summary>\r\n    /// <param name=\"obj\">Object to which </param>\r\n    /// <param name=\"eventNameWithoutOn\">String that specifies any of the standard DHTML Events without \"on\" prefix</param>\r\n    /// <param name=\"handlerRef\">Pointer that specifies the function to call when event fires</param>\r\n    /// <returns>True if the function was bound successfully to the event, otherwise false</returns>\r\n    EventHelper.AttachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n        var result = false;\r\n        if (!CoreUtils.isNullOrUndefined(obj)) {\r\n            if (!CoreUtils.isNullOrUndefined(obj.attachEvent)) {\r\n                // IE before version 9                    \r\n                obj.attachEvent(\"on\" + eventNameWithoutOn, handlerRef);\r\n                result = true;\r\n            }\r\n            else {\r\n                if (!CoreUtils.isNullOrUndefined(obj.addEventListener)) {\r\n                    // all browsers except IE before version 9\r\n                    obj.addEventListener(eventNameWithoutOn, handlerRef, false);\r\n                    result = true;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    EventHelper.DetachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n        if (!CoreUtils.isNullOrUndefined(obj)) {\r\n            if (!CoreUtils.isNullOrUndefined(obj.detachEvent)) {\r\n                obj.detachEvent(\"on\" + eventNameWithoutOn, handlerRef);\r\n            }\r\n            else {\r\n                if (!CoreUtils.isNullOrUndefined(obj.removeEventListener)) {\r\n                    obj.removeEventListener(eventNameWithoutOn, handlerRef, false);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return EventHelper;\r\n}());\r\nexport { EventHelper };\r\n//# sourceMappingURL=ajaxUtils.js.map","import { Util } from '@microsoft/applicationinsights-common';\r\nvar Traceparent = /** @class */ (function () {\r\n    function Traceparent(traceId, spanId) {\r\n        this.traceFlag = Traceparent.DEFAULT_TRACE_FLAG;\r\n        this.version = Traceparent.DEFAULT_VERSION;\r\n        if (traceId && Traceparent.isValidTraceId(traceId)) {\r\n            this.traceId = traceId;\r\n        }\r\n        else {\r\n            this.traceId = Util.generateW3CId();\r\n        }\r\n        if (spanId && Traceparent.isValidSpanId(spanId)) {\r\n            this.spanId = spanId;\r\n        }\r\n        else {\r\n            this.spanId = Util.generateW3CId().substr(0, 16);\r\n        }\r\n    }\r\n    Traceparent.isValidTraceId = function (id) {\r\n        return id.match(/^[0-9a-f]{32}$/) && id !== \"00000000000000000000000000000000\";\r\n    };\r\n    Traceparent.isValidSpanId = function (id) {\r\n        return id.match(/^[0-9a-f]{16}$/) && id !== \"0000000000000000\";\r\n    };\r\n    Traceparent.prototype.toString = function () {\r\n        return this.version + \"-\" + this.traceId + \"-\" + this.spanId + \"-\" + this.traceFlag;\r\n    };\r\n    Traceparent.DEFAULT_TRACE_FLAG = \"01\";\r\n    Traceparent.DEFAULT_VERSION = \"00\";\r\n    return Traceparent;\r\n}());\r\nexport { Traceparent };\r\n//# sourceMappingURL=TraceParent.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { RequestHeaders, Util, CorrelationIdHelper, TelemetryItemCreator, RemoteDependencyData, DateTimeUtils, DisabledPropertyName, ConfigurationManager, PropertiesPluginIdentifier, DistributedTracingModes } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nimport { ajaxRecord } from './ajaxRecord';\r\nimport { EventHelper } from './ajaxUtils';\r\nimport { Traceparent } from './TraceParent';\r\nvar AjaxMonitor = /** @class */ (function () {\r\n    function AjaxMonitor() {\r\n        this.identifier = AjaxMonitor.identifier;\r\n        this.priority = 120;\r\n        this._trackAjaxAttempts = 0;\r\n        this.currentWindowHost = window && window.location && window.location.host && window.location.host.toLowerCase();\r\n        this.initialized = false;\r\n        this._fetchInitialized = false;\r\n    }\r\n    AjaxMonitor.getDefaultConfig = function () {\r\n        var config = {\r\n            maxAjaxCallsPerView: 500,\r\n            disableAjaxTracking: false,\r\n            disableFetchTracking: true,\r\n            disableCorrelationHeaders: false,\r\n            distributedTracingMode: DistributedTracingModes.AI,\r\n            correlationHeaderExcludedDomains: [\r\n                \"*.blob.core.windows.net\",\r\n                \"*.blob.core.chinacloudapi.cn\",\r\n                \"*.blob.core.cloudapi.de\",\r\n                \"*.blob.core.usgovcloudapi.net\"\r\n            ],\r\n            correlationHeaderDomains: undefined,\r\n            appId: undefined,\r\n            enableCorsCorrelation: false,\r\n            enableRequestHeaderTracking: false,\r\n            enableResponseHeaderTracking: false\r\n        };\r\n        return config;\r\n    };\r\n    AjaxMonitor.getEmptyConfig = function () {\r\n        return {\r\n            maxAjaxCallsPerView: undefined,\r\n            disableAjaxTracking: undefined,\r\n            disableFetchTracking: undefined,\r\n            disableCorrelationHeaders: undefined,\r\n            distributedTracingMode: undefined,\r\n            correlationHeaderExcludedDomains: undefined,\r\n            appId: undefined,\r\n            enableCorsCorrelation: undefined,\r\n            correlationHeaderDomains: undefined,\r\n            enableRequestHeaderTracking: undefined,\r\n            enableResponseHeaderTracking: undefined\r\n        };\r\n    };\r\n    AjaxMonitor.getFailedAjaxDiagnosticsMessage = function (xhr) {\r\n        var result = \"\";\r\n        try {\r\n            if (!CoreUtils.isNullOrUndefined(xhr) &&\r\n                !CoreUtils.isNullOrUndefined(xhr.ajaxData) &&\r\n                !CoreUtils.isNullOrUndefined(xhr.ajaxData.requestUrl)) {\r\n                result += \"(url: '\" + xhr.ajaxData.requestUrl + \"')\";\r\n            }\r\n        }\r\n        catch (e) { }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.trackDependencyData = function (dependency, properties) {\r\n        this.trackDependencyDataInternal(dependency, properties);\r\n    };\r\n    AjaxMonitor.prototype.processTelemetry = function (item) {\r\n        if (this._nextPlugin && this._nextPlugin.processTelemetry) {\r\n            this._nextPlugin.processTelemetry(item);\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.setNextPlugin = function (next) {\r\n        if (next) {\r\n            this._nextPlugin = next;\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.includeCorrelationHeaders = function (ajaxData, input, init, xhr) {\r\n        if (input) {\r\n            if (CorrelationIdHelper.canIncludeCorrelationHeader(this._config, ajaxData.getAbsoluteUrl(), this.currentWindowHost)) {\r\n                if (!init) {\r\n                    init = {};\r\n                }\r\n                // init headers override original request headers\r\n                // so, if they exist use only them, otherwise use request's because they should have been applied in the first place\r\n                // not using original request headers will result in them being lost\r\n                init.headers = new Headers(init.headers || (input instanceof Request ? (input.headers || {}) : {}));\r\n                if (this._isUsingAIHeaders) {\r\n                    var id = \"|\" + ajaxData.traceID + \".\" + ajaxData.spanID;\r\n                    init.headers.set(RequestHeaders.requestIdHeader, id);\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        ajaxData.requestHeaders[RequestHeaders.requestIdHeader] = id;\r\n                    }\r\n                }\r\n                var appId = this._config.appId || this._context.appId();\r\n                if (appId) {\r\n                    init.headers.set(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId);\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        ajaxData.requestHeaders[RequestHeaders.requestContextHeader] = RequestHeaders.requestContextAppIdFormat + appId;\r\n                    }\r\n                }\r\n                if (this._isUsingW3CHeaders) {\r\n                    var traceparent = new Traceparent(ajaxData.traceID, ajaxData.spanID);\r\n                    init.headers.set(RequestHeaders.traceParentHeader, traceparent.toString());\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        ajaxData.requestHeaders[RequestHeaders.traceParentHeader] = traceparent.toString();\r\n                    }\r\n                }\r\n                return init;\r\n            }\r\n            return init;\r\n        }\r\n        else if (xhr) {\r\n            if (this.currentWindowHost && CorrelationIdHelper.canIncludeCorrelationHeader(this._config, xhr.ajaxData.getAbsoluteUrl(), this.currentWindowHost)) {\r\n                if (this._isUsingAIHeaders) {\r\n                    var id = \"|\" + xhr.ajaxData.traceID + \".\" + xhr.ajaxData.spanID;\r\n                    xhr.setRequestHeader(RequestHeaders.requestIdHeader, id);\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        xhr.ajaxData.requestHeaders[RequestHeaders.requestIdHeader] = id;\r\n                    }\r\n                }\r\n                var appId = this._config.appId || this._context.appId();\r\n                if (appId) {\r\n                    xhr.setRequestHeader(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId);\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        xhr.ajaxData.requestHeaders[RequestHeaders.requestContextHeader] = RequestHeaders.requestContextAppIdFormat + appId;\r\n                    }\r\n                }\r\n                if (this._isUsingW3CHeaders) {\r\n                    var traceparent = new Traceparent(xhr.ajaxData.traceID, xhr.ajaxData.spanID);\r\n                    xhr.setRequestHeader(RequestHeaders.traceParentHeader, traceparent.toString());\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        xhr.ajaxData.requestHeaders[RequestHeaders.traceParentHeader] = traceparent.toString();\r\n                    }\r\n                }\r\n            }\r\n            return xhr;\r\n        }\r\n        return undefined;\r\n    };\r\n    AjaxMonitor.prototype.initialize = function (config, core, extensions) {\r\n        if (!this.initialized && !this._fetchInitialized) {\r\n            this._core = core;\r\n            var defaultConfig = AjaxMonitor.getDefaultConfig();\r\n            this._config = AjaxMonitor.getEmptyConfig();\r\n            for (var field in defaultConfig) {\r\n                this._config[field] = ConfigurationManager.getConfig(config, field, AjaxMonitor.identifier, defaultConfig[field]);\r\n            }\r\n            this._isUsingAIHeaders = this._config.distributedTracingMode === DistributedTracingModes.AI || this._config.distributedTracingMode === DistributedTracingModes.AI_AND_W3C;\r\n            this._isUsingW3CHeaders = this._config.distributedTracingMode === DistributedTracingModes.AI_AND_W3C || this._config.distributedTracingMode === DistributedTracingModes.W3C;\r\n            if (this._config.disableAjaxTracking === false) {\r\n                this.instrumentXhr();\r\n            }\r\n            if (this._config.disableFetchTracking === false) {\r\n                this.instrumentFetch();\r\n            }\r\n            if (extensions.length > 0 && extensions) {\r\n                var propExt = void 0, extIx = 0;\r\n                while (!propExt && extIx < extensions.length) {\r\n                    if (extensions[extIx] && extensions[extIx].identifier === PropertiesPluginIdentifier) {\r\n                        propExt = extensions[extIx];\r\n                    }\r\n                    extIx++;\r\n                }\r\n                if (propExt) {\r\n                    this._context = propExt.context; // we could move IPropertiesPlugin to common as well\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Logs dependency call\r\n     * @param dependencyData dependency data object\r\n     */\r\n    AjaxMonitor.prototype.trackDependencyDataInternal = function (dependency, properties, systemProperties) {\r\n        if (this._config.maxAjaxCallsPerView === -1 || this._trackAjaxAttempts < this._config.maxAjaxCallsPerView) {\r\n            var item = TelemetryItemCreator.create(dependency, RemoteDependencyData.dataType, RemoteDependencyData.envelopeType, this._core.logger, properties, systemProperties);\r\n            this._core.track(item);\r\n        }\r\n        else if (this._trackAjaxAttempts === this._config.maxAjaxCallsPerView) {\r\n            this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MaxAjaxPerPVExceeded, \"Maximum ajax per page view limit reached, ajax monitoring is paused until the next trackPageView(). In order to increase the limit set the maxAjaxCallsPerView configuration parameter.\", true);\r\n        }\r\n        ++this._trackAjaxAttempts;\r\n    };\r\n    // Fetch Stuff\r\n    AjaxMonitor.prototype.instrumentFetch = function () {\r\n        if (!this.supportsFetch() || this._fetchInitialized) {\r\n            return;\r\n        }\r\n        var originalFetch = window.fetch;\r\n        var fetchMonitorInstance = this;\r\n        window.fetch = function fetch(input, init) {\r\n            var fetchData;\r\n            if (fetchMonitorInstance.isFetchInstrumented(input) && fetchMonitorInstance.isMonitoredInstance(undefined, undefined, input, init)) {\r\n                try {\r\n                    fetchData = fetchMonitorInstance.createFetchRecord(input, init);\r\n                    init = fetchMonitorInstance.includeCorrelationHeaders(fetchData, input, init);\r\n                }\r\n                catch (e) {\r\n                    fetchMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to monitor Window.fetch, monitoring data for this fetch call may be incorrect.\", {\r\n                        ajaxDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                        exception: Util.dump(e)\r\n                    });\r\n                }\r\n            }\r\n            return originalFetch(input, init)\r\n                .then(function (response) {\r\n                fetchMonitorInstance.onFetchComplete(response, fetchData);\r\n                return response;\r\n            })\r\n                .catch(function (reason) {\r\n                fetchMonitorInstance.onFetchFailed(input, fetchData, reason);\r\n                throw reason;\r\n            });\r\n        };\r\n        this._fetchInitialized = true;\r\n    };\r\n    AjaxMonitor.prototype.instrumentXhr = function () {\r\n        if (this.supportsAjaxMonitoring() && !this.initialized) {\r\n            this.instrumentOpen();\r\n            this.instrumentSend();\r\n            this.instrumentAbort();\r\n            this.instrumentSetRequestHeader();\r\n            this.initialized = true;\r\n        }\r\n    };\r\n    /// <summary>Verifies that particalar instance of XMLHttpRequest needs to be monitored</summary>\r\n    /// <param name=\"excludeAjaxDataValidation\">Optional parameter. True if ajaxData must be excluded from verification</param>\r\n    /// <returns type=\"bool\">True if instance needs to be monitored, otherwise false</returns>\r\n    AjaxMonitor.prototype.isMonitoredInstance = function (xhr, excludeAjaxDataValidation, request, init) {\r\n        var disabledProperty = false;\r\n        var ajaxValidation = true;\r\n        var initialized = false;\r\n        if (typeof request !== 'undefined') {\r\n            initialized = this._fetchInitialized;\r\n            // Look for DisabledPropertyName in either Request or RequestInit\r\n            disabledProperty = (typeof request === 'object' ? request[DisabledPropertyName] === true : false) ||\r\n                (init ? init[DisabledPropertyName] === true : false);\r\n        }\r\n        else if (typeof xhr !== 'undefined') {\r\n            initialized = this.initialized;\r\n            disabledProperty = xhr[DisabledPropertyName] === true;\r\n            ajaxValidation = excludeAjaxDataValidation === true || !CoreUtils.isNullOrUndefined(xhr.ajaxData);\r\n        }\r\n        // checking to see that all interested functions on xhr were instrumented\r\n        return initialized\r\n            // checking on ajaxData to see that it was not removed in user code\r\n            && ajaxValidation\r\n            // check that this instance is not not used by ajax call performed inside client side monitoring to send data to collector\r\n            && !disabledProperty;\r\n    };\r\n    /// <summary>Determines whether ajax monitoring can be enabled on this document</summary>\r\n    /// <returns>True if Ajax monitoring is supported on this page, otherwise false</returns>\r\n    AjaxMonitor.prototype.supportsAjaxMonitoring = function () {\r\n        var result = true;\r\n        if (CoreUtils.isNullOrUndefined(XMLHttpRequest) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.open) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.send) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.abort)) {\r\n            result = false;\r\n        }\r\n        // disable in IE8 or older (https://www.w3schools.com/jsref/jsref_trim_string.asp)\r\n        try {\r\n            \" a \".trim();\r\n        }\r\n        catch (ex) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.instrumentOpen = function () {\r\n        var originalOpen = XMLHttpRequest.prototype.open;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.open = function (method, url, async) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this, true) &&\r\n                    (!this.ajaxData ||\r\n                        !this.ajaxData.xhrMonitoringState.openDone)) {\r\n                    ajaxMonitorInstance.openHandler(this, method, url, async);\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to monitor XMLHttpRequest.open, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalOpen.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.openHandler = function (xhr, method, url, async) {\r\n        var traceID = (this._context && this._context.telemetryTrace && this._context.telemetryTrace.traceID) || Util.generateW3CId();\r\n        var spanID = Util.generateW3CId().substr(0, 16);\r\n        var ajaxData = new ajaxRecord(traceID, spanID, this._core.logger);\r\n        ajaxData.method = method;\r\n        ajaxData.requestUrl = url;\r\n        ajaxData.xhrMonitoringState.openDone = true;\r\n        ajaxData.requestHeaders = {};\r\n        xhr.ajaxData = ajaxData;\r\n        this.attachToOnReadyStateChange(xhr);\r\n    };\r\n    AjaxMonitor.prototype.instrumentSend = function () {\r\n        var originalSend = XMLHttpRequest.prototype.send;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.send = function (content) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this) && !this.ajaxData.xhrMonitoringState.sendDone) {\r\n                    ajaxMonitorInstance.sendHandler(this, content);\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxSend, \"Failed to monitor XMLHttpRequest, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalSend.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.sendHandler = function (xhr, content) {\r\n        xhr.ajaxData.requestSentTime = DateTimeUtils.Now();\r\n        xhr = this.includeCorrelationHeaders(xhr.ajaxData, undefined, undefined, xhr);\r\n        xhr.ajaxData.xhrMonitoringState.sendDone = true;\r\n    };\r\n    AjaxMonitor.prototype.instrumentAbort = function () {\r\n        var originalAbort = XMLHttpRequest.prototype.abort;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.abort = function () {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this) && !this.ajaxData.xhrMonitoringState.abortDone) {\r\n                    this.ajaxData.aborted = 1;\r\n                    this.ajaxData.xhrMonitoringState.abortDone = true;\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxAbort, \"Failed to monitor XMLHttpRequest.abort, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalAbort.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.instrumentSetRequestHeader = function () {\r\n        if (!this._config.enableRequestHeaderTracking) {\r\n            return;\r\n        }\r\n        var originalSetRequestHeader = XMLHttpRequest.prototype.setRequestHeader;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.setRequestHeader = function (header, value) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this)) {\r\n                    this.ajaxData.requestHeaders[header] = value;\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxSetRequestHeader, \"Failed to monitor XMLHttpRequest.setRequestHeader, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalSetRequestHeader.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.attachToOnReadyStateChange = function (xhr) {\r\n        var ajaxMonitorInstance = this;\r\n        xhr.ajaxData.xhrMonitoringState.onreadystatechangeCallbackAttached = EventHelper.AttachEvent(xhr, \"readystatechange\", function () {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(xhr)) {\r\n                    if (xhr.readyState === 4) {\r\n                        ajaxMonitorInstance.onAjaxComplete(xhr);\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                var exceptionText = Util.dump(e);\r\n                // ignore messages with c00c023f, as this a known IE9 XHR abort issue\r\n                if (!exceptionText || exceptionText.toLowerCase().indexOf(\"c00c023f\") === -1) {\r\n                    ajaxMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxRSC, \"Failed to monitor XMLHttpRequest 'readystatechange' event handler, monitoring data for this ajax call may be incorrect.\", {\r\n                        ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                        exception: Util.dump(e)\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    AjaxMonitor.prototype.onAjaxComplete = function (xhr) {\r\n        xhr.ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n        xhr.ajaxData.status = xhr.status;\r\n        xhr.ajaxData.CalculateMetrics();\r\n        if (xhr.ajaxData.ajaxTotalDuration < 0) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the ajax call, monitoring data for this ajax call won't be sent.\", {\r\n                ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                requestSentTime: xhr.ajaxData.requestSentTime,\r\n                responseFinishedTime: xhr.ajaxData.responseFinishedTime\r\n            });\r\n        }\r\n        else {\r\n            var dependency = {\r\n                id: \"|\" + xhr.ajaxData.traceID + \".\" + xhr.ajaxData.spanID,\r\n                target: xhr.ajaxData.getAbsoluteUrl(),\r\n                name: xhr.ajaxData.getPathName(),\r\n                type: \"Ajax\",\r\n                duration: xhr.ajaxData.ajaxTotalDuration,\r\n                success: (+(xhr.ajaxData.status)) >= 200 && (+(xhr.ajaxData.status)) < 400,\r\n                responseCode: +xhr.ajaxData.status,\r\n                method: xhr.ajaxData.method\r\n            };\r\n            // enrich dependency target with correlation context from the server\r\n            var correlationContext = this.getAjaxCorrelationContext(xhr);\r\n            if (correlationContext) {\r\n                dependency.correlationContext = /* dependency.target + \" | \" + */ correlationContext;\r\n            }\r\n            if (this._config.enableRequestHeaderTracking) {\r\n                if (Object.keys(xhr.ajaxData.requestHeaders).length > 0) {\r\n                    dependency.properties = dependency.properties || {};\r\n                    dependency.properties.requestHeaders = {};\r\n                    dependency.properties.requestHeaders = xhr.ajaxData.requestHeaders;\r\n                }\r\n            }\r\n            if (this._config.enableResponseHeaderTracking) {\r\n                var headers = xhr.getAllResponseHeaders();\r\n                if (headers) {\r\n                    // xhr.getAllResponseHeaders() method returns all the response headers, separated by CRLF, as a string or null\r\n                    // the regex converts the header string into an array of individual headers\r\n                    var arr = headers.trim().split(/[\\r\\n]+/);\r\n                    var responseHeaderMap_1 = {};\r\n                    arr.forEach(function (line) {\r\n                        var parts = line.split(': ');\r\n                        var header = parts.shift();\r\n                        var value = parts.join(': ');\r\n                        responseHeaderMap_1[header] = value;\r\n                    });\r\n                    if (Object.keys(responseHeaderMap_1).length > 0) {\r\n                        dependency.properties = dependency.properties || {};\r\n                        dependency.properties.responseHeaders = {};\r\n                        dependency.properties.responseHeaders = responseHeaderMap_1;\r\n                    }\r\n                }\r\n            }\r\n            this.trackDependencyDataInternal(dependency);\r\n            xhr.ajaxData = null;\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.getAjaxCorrelationContext = function (xhr) {\r\n        try {\r\n            var responseHeadersString = xhr.getAllResponseHeaders();\r\n            if (responseHeadersString !== null) {\r\n                var index = responseHeadersString.toLowerCase().indexOf(RequestHeaders.requestContextHeaderLowerCase);\r\n                if (index !== -1) {\r\n                    var responseHeader = xhr.getResponseHeader(RequestHeaders.requestContextHeader);\r\n                    return CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\", {\r\n                ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.isFetchInstrumented = function (input) {\r\n        return this._fetchInitialized && input[DisabledPropertyName] !== true;\r\n    };\r\n    AjaxMonitor.prototype.supportsFetch = function () {\r\n        var result = true;\r\n        if (!window || CoreUtils.isNullOrUndefined(window.Request) ||\r\n            CoreUtils.isNullOrUndefined(window.Request.prototype) ||\r\n            CoreUtils.isNullOrUndefined(window.fetch)) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.createFetchRecord = function (input, init) {\r\n        var traceID = (this._context && this._context.telemetryTrace && this._context.telemetryTrace.traceID) || Util.generateW3CId();\r\n        var spanID = Util.generateW3CId().substr(0, 16);\r\n        var ajaxData = new ajaxRecord(traceID, spanID, this._core.logger);\r\n        ajaxData.requestSentTime = DateTimeUtils.Now();\r\n        if (input instanceof Request) {\r\n            ajaxData.requestUrl = input ? input.url : \"\";\r\n        }\r\n        else {\r\n            ajaxData.requestUrl = input;\r\n        }\r\n        if (init && init.method) {\r\n            ajaxData.method = init.method;\r\n        }\r\n        else if (input && input instanceof Request) {\r\n            ajaxData.method = input.method;\r\n        }\r\n        else {\r\n            ajaxData.method = \"GET\";\r\n        }\r\n        if (init && init.headers && this._config.enableRequestHeaderTracking) {\r\n            ajaxData.requestHeaders = init.headers;\r\n        }\r\n        else {\r\n            ajaxData.requestHeaders = {};\r\n        }\r\n        return ajaxData;\r\n    };\r\n    AjaxMonitor.prototype.getFailedFetchDiagnosticsMessage = function (input) {\r\n        var result = \"\";\r\n        try {\r\n            if (!CoreUtils.isNullOrUndefined(input)) {\r\n                if (typeof (input) === \"string\") {\r\n                    result += \"(url: '\" + input + \"')\";\r\n                }\r\n                else {\r\n                    result += \"(url: '\" + input.url + \"')\";\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to grab failed fetch diagnostics message\", { exception: Util.dump(e) });\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.onFetchComplete = function (response, ajaxData) {\r\n        if (!ajaxData) {\r\n            return;\r\n        }\r\n        try {\r\n            ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n            ajaxData.CalculateMetrics();\r\n            if (ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                    requestSentTime: ajaxData.requestSentTime,\r\n                    responseFinishedTime: ajaxData.responseFinishedTime\r\n                });\r\n            }\r\n            else {\r\n                var dependency = {\r\n                    id: \"|\" + ajaxData.traceID + \".\" + ajaxData.spanID,\r\n                    target: ajaxData.getAbsoluteUrl(),\r\n                    name: ajaxData.getPathName(),\r\n                    type: \"Fetch\",\r\n                    duration: ajaxData.ajaxTotalDuration,\r\n                    success: response.status >= 200 && response.status < 400,\r\n                    responseCode: response.status,\r\n                    properties: { HttpMethod: ajaxData.method }\r\n                };\r\n                // enrich dependency target with correlation context from the server\r\n                var correlationContext = this.getFetchCorrelationContext(response);\r\n                if (correlationContext) {\r\n                    dependency.correlationContext = correlationContext;\r\n                }\r\n                if (this._config.enableRequestHeaderTracking) {\r\n                    if (Object.keys(ajaxData.requestHeaders).length > 0) {\r\n                        dependency.properties = dependency.properties || {};\r\n                        dependency.properties.requestHeaders = ajaxData.requestHeaders;\r\n                    }\r\n                }\r\n                if (this._config.enableResponseHeaderTracking) {\r\n                    var responseHeaderMap_2 = {};\r\n                    response.headers.forEach(function (value, name) {\r\n                        responseHeaderMap_2[name] = value;\r\n                    });\r\n                    if (Object.keys(responseHeaderMap_2).length > 0) {\r\n                        dependency.properties = dependency.properties || {};\r\n                        dependency.properties.responseHeaders = responseHeaderMap_2;\r\n                    }\r\n                }\r\n                this.trackDependencyDataInternal(dependency);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to calculate the duration of the fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.onFetchFailed = function (input, ajaxData, reason) {\r\n        if (!ajaxData) {\r\n            return;\r\n        }\r\n        try {\r\n            ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n            ajaxData.CalculateMetrics();\r\n            if (ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the failed fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                    requestSentTime: ajaxData.requestSentTime,\r\n                    responseFinishedTime: ajaxData.responseFinishedTime\r\n                });\r\n            }\r\n            else {\r\n                var dependency = {\r\n                    id: \"|\" + ajaxData.traceID + \".\" + ajaxData.spanID,\r\n                    target: ajaxData.getAbsoluteUrl(),\r\n                    name: ajaxData.getPathName(),\r\n                    type: \"Fetch\",\r\n                    duration: ajaxData.ajaxTotalDuration,\r\n                    success: false,\r\n                    responseCode: 0,\r\n                    properties: { HttpMethod: ajaxData.method }\r\n                };\r\n                this.trackDependencyDataInternal(dependency, { error: reason.message });\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to calculate the duration of the failed fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.getFetchCorrelationContext = function (response) {\r\n        try {\r\n            var responseHeader = response.headers.get(RequestHeaders.requestContextHeader);\r\n            return CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.identifier = \"AjaxDependencyPlugin\";\r\n    return AjaxMonitor;\r\n}());\r\nexport { AjaxMonitor };\r\n//# sourceMappingURL=ajax.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { AppInsightsCore, LoggingSeverity, _InternalMessageId } from \"@microsoft/applicationinsights-core-js\";\r\nimport { ApplicationInsights } from \"@microsoft/applicationinsights-analytics-js\";\r\nimport { Util, PropertiesPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\nimport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\nimport { PropertiesPlugin } from \"@microsoft/applicationinsights-properties-js\";\r\nimport { AjaxPlugin as DependenciesPlugin } from '@microsoft/applicationinsights-dependencies-js';\r\n\"use strict\";\r\n;\r\n/**\r\n * Application Insights API\r\n * @class Initialization\r\n * @implements {IApplicationInsights}\r\n */\r\nvar Initialization = /** @class */ (function () {\r\n    function Initialization(snippet) {\r\n        // initialize the queue and config in case they are undefined\r\n        snippet.queue = snippet.queue || [];\r\n        snippet.version = snippet.version || 2.0; // Default to new version\r\n        var config = snippet.config || {};\r\n        // ensure instrumentationKey is specified\r\n        if (config && !config.instrumentationKey) {\r\n            config = snippet;\r\n            ApplicationInsights.Version = \"2.2.3\"; // Not currently used anywhere\r\n        }\r\n        this.appInsights = new ApplicationInsights();\r\n        this.properties = new PropertiesPlugin();\r\n        this.dependencies = new DependenciesPlugin();\r\n        this.core = new AppInsightsCore();\r\n        this.snippet = snippet;\r\n        this.config = config;\r\n        this.getSKUDefaults();\r\n    }\r\n    // Analytics Plugin\r\n    /**\r\n     * Log a user action or other occurrence.\r\n     * @param {IEventTelemetry} event\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackEvent = function (event, customProperties) {\r\n        this.appInsights.trackEvent(event, customProperties);\r\n    };\r\n    /**\r\n     * Logs that a page, or similar container was displayed to the user.\r\n     * @param {IPageViewTelemetry} pageView\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackPageView = function (pageView) {\r\n        var inPv = pageView || {};\r\n        this.appInsights.trackPageView(inPv);\r\n    };\r\n    /**\r\n     * Log a bag of performance information via the customProperties field.\r\n     * @param {IPageViewPerformanceTelemetry} pageViewPerformance\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackPageViewPerformance = function (pageViewPerformance) {\r\n        var inPvp = pageViewPerformance || {};\r\n        this.appInsights.trackPageViewPerformance(inPvp);\r\n    };\r\n    /**\r\n     * Log an exception that you have caught.\r\n     * @param {IExceptionTelemetry} exception\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackException = function (exception) {\r\n        if (!exception.exception && exception.error) {\r\n            exception.exception = exception.error;\r\n        }\r\n        this.appInsights.trackException(exception);\r\n    };\r\n    /**\r\n     * Manually send uncaught exception telemetry. This method is automatically triggered\r\n     * on a window.onerror event.\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype._onerror = function (exception) {\r\n        this.appInsights._onerror(exception);\r\n    };\r\n    /**\r\n     * Log a diagnostic scenario such entering or leaving a function.\r\n     * @param {ITraceTelemetry} trace\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackTrace = function (trace, customProperties) {\r\n        this.appInsights.trackTrace(trace, customProperties);\r\n    };\r\n    /**\r\n     * Log a numeric value that is not associated with a specific event. Typically used\r\n     * to send regular reports of performance indicators.\r\n     *\r\n     * To send a single measurement, just use the `name` and `average` fields\r\n     * of {@link IMetricTelemetry}.\r\n     *\r\n     * If you take measurements frequently, you can reduce the telemetry bandwidth by\r\n     * aggregating multiple measurements and sending the resulting average and modifying\r\n     * the `sampleCount` field of {@link IMetricTelemetry}.\r\n     * @param {IMetricTelemetry} metric input object argument. Only `name` and `average` are mandatory.\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackMetric = function (metric, customProperties) {\r\n        this.appInsights.trackMetric(metric, customProperties);\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    Initialization.prototype.startTrackPage = function (name) {\r\n        this.appInsights.startTrackPage(name);\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    Initialization.prototype.stopTrackPage = function (name, url, customProperties, measurements) {\r\n        this.appInsights.stopTrackPage(name, url, customProperties, measurements);\r\n    };\r\n    Initialization.prototype.startTrackEvent = function (name) {\r\n        this.appInsights.startTrackEvent(name);\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    Initialization.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        this.appInsights.stopTrackEvent(name, properties, measurements); // Todo: Fix to pass measurements once type is updated\r\n    };\r\n    Initialization.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        return this.appInsights.addTelemetryInitializer(telemetryInitializer);\r\n    };\r\n    // Properties Plugin\r\n    /**\r\n     * Set the authenticated user id and the account id. Used for identifying a specific signed-in user. Parameters must not contain whitespace or ,;=|\r\n     *\r\n     * The method will only set the `authenicatedUserId` and `accountId` in the curent page view. To set them for the whole sesion, you should set `storeInCookie = true`\r\n     * @param {string} authenticatedUserId\r\n     * @param {string} [accountId]\r\n     * @param {boolean} [storeInCookie=false]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        this.properties.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and account id. The associated cookie is cleared, if present.\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.clearAuthenticatedUserContext = function () {\r\n        this.properties.context.user.clearAuthenticatedUserContext();\r\n    };\r\n    // Dependencies Plugin\r\n    /**\r\n     * Log a dependency call (e.g. ajax)\r\n     * @param {IDependencyTelemetry} dependency\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackDependencyData = function (dependency) {\r\n        this.dependencies.trackDependencyData(dependency);\r\n    };\r\n    // Misc\r\n    /**\r\n     * Manually trigger an immediate send of all telemetry still in the buffer.\r\n     * @param {boolean} [async=true]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.flush = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        this.core.getTransmissionControls().forEach(function (channels) {\r\n            channels.forEach(function (channel) {\r\n                channel.flush(async);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Manually trigger an immediate send of all telemetry still in the buffer using beacon Sender.\r\n     * Fall back to xhr sender if beacon is not supported.\r\n     * @param {boolean} [async=true]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.onunloadFlush = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        this.core.getTransmissionControls().forEach(function (channels) {\r\n            channels.forEach(function (channel) {\r\n                if (channel.onunloadFlush) {\r\n                    channel.onunloadFlush();\r\n                }\r\n                else {\r\n                    channel.flush(async);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Initialize this instance of ApplicationInsights\r\n     * @returns {IApplicationInsights}\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.loadAppInsights = function (legacyMode) {\r\n        if (legacyMode === void 0) { legacyMode = false; }\r\n        // dont allow additional channels/other extensions for legacy mode; legacy mode is only to allow users to switch with no code changes!\r\n        if (legacyMode && this.config.extensions && this.config.extensions.length > 0) {\r\n            throw new Error(\"Extensions not allowed in legacy mode\");\r\n        }\r\n        var extensions = [];\r\n        var appInsightsChannel = new Sender();\r\n        extensions.push(appInsightsChannel);\r\n        extensions.push(this.properties);\r\n        extensions.push(this.dependencies);\r\n        extensions.push(this.appInsights);\r\n        // initialize core\r\n        this.core.initialize(this.config, extensions);\r\n        // Empty queue of all api calls logged prior to sdk download\r\n        this.emptyQueue();\r\n        this.pollInternalLogs();\r\n        this.addHousekeepingBeforeUnload(this);\r\n        this.context = this.properties.context;\r\n        return this;\r\n    };\r\n    /**\r\n     * Overwrite the lazy loaded fields of global window snippet to contain the\r\n     * actual initialized API methods\r\n     * @param {Snippet} snippet\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.updateSnippetDefinitions = function (snippet) {\r\n        // apply full appInsights to the global instance\r\n        // Note: This must be called before loadAppInsights is called\r\n        for (var field in this) {\r\n            if (typeof field === 'string') {\r\n                snippet[field] = this[field];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Call any functions that were queued before the main script was loaded\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.emptyQueue = function () {\r\n        // call functions that were queued before the main script was loaded\r\n        try {\r\n            if (Util.isArray(this.snippet.queue)) {\r\n                // note: do not check length in the for-loop conditional in case something goes wrong and the stub methods are not overridden.\r\n                var length_1 = this.snippet.queue.length;\r\n                for (var i = 0; i < length_1; i++) {\r\n                    var call = this.snippet.queue[i];\r\n                    call();\r\n                }\r\n                this.snippet.queue = undefined;\r\n                delete this.snippet.queue;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            var properties = {};\r\n            if (exception && typeof exception.toString === \"function\") {\r\n                properties.exception = exception.toString();\r\n            }\r\n            // need from core\r\n            // Microsoft.ApplicationInsights._InternalLogging.throwInternal(\r\n            //     LoggingSeverity.WARNING,\r\n            //     _InternalMessageId.FailedToSendQueuedTelemetry,\r\n            //     \"Failed to send queued telemetry\",\r\n            //     properties);\r\n        }\r\n    };\r\n    Initialization.prototype.pollInternalLogs = function () {\r\n        this.core.pollInternalLogs();\r\n    };\r\n    Initialization.prototype.addHousekeepingBeforeUnload = function (appInsightsInstance) {\r\n        // Add callback to push events when the user navigates away\r\n        if (!appInsightsInstance.appInsights.config.disableFlushOnBeforeUnload && ('onbeforeunload' in window)) {\r\n            var performHousekeeping = function () {\r\n                // Adds the ability to flush all data before the page unloads.\r\n                // Note: This approach tries to push an async request with all the pending events onbeforeunload.\r\n                // Firefox does not respect this.Other browsers DO push out the call with < 100% hit rate.\r\n                // Telemetry here will help us analyze how effective this approach is.\r\n                // Another approach would be to make this call sync with a acceptable timeout to reduce the\r\n                // impact on user experience.\r\n                // appInsightsInstance.context._sender.triggerSend();\r\n                appInsightsInstance.onunloadFlush(false);\r\n                // Back up the current session to local storage\r\n                // This lets us close expired sessions after the cookies themselves expire\r\n                var ext = appInsightsInstance.appInsights.core['_extensions'][PropertiesPluginIdentifier];\r\n                if (ext && ext.context && ext.context._sessionManager) {\r\n                    ext.context._sessionManager.backup();\r\n                }\r\n            };\r\n            if (!Util.addEventHandler('beforeunload', performHousekeeping)) {\r\n                appInsightsInstance.appInsights.core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToAddHandlerForOnBeforeUnload, 'Could not add handler for beforeunload');\r\n            }\r\n        }\r\n    };\r\n    Initialization.prototype.getSKUDefaults = function () {\r\n        this.config.diagnosticLogInterval =\r\n            this.config.diagnosticLogInterval && this.config.diagnosticLogInterval > 0 ? this.config.diagnosticLogInterval : 10000;\r\n    };\r\n    return Initialization;\r\n}());\r\nexport { Initialization };\r\n//# sourceMappingURL=Initialization.js.map","import { AppInsightsDeprecated } from \"./ApplicationInsightsDeprecated\";\r\nimport { Initialization as ApplicationInsights } from \"./Initialization\";\r\nvar ApplicationInsightsContainer = /** @class */ (function () {\r\n    function ApplicationInsightsContainer() {\r\n    }\r\n    ApplicationInsightsContainer.getAppInsights = function (snippet, version) {\r\n        var initialization = new ApplicationInsights(snippet);\r\n        var legacyMode = version !== 2.0 ? true : false;\r\n        // Two target scenarios:\r\n        // 1. Customer runs v1 snippet + runtime. If customer updates just cdn location to new SDK, it will run in compat mode so old apis work\r\n        // 2. Customer updates to new snippet (that uses cdn location to new SDK. This is same as a new customer onboarding\r\n        // and all api signatures are expected to map to new SDK. Note new snippet specifies version\r\n        if (version === 2.0) {\r\n            initialization.updateSnippetDefinitions(snippet);\r\n            initialization.loadAppInsights(legacyMode);\r\n            return initialization; // default behavior with new snippet\r\n        }\r\n        else {\r\n            var legacy = new AppInsightsDeprecated(snippet, initialization); // target scenario old snippet + updated endpoint\r\n            legacy.updateSnippetDefinitions(snippet);\r\n            initialization.loadAppInsights(legacyMode);\r\n            return legacy;\r\n        }\r\n    };\r\n    return ApplicationInsightsContainer;\r\n}());\r\nexport { ApplicationInsightsContainer };\r\n//# sourceMappingURL=ApplicationInsightsContainer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { ApplicationInsightsContainer } from \"./ApplicationInsightsContainer\";\r\nexport { Initialization as ApplicationInsights } from \"./Initialization\";\r\n\"use strict\";\r\n// should be global function that should load as soon as SDK loads\r\ntry {\r\n    // E2E sku on load initializes core and pipeline using snippet as input for configuration\r\n    // tslint:disable-next-line: no-var-keyword\r\n    var aiName;\r\n    if (typeof window !== \"undefined\" && typeof JSON !== \"undefined\") {\r\n        // get snippet or initialize to an empty object\r\n        aiName = window[\"appInsightsSDK\"] || \"appInsights\";\r\n        if (window[aiName] !== undefined) {\r\n            // this is the typical case for browser+snippet\r\n            var snippet = window[aiName] || { version: 2.0 };\r\n            // overwrite snippet with full appInsights\r\n            // for 2.0 initialize only if required\r\n            if ((snippet.version === 2.0 && window[aiName].initialize) || snippet.version === undefined) {\r\n                ApplicationInsightsContainer.getAppInsights(snippet, snippet.version);\r\n            }\r\n        }\r\n    }\r\n}\r\ncatch (e) {\r\n    // TODO: Find better place to warn to console when SDK initialization fails\r\n    if (console) {\r\n        console.warn('Failed to initialize AppInsights JS SDK for instance ' + aiName + e.message);\r\n    }\r\n}\r\n//# sourceMappingURL=Init.js.map"],"names":["StorageType","FieldType","DistributedTracingModes","EventsDiscardedReason","CoreUtils","isNullOrUndefined","input","disableCookies","_canUseCookies","newGuid","replace","GuidRegex","c","r","Math","random","toString","ChannelController","prototype","processTelemetry","item","this","channelQueue","forEach","queues","length","Object","defineProperty","get","enumerable","configurable","initialize","config","core","extensions","invalidChannelIdentifier_1","_this","isCookieUseDisabled","Array","channels","queue","sort","a","b","priority","i","setNextPlugin","queueItem","identifier","Error","push","arr","plugin","BaseCore","logger","notificationManager","_isInitialized","instrumentationKey","_notificationManager","create","addNotificationListener","listener","removeNotificationListener","eventsSent","events","eventsDiscarded","reason","extensionConfig","NotificationManager","throwInternal","severity","msgId","msg","properties","isUserAct","warnToConsole","message","resetInternalMessageCount","_a","_extensions","apply","concat","extension","isValid","_channelController","extA","extB","typeExtA","typeExtB","ext","t","idx","curr","splice","getTransmissionControls","ChannelControls","track","telemetryItem","iKey","time","Date","toISOString","ver","LoggingSeverity","listeners","index","indexOf","_loop_1","this_1","setTimeout","_loop_2","this_2","_InternalMessageId","_InternalLogMessage","sanitizeDiagnosticText","text","dataType","AiNonUserActionablePrefix","AiUserActionablePrefix","messageId","diagnosticText","JSON","stringify","DiagnosticLogger","enableDebugExceptions","messageKey","_messageLogged","consoleLoggingLevel","WARNING","logInternalMessage","console","warn","log","_messageCount","_areInternalMessagesThrottled","logMessage","AIInternalMessagePrefix","telemetryLoggingLevel","maxInternalMessageLimit","throttleLimitMessage","throttleMessage","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","AppInsightsCore","baseCore","_notifyInvalidEvent","_validateTelemetryItem","pollInternalLogs","eventName","interval","diagnosticLogInterval","setInterval","name","baseType","baseData","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","traceParentHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","DataSanitizer","sanitizeKeyAndAddUniqueness","key","map","origLength","field","sanitizeKey","uniqueField","undefined","substring","MAX_NAME_LENGTH","padNumber","nameTrunc","trim","sanitizeString","value","maxLength","valueTrunc","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","messageTrunc","MAX_MESSAGE_LENGTH","sanitizeException","exception","exceptionTrunc","MAX_EXCEPTION_LENGTH","sanitizeProperties","tempProps","prop","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","inputTrunc","data","num","s","substr","str","Util","createDomEvent","event","Event","document","createEvent","initEvent","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","canUseCookies","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","random32","generateW3CId","tmp","hexValues","oct","clockSequenceHi","isArray","obj","call","isError","isDate","toISOStringForIE8","date","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","getExtension","extIx","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","host","parseHost","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","match","CorrelationIdHelper","canIncludeCorrelationHeader","requestUrl","currentHost","disableCorrelationHeaders","requestHost","enableCorsCorrelation","matchExists_1","includedDomains","correlationHeaderDomains","regex","RegExp","test","excludedDomains","correlationHeaderExcludedDomains","getCorrelationContext","responseHeader","correlationId","getCorrelationContextValue","correlationIdPrefix","keyValues","keyValue","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","DisabledPropertyName","ProcessLegacy","HttpMethod","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","_super","__assign","assign","n","arguments","Data","tslib_1.__extends","Envelope","sampleRate","tags","aiDataContract","Required","Hidden","Domain","EventData","envelopeType","Default","StackFrame","ExceptionData","exceptions","ExceptionDetails","hasFullStack","parsedStack","Exception","CreateFromInterface","ex","_ExceptionDetails","tslib_1.__assign","toInterface","severityLevel","problemGroup","isManual","CreateSimpleException","typeName","assembly","fileName","details","line","frame","outerId","_StackFrame","parseStack","frames_1","level","totalSizeInBytes","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","baseSize","sourceFrame","matches","DataPointType","MetricData","metrics","DataPoint","kind","Measurement","count","max","stdDev","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","GeneratedRemoteDependencyData","resultCode","requestAPI","correlationContext","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","MessageData","Trace","PageViewPerfData","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","SeverityLevel","AIData","ConfigurationManager","getConfig","configValue","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","TelemetryItemCreator","envelopeName","customProperties","systemProperties","Extensions","UserExt","DeviceExt","TraceExt","WebExt","AppExt","OSExt","SessionExt","SDKExt","CtxTagKeys","PropertiesPluginIdentifier","BreezeChannelIdentifier","AppInsightsDeprecated","getDefaultConfig","sessionRenewalMs","sessionExpirationMs","maxBatchSizeInBytes","maxBatchInterval","enableDebug","disableExceptionTracking","disableTelemetry","verboseLogging","emitLineDelimitedJson","autoTrackPageVisitTime","samplingPercentage","disableAjaxTracking","maxAjaxCallsPerView","isBeaconApiDisabled","disableFlushOnBeforeUnload","enableSessionStorageBuffer","isRetryDisabled","isStorageUseDisabled","isBrowserLinkTrackingEnabled","addTelemetryInitializers","callBack","_hasLegacyInitializers","appInsightsNew","addTelemetryInitializer","_processLegacyInitializers","_queue","startTrackPage","stopTrackPage","trackPageView","telemetry","uri","trackEvent","trackDependency","totalTime","trackDependencyData","responseCode","trackException","handledAt","trackMetric","average","sampleCount","trackTrace","flush","async","setAuthenticatedUserContext","authenticatedUserId","accountId","storeInCookie","context","user","clearAuthenticatedUserContext","_onerror","startTrackEvent","stopTrackEvent","downloadAndSetup","updateSnippetDefinitions","snippet","loadAppInsights","originalTrackPageView_1","pagePath","legacyPageView","legacyEvent","props","bind","PageViewManager","pageView","title","_pageViewPerformanceManager","isPerformanceTimingSupported","appInsights","sendPageViewInternal","_channel","q","_logger","customDuration","pageViewSent","getPerformanceTiming","shouldCollectDuration","overridePageViewDuration","handle","isPerformanceTimingDataReady","clearInterval","pageViewPerformance","populatePageViewPerformanceEvent","pageViewPerformanceSent","sendPageViewPerformanceInternal","CRITICAL","pageViewPerformanceManager","PageVisitTimeManager","trackPreviousPageVisit","currentPageName","currentPageUrl","prevPageVisitTimeData","restartPageVisitTimer","pageVisitTimeTrackingHandler","pageName","pageUrl","pageVisitTime","prevPageVisitData","stopPageVisitTimer","startPageVisitTimer","prevPageVisitDataKeyName","currPageVisitData","PageVisitData","currPageVisitDataStr","pageVisitEndTime","pageVisitDataJsonStr","parse","pageVisitStartTime","PageViewPerformanceManager","navigationTiming","getPerformanceNavigationTiming","total","network","startTime","connectEnd","request","requestStart","responseStart","response","responseEnd","dom","loadEventEnd","isPerformanceNavigationTimingSupported","getEntriesByType","domainLookupStart","domLoading","durations","_i","botAgentNames","isGoogleBot","MAX_DURATION_ALLOWED","durationProperty","ApplicationInsights","enableAutoRouteTracking","namePrefix","env","doNotSendItem","telemetryInitializersCount","_telemetryInitializers","telemetryInitializer","_nextPlugin","next","EventTelemetry","_eventTracking","stop","trace","metric","inPv","_pageViewManager","_pageVisitTimeManager","refUri","referrer","_trackAjaxAttempts","trackPageViewPerformance","_pageTracking","measurement","sendExceptionInternal","exceptionPartB","properties_1","URL","_sendCORSException","errorString","_initialize","_globalconfig","defaults","configGetters","cookieDomain","sdkExtension","appId","trackPageVisitTime","_addDefaultTelemetryInitializers","Timing","action","pageViewItem","f","instance","autoExceptionInstrumented","originalOnError_1","onerror","handled","history","pushState","replaceState","_self_1","_properties","ret","dispatchEvent","telemetryTrace","traceID","_currUri","_prevUri","autoRoutePVDelay","PageName","PageUrl","browserLinkPaths_1","_addTelemetryInitializer","envelope","remoteData","Version","_events","_name","ArraySendBuffer","enqueue","payload","_buffer","clear","getItems","batchPayloads","_config","join","markAsSent","clearSent","SessionStorageSendBuffer","MAX_BUFFER_SIZE","_bufferFullMessageSent","setBuffer","BUFFER_KEY","SENT_BUFFER_KEY","removePayloadsFromBuffer","sentElements","getBuffer","payloads","buffer","remaining","contains","j","prefixedKey","bufferJson","bufferItems","notDeliveredItems","EnvelopeCreator","extractProperties","extractPropsAndMeasurements","createEnvelope","iKeyNoDashes","extractPartAExtensions","authId","localId","app","sesId","device","deviceClass","ip","web","browserLang","browserVer","browser","screenRes","userConsent","model","os","parentID","tgs","tg","DependencyEnvelopeCreator","Create","customMeasurements","bd","command","EventEnvelopeCreator","ExceptionEnvelopeCreator","MetricEnvelopeCreator","PageViewEnvelopeCreator","currentContextId","pageType","isLoggedIn","pageTags","PageViewPerformanceEnvelopeCreator","TraceEnvelopeCreator","Serializer","serialize","output","_serializeObject","source","circularReferenceCheck","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isPresent","isObject","sources","expectedType","parseFloat","OfflineListener","_onlineStatus","isListening","_setOnline","_setOffline","body","ononline","onoffline","Offline","isOnline","onLine","isOffline","HashCodeScoreGenerator","getHashCodeScore","getHashCode","INT_MAX_VALUE","MIN_INPUT_LENGTH","hash","charCodeAt","abs","SamplingScoreGenerator","getSamplingScore","hashCodeGeneragor","Sample","isSampledIn","samplingScoreGenerator","samplingRate","Sender","constructEnvelope","orig","_getDefaultAppInsightsChannelConfig","onunloadDisableBeacon","_getEmptyAppInsightsChannelConfig","pause","resume","triggerSend","onunloadFlush","_beaconSender","teardown","_serializer","_consecutiveErrors","_retryAt","_lastSend","_sender","defaultConfig","_sample","XMLHttpRequest","_xhrSender","_XMLHttpRequestSupported","XDomainRequest","_xdrSender","_isSampledIn","SampleRate","aiEnvelope_1","doNotSendItem_1","bufferPayload","batch","_setupTimer","_xhrReadyStateChange","xhr","countOfItemsInPayload","readyState","_appId","_parseResponse","responseText","status","_isRetriable","_resendPayload","_onError","_formatErrorMessageXhr","_onPartialSuccess","_onSuccess","forcedSender","clearTimeout","_timeoutHandle","results","failed","retry","errors_1","errors","reverse","extracted","statusCode","itemsAccepted","itemsReceived","_xdrOnLoad","xdr","_formatErrorMessageXdr","isAsync","plainTextBatch","Blob","open","setRequestHeader","onreadystatechange","send","linearFactor","payload_1","_setRetryTime","delayInSeconds","backOffSlot","pow","backOffDelay","retryAfterTimeSpan","retryInterval","timerValue","onload","hostingProtocol","lastIndexOf","Session","_SessionManager","update","automaticSession","initializeAutomaticSession","acquisitionExpired","acquisitionDate","renewalExpired","renewalDate","renew","cookieUpdatedTimestamp","cookieUpdateInterval","backup","_storageNamePrefix","initializeAutomaticSessionWithData","sessionData","params","acq","renewal","guid","acquisitionExpiry","renewalExpiry","cookieExpiry","setTime","cookieDomnain","toUTCString","acquisitionSpan","renewalSpan","cookieNameConst","Application","Device","Internal","sdkVersion","User","validateUserInput","authenticatedId","authCookie","cookieSeparator","authUserCookieName","encodeURI","userCookieName","isNewUser","acqStr","accountAcquisitionDate","newCookie","name_1","authCookieString","decodeURI","Location","TelemetryTrace","parentId","TelemetryContext","applySessionContext","sessionContext","session","sessionManager","applyOperatingSystemContxt","applyApplicationContext","application","build","applyDeviceContext","applyInternalContext","internal","agentVersion","applyLocationContext","applyOperationContext","applyWebContext","applyUserContext","cleanUp","PropertiesPlugin","_extensionConfig","_breezeChannel","_processTelemetryInternal","nextPlugin","XHRMonitoringState","openDone","setRequestHeaderDone","sendDone","abortDone","onreadystatechangeCallbackAttached","ajaxRecord","spanID","completed","requestHeadersSize","requestHeaders","ttfb","responseReceivingDuration","callbackDuration","ajaxTotalDuration","aborted","requestSize","requestSentTime","responseStartedTime","responseFinishedTime","callbackFinishedTime","endTime","originalOnreadystatechage","xhrMonitoringState","clientFailure","CalculateMetrics","EventHelper","AttachEvent","eventNameWithoutOn","handlerRef","attachEvent","DetachEvent","detachEvent","removeEventListener","Traceparent","isValidTraceId","isValidSpanId","version","traceId","spanId","traceFlag","DEFAULT_TRACE_FLAG","DEFAULT_VERSION","AjaxMonitor","disableFetchTracking","distributedTracingMode","AI","enableRequestHeaderTracking","enableResponseHeaderTracking","getEmptyConfig","getFailedAjaxDiagnosticsMessage","ajaxData","dependency","trackDependencyDataInternal","includeCorrelationHeaders","init","currentWindowHost","headers","Headers","Request","_isUsingAIHeaders","set","_context","_isUsingW3CHeaders","traceparent","initialized","_fetchInitialized","_core","AI_AND_W3C","W3C","instrumentXhr","instrumentFetch","propExt","supportsFetch","originalFetch","fetch","fetchMonitorInstance","fetchData","isFetchInstrumented","isMonitoredInstance","createFetchRecord","ajaxDiagnosticsMessage","getFailedFetchDiagnosticsMessage","then","onFetchComplete","catch","onFetchFailed","supportsAjaxMonitoring","instrumentOpen","instrumentSend","instrumentAbort","instrumentSetRequestHeader","excludeAjaxDataValidation","disabledProperty","ajaxValidation","abort","originalOpen","ajaxMonitorInstance","openHandler","attachToOnReadyStateChange","originalSend","content","sendHandler","originalAbort","originalSetRequestHeader","header","onAjaxComplete","exceptionText","getAjaxCorrelationContext","getAllResponseHeaders","responseHeaderMap_1","parts","shift","responseHeaders","responseHeadersString","getResponseHeader","fetchDiagnosticsMessage","getFetchCorrelationContext","responseHeaderMap_2","Initialization","inPvp","dependencies","channel","legacyMode","appInsightsChannel","emptyQueue","addHousekeepingBeforeUnload","length_1","appInsightsInstance","_sessionManager","getSKUDefaults","DependenciesPlugin","ApplicationInsightsContainer","getAppInsights","initialization","legacy","aiName"],"mappings":"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"}