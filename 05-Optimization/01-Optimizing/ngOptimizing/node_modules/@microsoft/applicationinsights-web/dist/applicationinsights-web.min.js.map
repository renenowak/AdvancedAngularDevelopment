{"version":3,"file":"applicationinsights-web.min.js","sources":["../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/ChannelController.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/BaseCore.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/NotificationManager.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/DiagnosticLogger.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/AppInsightsCore.js","../../common/temp/node_modules/tslib/tslib.es6.js","../../shared/AppInsightsCommon/dist-esm/Enums.js","../../shared/AppInsightsCommon/dist-esm/RequestResponseHeaders.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataSanitizer.js","../../shared/AppInsightsCommon/dist-esm/Util.js","../../shared/AppInsightsCommon/dist-esm/Constants.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Data.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Base.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Envelope.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Domain.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/EventData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Event.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Exception.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataPoint.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Metric.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/PageView.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/RemoteDependencyData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Trace.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/PageViewPerformance.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Data.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/IConfig.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","../../shared/AppInsightsCommon/dist-esm/TelemetryItemCreator.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/PartAExtensions.js","../../shared/AppInsightsCommon/dist-esm/applicationinsights-common.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageVisitTimeManager.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/ApplicationInsights.js","../../channels/applicationinsights-channel-js/dist-esm/SendBuffer.js","../../channels/applicationinsights-channel-js/dist-esm/EnvelopeCreator.js","../../channels/applicationinsights-channel-js/dist-esm/Serializer.js","../../channels/applicationinsights-channel-js/dist-esm/Offline.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryProcessors/Sample.js","../../channels/applicationinsights-channel-js/dist-esm/Sender.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Session.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Application.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Device.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Internal.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/User.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Location.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js","../../extensions/applicationinsights-properties-js/dist-esm/TelemetryContext.js","../../extensions/applicationinsights-properties-js/dist-esm/PropertiesPlugin.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajaxRecord.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajaxUtils.js","../../extensions/applicationinsights-dependencies-js/dist-esm/TraceParent.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajax.js","../dist-esm/Initialization.js","../dist-esm/ApplicationInsightsDeprecated.js","../dist-esm/ApplicationInsightsContainer.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nexport var EventsDiscardedReason = {\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5,\r\n};\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n     * Creates a new GUID.\r\n     * @return {string} A GUID.\r\n     */\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","import { CoreUtils } from \"./CoreUtils\";\r\n\"use strict\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (config.isCookieUseDisabled) {\r\n            CoreUtils.disableCookies();\r\n        }\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nexport { ChannelController };\r\n//# sourceMappingURL=ChannelController.js.map","import { CoreUtils } from \"./CoreUtils\";\r\nimport { ChannelController } from './ChannelController';\r\n\"use strict\";\r\nvar validationError = \"Extensions must provide callback to initialize\";\r\nvar BaseCore = /** @class */ (function () {\r\n    function BaseCore() {\r\n        this._isInitialized = false;\r\n        this._extensions = new Array();\r\n        this._channelController = new ChannelController();\r\n    }\r\n    BaseCore.prototype.initialize = function (config, extensions, logger, notificationManager) {\r\n        var _this = this;\r\n        // Make sure core is only initialized once\r\n        if (this._isInitialized) {\r\n            throw Error(\"Core should not be initialized more than once\");\r\n        }\r\n        if (!config || CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n            throw Error(\"Please provide instrumentation key\");\r\n        }\r\n        this.config = config;\r\n        this._notificationManager = notificationManager;\r\n        if (!this._notificationManager) {\r\n            this._notificationManager = Object.create({\r\n                addNotificationListener: function (listener) { },\r\n                removeNotificationListener: function (listener) { },\r\n                eventsSent: function (events) { },\r\n                eventsDiscarded: function (events, reason) { }\r\n            });\r\n        }\r\n        this.config.extensions = CoreUtils.isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions;\r\n        // add notification to the extensions in the config so other plugins can access it\r\n        this.config.extensionConfig = CoreUtils.isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig;\r\n        if (this._notificationManager) {\r\n            this.config.extensionConfig.NotificationManager = this._notificationManager;\r\n        }\r\n        this.logger = logger;\r\n        if (!this.logger) {\r\n            this.logger = Object.create({\r\n                throwInternal: function (severity, msgId, msg, properties, isUserAct) {\r\n                    if (isUserAct === void 0) { isUserAct = false; }\r\n                },\r\n                warnToConsole: function (message) { },\r\n                resetInternalMessageCount: function () { }\r\n            });\r\n        }\r\n        // Concat all available extensions \r\n        (_a = this._extensions).push.apply(_a, extensions.concat(this.config.extensions));\r\n        // Initial validation \r\n        this._extensions.forEach(function (extension) {\r\n            var isValid = true;\r\n            if (CoreUtils.isNullOrUndefined(extension) || CoreUtils.isNullOrUndefined(extension.initialize)) {\r\n                isValid = false;\r\n            }\r\n            if (!isValid) {\r\n                throw Error(validationError);\r\n            }\r\n        });\r\n        // Initial validation complete\r\n        this._extensions.push(this._channelController);\r\n        // Sort by priority\r\n        this._extensions = this._extensions.sort(function (a, b) {\r\n            var extA = a;\r\n            var extB = b;\r\n            var typeExtA = typeof extA.processTelemetry;\r\n            var typeExtB = typeof extB.processTelemetry;\r\n            if (typeExtA === 'function' && typeExtB === 'function') {\r\n                return extA.priority - extB.priority;\r\n            }\r\n            if (typeExtA === 'function' && typeExtB !== 'function') {\r\n                // keep non telemetryplugin specific extensions at start\r\n                return 1;\r\n            }\r\n            if (typeExtA !== 'function' && typeExtB === 'function') {\r\n                return -1;\r\n            }\r\n        });\r\n        // sort complete\r\n        // Check if any two extensions have the same priority, then warn to console\r\n        var priority = {};\r\n        this._extensions.forEach(function (ext) {\r\n            var t = ext;\r\n            if (t && t.priority) {\r\n                if (!CoreUtils.isNullOrUndefined(priority[t.priority])) {\r\n                    if (_this.logger) {\r\n                        _this.logger.warnToConsole(\"Two extensions have same priority\" + priority[t.priority] + \", \" + t.identifier);\r\n                    }\r\n                }\r\n                else {\r\n                    priority[t.priority] = t.identifier; // set a value\r\n                }\r\n            }\r\n        });\r\n        var c = -1;\r\n        // Set next plugin for all until channel controller\r\n        for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n            var curr = (this._extensions[idx]);\r\n            if (curr && typeof curr.processTelemetry !== 'function') {\r\n                // these are initialized only, allowing an entry point for extensions to be initialized when SDK initializes\r\n                continue;\r\n            }\r\n            if (curr.priority === this._channelController.priority) {\r\n                c = idx + 1;\r\n                break; // channel controller will set remaining pipeline\r\n            }\r\n            this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n        }\r\n        // initialize channel controller first, this will initialize all channel plugins\r\n        this._channelController.initialize(this.config, this, this._extensions);\r\n        // initialize remaining regular plugins\r\n        this._extensions.forEach(function (ext) {\r\n            var e = ext;\r\n            if (e && e.priority < _this._channelController.priority) {\r\n                ext.initialize(_this.config, _this, _this._extensions); // initialize\r\n            }\r\n        });\r\n        // Remove sender channels from main list\r\n        if (c < this._extensions.length) {\r\n            this._extensions.splice(c);\r\n        }\r\n        if (this.getTransmissionControls().length === 0) {\r\n            throw new Error(\"No channels available\");\r\n        }\r\n        this._isInitialized = true;\r\n        var _a;\r\n    };\r\n    BaseCore.prototype.getTransmissionControls = function () {\r\n        return this._channelController.ChannelControls;\r\n    };\r\n    BaseCore.prototype.track = function (telemetryItem) {\r\n        if (!telemetryItem.iKey) {\r\n            // setup default iKey if not passed in\r\n            telemetryItem.iKey = this.config.instrumentationKey;\r\n        }\r\n        if (!telemetryItem.time) {\r\n            // add default timestamp if not passed in\r\n            telemetryItem.time = new Date().toISOString();\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.ver)) {\r\n            // CommonSchema 4.0\r\n            telemetryItem.ver = \"4.0\";\r\n        }\r\n        // invoke any common telemetry processors before sending through pipeline\r\n        if (this._extensions.length === 0) {\r\n            this._channelController.processTelemetry(telemetryItem); // Pass to Channel controller so data is sent to correct channel queues\r\n        }\r\n        var i = 0;\r\n        while (i < this._extensions.length) {\r\n            if (this._extensions[i].processTelemetry) {\r\n                this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n    };\r\n    return BaseCore;\r\n}());\r\nexport { BaseCore };\r\n//# sourceMappingURL=BaseCore.js.map","/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager() {\r\n        this.listeners = [];\r\n    }\r\n    /**\r\n     * Adds a notification listener.\r\n     * @param {INotificationListener} listener - The notification listener to be added.\r\n     */\r\n    NotificationManager.prototype.addNotificationListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n     */\r\n    NotificationManager.prototype.removeNotificationListener = function (listener) {\r\n        var index = this.listeners.indexOf(listener);\r\n        while (index > -1) {\r\n            this.listeners.splice(index, 1);\r\n            index = this.listeners.indexOf(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events sent.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n     */\r\n    NotificationManager.prototype.eventsSent = function (events) {\r\n        var _this = this;\r\n        var _loop_1 = function (i) {\r\n            if (this_1.listeners[i].eventsSent) {\r\n                setTimeout(function () { return _this.listeners[i].eventsSent(events); }, 0);\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events being discarded.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n     * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n     * constant should be used to check the different values.\r\n     */\r\n    NotificationManager.prototype.eventsDiscarded = function (events, reason) {\r\n        var _this = this;\r\n        var _loop_2 = function (i) {\r\n            if (this_2.listeners[i].eventsDiscarded) {\r\n                setTimeout(function () { return _this.listeners[i].eventsDiscarded(events, reason); }, 0);\r\n            }\r\n        };\r\n        var this_2 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_2(i);\r\n        }\r\n    };\r\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n    FailedMonitorAjaxSetRequestHeader: 71,\r\n    SendBrowserInfoOnUserInit: 72\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { _InternalMessageId, LoggingSeverity } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        this.messageId = msgId;\r\n        this.message =\r\n            (isUserAct ? _InternalLogMessage.AiUserActionablePrefix : _InternalLogMessage.AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var diagnosticText = (msg ? \" message:\" + _InternalLogMessage.sanitizeDiagnosticText(msg) : \"\") +\r\n            (properties ? \" props:\" + _InternalLogMessage.sanitizeDiagnosticText(JSON.stringify(properties)) : \"\");\r\n        this.message += diagnosticText;\r\n    }\r\n    _InternalLogMessage.sanitizeDiagnosticText = function (text) {\r\n        return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n    };\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    /**\r\n     * For user non actionable traces use AI Internal prefix.\r\n     */\r\n    _InternalLogMessage.AiNonUserActionablePrefix = \"AI (Internal): \";\r\n    /**\r\n     * Prefix of the traces in portal.\r\n     */\r\n    _InternalLogMessage.AiUserActionablePrefix = \"AI: \";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         *  Session storage key for the prefix for the key indicating message type already logged\r\n         */\r\n        this.AIInternalMessagePrefix = \"AITR_\";\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        this._messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        this._messageLogged = {};\r\n        /**\r\n         * When this is true the SDK will throw exceptions to aid in debugging.\r\n         */\r\n        this.enableDebugExceptions = function () { return false; };\r\n        /**\r\n         * 0: OFF (default)\r\n         * 1: CRITICAL\r\n         * 2: >= WARNING\r\n         */\r\n        this.consoleLoggingLevel = function () { return 0; };\r\n        /**\r\n         * 0: OFF\r\n         * 1: CRITICAL (default)\r\n         * 2: >= WARNING\r\n         */\r\n        this.telemetryLoggingLevel = function () { return 1; };\r\n        /**\r\n         * The maximum number of internal messages allowed to be sent per page view\r\n         */\r\n        this.maxInternalMessageLimit = function () { return 25; };\r\n        if (CoreUtils.isNullOrUndefined(config)) {\r\n            // TODO: Use default config\r\n            // config = AppInsightsCore.defaultConfig;\r\n            // For now, use defaults specified in DiagnosticLogger members;\r\n            return;\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelConsole)) {\r\n            this.consoleLoggingLevel = function () { return config.loggingLevelConsole; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelTelemetry)) {\r\n            this.telemetryLoggingLevel = function () { return config.loggingLevelTelemetry; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.maxMessageLimit)) {\r\n            this.maxInternalMessageLimit = function () { return config.maxMessageLimit; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.enableDebugExceptions)) {\r\n            this.enableDebugExceptions = function () { return config.enableDebugExceptions; };\r\n        }\r\n    }\r\n    /**\r\n     * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The log message.\r\n     */\r\n    DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n        if (this.enableDebugExceptions()) {\r\n            throw message;\r\n        }\r\n        else {\r\n            if (typeof (message) !== \"undefined\" && !!message) {\r\n                if (typeof (message.message) !== \"undefined\") {\r\n                    if (isUserAct) {\r\n                        // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                        var messageKey = +message.messageId;\r\n                        if (!this._messageLogged[messageKey] || this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                            this._messageLogged[messageKey] = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                        if (this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                        }\r\n                    }\r\n                    this.logInternalMessage(severity, message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This will write a warning to the console if possible\r\n     * @param message {string} - The warning message\r\n     */\r\n    DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n        if (typeof console !== \"undefined\" && !!console) {\r\n            if (typeof console.warn === \"function\") {\r\n                console.warn(message);\r\n            }\r\n            else if (typeof console.log === \"function\") {\r\n                console.log(message);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Resets the internal message count\r\n     */\r\n    DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n        this._messageCount = 0;\r\n        this._messageLogged = {};\r\n    };\r\n    /**\r\n     * Logs a message to the internal queue.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The message to log.\r\n     */\r\n    DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n        if (this._areInternalMessagesThrottled()) {\r\n            return;\r\n        }\r\n        // check if this message type was already logged for this session and if so, don't log it again\r\n        var logMessage = true;\r\n        var messageKey = this.AIInternalMessagePrefix + message.messageId;\r\n        // if the session storage is not available, limit to only one message type per page view\r\n        if (this._messageLogged[messageKey]) {\r\n            logMessage = false;\r\n        }\r\n        else {\r\n            this._messageLogged[messageKey] = true;\r\n        }\r\n        if (logMessage) {\r\n            // Push the event in the internal queue\r\n            if (severity <= this.telemetryLoggingLevel()) {\r\n                this.queue.push(message);\r\n                this._messageCount++;\r\n            }\r\n            // When throttle limit reached, send a special event\r\n            if (this._messageCount === this.maxInternalMessageLimit()) {\r\n                var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                var throttleMessage = new _InternalLogMessage(_InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                this.queue.push(throttleMessage);\r\n                this.warnToConsole(throttleLimitMessage);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Indicates whether the internal events are throttled\r\n     */\r\n    DiagnosticLogger.prototype._areInternalMessagesThrottled = function () {\r\n        return this._messageCount >= this.maxInternalMessageLimit();\r\n    };\r\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\n//# sourceMappingURL=DiagnosticLogger.js.map","import { BaseCore } from './BaseCore';\r\nimport { EventsDiscardedReason } from \"../JavaScriptSDK.Enums/EventsDiscardedReason\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { _InternalLogMessage, DiagnosticLogger } from \"./DiagnosticLogger\";\r\n\"use strict\";\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        this.baseCore = new BaseCore();\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n        this._notificationManager = new NotificationManager();\r\n        this.logger = new DiagnosticLogger(config);\r\n        this.config = config;\r\n        this.baseCore.initialize(config, extensions, this.logger, this._notificationManager);\r\n    };\r\n    AppInsightsCore.prototype.getTransmissionControls = function () {\r\n        return this.baseCore.getTransmissionControls();\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        if (telemetryItem === null) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            // throw error\r\n            throw Error(\"Invalid telemetry item\");\r\n        }\r\n        // do basic validation before sending it through the pipeline\r\n        this._validateTelemetryItem(telemetryItem);\r\n        this.baseCore.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        if (this._notificationManager) {\r\n            this._notificationManager.addNotificationListener(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        if (this._notificationManager) {\r\n            this._notificationManager.removeNotificationListener(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function (eventName) {\r\n        var _this = this;\r\n        var interval = this.baseCore.config.diagnosticLogInterval;\r\n        if (!(interval > 0)) {\r\n            interval = 10000;\r\n        }\r\n        return setInterval(function () {\r\n            var queue = _this.logger ? _this.logger.queue : [];\r\n            queue.forEach(function (logMessage) {\r\n                var item = {\r\n                    name: eventName ? eventName : \"InternalMessageId: \" + logMessage.messageId,\r\n                    iKey: _this.baseCore.config.instrumentationKey,\r\n                    time: new Date().toISOString(),\r\n                    baseType: _InternalLogMessage.dataType,\r\n                    baseData: { message: logMessage.message }\r\n                };\r\n                _this.track(item);\r\n            });\r\n            queue.length = 0;\r\n        }, interval);\r\n    };\r\n    AppInsightsCore.prototype._validateTelemetryItem = function (telemetryItem) {\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry name required\");\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._notifyInvalidEvent = function (telemetryItem) {\r\n        if (this._notificationManager) {\r\n            this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);\r\n        }\r\n    };\r\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Type of storage to differentiate between local storage and session storage\r\n */\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\nexport var DistributedTracingModes;\r\n(function (DistributedTracingModes) {\r\n    /**\r\n     * (Default) Send Application Insights correlation headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI\"] = 0] = \"AI\";\r\n    /**\r\n     * Send both W3C Trace Context headers and back-compatibility Application Insights headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI_AND_W3C\"] = 1] = \"AI_AND_W3C\";\r\n    /**\r\n     * Send W3C Trace Context headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"W3C\"] = 2] = \"W3C\";\r\n})(DistributedTracingModes || (DistributedTracingModes = {}));\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar RequestHeaders = /** @class */ (function () {\r\n    function RequestHeaders() {\r\n    }\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    RequestHeaders.requestContextHeader = \"Request-Context\";\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    RequestHeaders.requestContextTargetKey = \"appId\";\r\n    /**\r\n     * Request-Context appId format\r\n     */\r\n    RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    RequestHeaders.requestIdHeader = \"Request-Id\";\r\n    /**\r\n     * W3C distributed tracing protocol header\r\n     */\r\n    RequestHeaders.traceParentHeader = \"traceparent\";\r\n    /**\r\n     * Sdk-Context header\r\n     * If this header passed with appId in content then appId will be returned back by the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n    /**\r\n     * String to pass in header for requesting appId back from the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n    RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n    return RequestHeaders;\r\n}());\r\nexport { RequestHeaders };\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        var nameTrunc;\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                nameTrunc = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return nameTrunc || name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        var valueTrunc;\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                valueTrunc = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return valueTrunc || value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        var messageTrunc;\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                messageTrunc = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return messageTrunc || message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        var exceptionTrunc;\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exceptionTrunc = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exceptionTrunc || exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        var inputTrunc;\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                inputTrunc = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return inputTrunc || input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\") {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * Max length allowed for custom names.\r\n     */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    Util.createDomEvent = function (eventName) {\r\n        var event = null;\r\n        if (typeof Event === \"function\") {\r\n            event = new Event(eventName);\r\n        }\r\n        else {\r\n            event = document.createEvent(\"Event\");\r\n            event.initEvent(eventName, true, true);\r\n        }\r\n        return event;\r\n    };\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid.toString(), uid.toString());\r\n            fail = storage.getItem(uid.toString()) !== uid.toString();\r\n            storage.removeItem(uid.toString());\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        CoreUtils.disableCookies();\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (CoreUtils._canUseCookies === undefined) {\r\n            CoreUtils._canUseCookies = false;\r\n            try {\r\n                CoreUtils._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return CoreUtils._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\") {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; // 5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * generate a random 32bit number (-0x80000000..0x7FFFFFFF).\r\n     */\r\n    Util.random32 = function () {\r\n        return (0x100000000 * Math.random()) | 0;\r\n    };\r\n    /**\r\n     * generate W3C trace id\r\n     */\r\n    Util.generateW3CId = function () {\r\n        var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n        // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n        var oct = \"\", tmp;\r\n        for (var a = 0; a < 4; a++) {\r\n            tmp = Util.random32();\r\n            oct +=\r\n                hexValues[tmp & 0xF] +\r\n                    hexValues[tmp >> 4 & 0xF] +\r\n                    hexValues[tmp >> 8 & 0xF] +\r\n                    hexValues[tmp >> 12 & 0xF] +\r\n                    hexValues[tmp >> 16 & 0xF] +\r\n                    hexValues[tmp >> 20 & 0xF] +\r\n                    hexValues[tmp >> 24 & 0xF] +\r\n                    hexValues[tmp >> 28 & 0xF];\r\n        }\r\n        // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n        var clockSequenceHi = hexValues[8 + (Math.random() * 4) | 0];\r\n        return oct.substr(0, 8) + oct.substr(9, 4) + \"4\" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') !== -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n     * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n     * happens in a script from other domain (cross origin, CORS).\r\n     */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n     * Returns string representation of an object suitable for diagnostics logging.\r\n     */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n     * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n     */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.getExtension = function (extensions, identifier) {\r\n        var extension = null;\r\n        var extIx = 0;\r\n        while (!extension && extIx < extensions.length) {\r\n            if (extensions[extIx] && extensions[extIx].identifier === identifier) {\r\n                extension = extensions[extIx];\r\n            }\r\n            extIx++;\r\n        }\r\n        return extension;\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations\r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : { host: UrlHelper.parseHost(url) }; // fill host field in the fallback case as that is the only externally required field from this fn\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    // Fallback method to grab host from url if document.createElement method is not available\r\n    UrlHelper.parseHost = function (url) {\r\n        var match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\r\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\r\n            return match[2];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n     * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n     */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var includedDomains = config && config.correlationHeaderDomains;\r\n        if (includedDomains) {\r\n            var matchExists_1;\r\n            includedDomains.forEach(function (domain) {\r\n                var regex = new RegExp(domain.toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n            });\r\n            if (!matchExists_1) {\r\n                return false;\r\n            }\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length === 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Combines target appId and target role name from response header.\r\n     */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets key from correlation response header\r\n     */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length === 2 && keyValue[0] === key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\n//# sourceMappingURL=Constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Data struct to contain only C section with custom fields.\r\n */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n            if (id) {\r\n                _this.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _this.exceptions = exception.exceptions;\r\n            _this.properties = exception.properties;\r\n            _this.measurements = exception.measurements;\r\n            if (exception.severityLevel) {\r\n                _this.severityLevel = exception.severityLevel;\r\n            }\r\n            if (exception.id) {\r\n                _this.id = exception.id;\r\n            }\r\n            if (exception.problemGroup) {\r\n                _this.problemGroup = exception.problemGroup;\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            _this.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n            if (!CoreUtils.isNullOrUndefined(exception.isManual)) {\r\n                _this.isManual = exception.isManual;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    Exception.CreateFromInterface = function (logger, exception) {\r\n        var exceptions = exception.exceptions\r\n            && exception.exceptions.map(function (ex) { return _ExceptionDetails.CreateFromInterface(logger, ex); });\r\n        var exceptionData = new Exception(logger, tslib_1.__assign({}, exception, { exceptions: exceptions }));\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a = this, exceptions = _a.exceptions, properties = _a.properties, measurements = _a.measurements, severityLevel = _a.severityLevel, ver = _a.ver, problemGroup = _a.problemGroup, id = _a.id, isManual = _a.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && exceptions.map(function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return {\r\n            ver: \"4.0\",\r\n            exceptions: exceptionDetailsInterface,\r\n            severityLevel: severityLevel,\r\n            properties: properties,\r\n            measurements: measurements,\r\n            problemGroup: problemGroup,\r\n            id: id,\r\n            isManual: isManual\r\n        };\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n            _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n            var stack = exception.stack;\r\n            _this.parsedStack = _ExceptionDetails.parseStack(stack);\r\n            _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        }\r\n        else {\r\n            _this.typeName = exception.typeName;\r\n            _this.message = exception.message;\r\n            _this.stack = exception.stack;\r\n            _this.parsedStack = exception.parsedStack;\r\n            _this.hasFullStack = exception.hasFullStack;\r\n        }\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var parsedStack = this.parsedStack instanceof Array\r\n            && this.parsedStack.map(function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = {\r\n            id: this.id,\r\n            outerId: this.outerId,\r\n            typeName: this.typeName,\r\n            message: this.message,\r\n            hasFullStack: this.hasFullStack,\r\n            stack: this.stack,\r\n            parsedStack: parsedStack || undefined\r\n        };\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception.parsedStack instanceof Array\r\n            && exception.parsedStack.map(function (frame) { return _StackFrame.CreateFromInterface(frame); }))\r\n            || exception.parsedStack;\r\n        var exceptionDetails = new _ExceptionDetails(logger, tslib_1.__assign({}, exception, { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    _ExceptionDetails.parseStack = function (stack) {\r\n        var parsedStack;\r\n        if (typeof stack === \"string\") {\r\n            var frames_1 = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames_1.length; i++) {\r\n                var frame = frames_1[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames_1[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(sourceFrame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default,\r\n        };\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util.trim(frame);\r\n            _this.fileName = \"\";\r\n            _this.line = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _this.level = sourceFrame.level;\r\n            _this.method = sourceFrame.method;\r\n            _this.assembly = sourceFrame.assembly;\r\n            _this.fileName = sourceFrame.fileName;\r\n            _this.line = sourceFrame.line;\r\n            _this.sizeInBytes = 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        return {\r\n            level: this.level,\r\n            method: this.method,\r\n            assembly: this.assembly,\r\n            fileName: this.fileName,\r\n            line: this.line\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util, AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = DataSanitizer.sanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _this.target = _this.target + \" | \" + correlationContext;\r\n        }\r\n        _this.name = DataSanitizer.sanitizeString(logger, dependencyFields.name);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _this.domProcessing = cs4BaseData.domProcessing;\r\n            _this.duration = cs4BaseData.duration;\r\n            _this.networkConnect = cs4BaseData.networkConnect;\r\n            _this.perfTotal = cs4BaseData.perfTotal;\r\n            _this.receivedResponse = cs4BaseData.receivedResponse;\r\n            _this.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.applicationBuild = \"ai.application.build\";\r\n        this.applicationTypeId = \"ai.application.typeId\";\r\n        this.applicationId = \"ai.application.applicationId\";\r\n        this.applicationLayer = \"ai.application.layer\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceIp = \"ai.device.ip\";\r\n        this.deviceLanguage = \"ai.device.language\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n        this.deviceNetwork = \"ai.device.network\";\r\n        this.deviceNetworkName = \"ai.device.networkName\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOS = \"ai.device.os\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n        this.deviceRoleName = \"ai.device.roleName\";\r\n        this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.deviceMachineName = \"ai.device.machineName\";\r\n        this.deviceVMName = \"ai.device.vmName\";\r\n        this.deviceBrowser = \"ai.device.browser\";\r\n        this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.locationCountry = \"ai.location.country\";\r\n        this.locationProvince = \"ai.location.province\";\r\n        this.locationCity = \"ai.location.city\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationRootId = \"ai.operation.rootId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.sessionIsNew = \"ai.session.isNew\";\r\n        this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userAgent = \"ai.user.userAgent\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userStoreRegion = \"ai.user.storeRegion\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n        this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n        this.cloudName = \"ai.cloud.name\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.cloudEnvironment = \"ai.cloud.environment\";\r\n        this.cloudLocation = \"ai.cloud.location\";\r\n        this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from \"./Util\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { CoreUtils } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item domain specific properties; part B\r\n     * @param baseType telemetry item type. ie PageViewData\r\n     * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties user defined custom properties; part C\r\n     * @param systemProperties system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n        envelopeName = DataSanitizer.sanitizeString(logger, envelopeName) || Util.NotSpecified;\r\n        if (CoreUtils.isNullOrUndefined(item) ||\r\n            CoreUtils.isNullOrUndefined(baseType) ||\r\n            CoreUtils.isNullOrUndefined(envelopeName)) {\r\n            throw Error(\"Input doesn't contain all required fields\");\r\n        }\r\n        var telemetryItem = {\r\n            name: envelopeName,\r\n            time: new Date().toISOString(),\r\n            iKey: \"\",\r\n            ext: systemProperties ? systemProperties : {},\r\n            tags: [],\r\n            data: {},\r\n            baseType: baseType,\r\n            baseData: item // Part B\r\n        };\r\n        // Part C\r\n        if (!CoreUtils.isNullOrUndefined(customProperties)) {\r\n            for (var prop in customProperties) {\r\n                if (customProperties.hasOwnProperty(prop)) {\r\n                    telemetryItem.data[prop] = customProperties[prop];\r\n                }\r\n            }\r\n        }\r\n        return telemetryItem;\r\n    };\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","import { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = \"user\";\r\n    Extensions.DeviceExt = \"device\";\r\n    Extensions.TraceExt = \"trace\";\r\n    Extensions.WebExt = \"web\";\r\n    Extensions.AppExt = \"app\";\r\n    Extensions.OSExt = \"os\";\r\n    Extensions.SessionExt = \"ses\";\r\n    Extensions.SDKExt = \"sdk\";\r\n    return Extensions;\r\n}());\r\nexport { Extensions };\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions } from './Interfaces/PartAExtensions';\r\nexport { DistributedTracingModes } from './Enums';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DateTimeUtils, Util } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n * Class encapsulates sending page views and page view performance telemetry.\r\n */\r\nvar PageViewManager = /** @class */ (function () {\r\n    function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {\r\n        this.pageViewPerformanceSent = false;\r\n        this.overridePageViewDuration = false;\r\n        this.overridePageViewDuration = overridePageViewDuration;\r\n        this.appInsights = appInsights;\r\n        this._pageViewPerformanceManager = pageViewPerformanceManager;\r\n        if (core) {\r\n            this._channel = function () { return (core.getTransmissionControls()); };\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    /**\r\n     * Currently supported cases:\r\n     * 1) (default case) track page view called with default parameters, overridePageViewDuration = false. Page view is sent with page view performance when navigation timing data is available.\r\n     *    a. If navigation timing is not supported then page view is sent right away with undefined duration. Page view performance is not sent.\r\n     * 2) overridePageViewDuration = true, custom duration provided. Custom duration is used, page view sends right away.\r\n     * 3) overridePageViewDuration = true, custom duration NOT provided. Page view is sent right away, duration is time spent from page load till now (or undefined if navigation timing is not supported).\r\n     * 4) overridePageViewDuration = false, custom duration is provided. Page view is sent right away with custom duration.\r\n     *\r\n     * In all cases page view performance is sent once (only for the 1st call of trackPageView), or not sent if navigation timing is not supported.\r\n     */\r\n    PageViewManager.prototype.trackPageView = function (pageView, customProperties) {\r\n        var _this = this;\r\n        var name = pageView.name;\r\n        if (CoreUtils.isNullOrUndefined(name) || typeof name !== \"string\") {\r\n            name = pageView.name = window.document && window.document.title || \"\";\r\n        }\r\n        var uri = pageView.uri;\r\n        if (CoreUtils.isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n            uri = pageView.uri = window.location && window.location.href || \"\";\r\n        }\r\n        // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n        // do not provide the duration, set duration to undefined\r\n        // Also this is case 4\r\n        if (!this._pageViewPerformanceManager.isPerformanceTimingSupported()) {\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NavigationTimingNotSupported, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n            return;\r\n        }\r\n        var pageViewSent = false;\r\n        var customDuration;\r\n        // if the performance timing is supported by the browser, calculate the custom duration\r\n        var start = this._pageViewPerformanceManager.getPerformanceTiming().navigationStart;\r\n        customDuration = DateTimeUtils.GetDuration(start, +new Date);\r\n        if (!this._pageViewPerformanceManager.shouldCollectDuration(customDuration)) {\r\n            customDuration = undefined;\r\n        }\r\n        // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n        // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n        var duration;\r\n        if (!CoreUtils.isNullOrUndefined(customProperties) &&\r\n            !CoreUtils.isNullOrUndefined(customProperties.duration)) {\r\n            duration = customProperties.duration;\r\n        }\r\n        if (this.overridePageViewDuration || !isNaN(duration)) {\r\n            if (isNaN(duration)) {\r\n                // case 3\r\n                if (!customProperties) {\r\n                    customProperties = {};\r\n                }\r\n                customProperties[\"duration\"] = customDuration;\r\n            }\r\n            // case 2\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            pageViewSent = true;\r\n        }\r\n        // now try to send the page view performance telemetry\r\n        var maxDurationLimit = 60000;\r\n        if (!customProperties) {\r\n            customProperties = {};\r\n        }\r\n        var handle = setInterval((function () {\r\n            try {\r\n                if (_this._pageViewPerformanceManager.isPerformanceTimingDataReady()) {\r\n                    clearInterval(handle);\r\n                    var pageViewPerformance = {\r\n                        name: name,\r\n                        uri: uri\r\n                    };\r\n                    _this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n                    if (!pageViewPerformance.isValid && !pageViewSent) {\r\n                        // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                        // That's the best value we can get that makes sense.\r\n                        customProperties[\"duration\"] = customDuration;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                    else {\r\n                        if (!pageViewSent) {\r\n                            customProperties[\"duration\"] = pageViewPerformance.durationMs;\r\n                            _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        }\r\n                        if (!_this.pageViewPerformanceSent) {\r\n                            _this.appInsights.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n                            _this.pageViewPerformanceSent = true;\r\n                        }\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n                else if (DateTimeUtils.GetDuration(start, +new Date) > maxDurationLimit) {\r\n                    // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                    // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                    clearInterval(handle);\r\n                    if (!pageViewSent) {\r\n                        customProperties[\"duration\"] = maxDurationLimit;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailedCalc, \"trackPageView failed on page load calculation: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }), 100);\r\n    };\r\n    return PageViewManager;\r\n}());\r\nexport { PageViewManager };\r\n//# sourceMappingURL=PageViewManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\n/**\r\n * Used to track page visit durations\r\n */\r\nvar PageVisitTimeManager = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of PageVisitTimeManager\r\n     * @param pageVisitTimeTrackingHandler Delegate that will be called to send telemetry data to AI (when trackPreviousPageVisit is called)\r\n     * @returns {}\r\n     */\r\n    function PageVisitTimeManager(logger, pageVisitTimeTrackingHandler) {\r\n        this.prevPageVisitDataKeyName = \"prevPageVisitData\";\r\n        this.pageVisitTimeTrackingHandler = pageVisitTimeTrackingHandler;\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n     * Tracks the previous page visit time telemetry (if exists) and starts timing of new page visit time\r\n     * @param currentPageName Name of page to begin timing for visit duration\r\n     * @param currentPageUrl Url of page to begin timing for visit duration\r\n     */\r\n    PageVisitTimeManager.prototype.trackPreviousPageVisit = function (currentPageName, currentPageUrl) {\r\n        try {\r\n            // Restart timer for new page view\r\n            var prevPageVisitTimeData = this.restartPageVisitTimer(currentPageName, currentPageUrl);\r\n            // If there was a page already being timed, track the visit time for it now.\r\n            if (prevPageVisitTimeData) {\r\n                this.pageVisitTimeTrackingHandler(prevPageVisitTimeData.pageName, prevPageVisitTimeData.pageUrl, prevPageVisitTimeData.pageVisitTime);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Auto track page visit time failed, metric will not be collected: \" + Util.dump(e));\r\n        }\r\n    };\r\n    /**\r\n     * Stops timing of current page (if exists) and starts timing for duration of visit to pageName\r\n     * @param pageName Name of page to begin timing visit duration\r\n     * @returns {PageVisitData} Page visit data (including duration) of pageName from last call to start or restart, if exists. Null if not.\r\n     */\r\n    PageVisitTimeManager.prototype.restartPageVisitTimer = function (pageName, pageUrl) {\r\n        try {\r\n            var prevPageVisitData = this.stopPageVisitTimer();\r\n            this.startPageVisitTimer(pageName, pageUrl);\r\n            return prevPageVisitData;\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Call to restart failed: \" + Util.dump(e));\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Starts timing visit duration of pageName\r\n     * @param pageName\r\n     * @returns {}\r\n     */\r\n    PageVisitTimeManager.prototype.startPageVisitTimer = function (pageName, pageUrl) {\r\n        try {\r\n            if (Util.canUseSessionStorage()) {\r\n                if (Util.getSessionStorage(this._logger, this.prevPageVisitDataKeyName) != null) {\r\n                    throw new Error(\"Cannot call startPageVisit consecutively without first calling stopPageVisit\");\r\n                }\r\n                var currPageVisitData = new PageVisitData(pageName, pageUrl);\r\n                var currPageVisitDataStr = JSON.stringify(currPageVisitData);\r\n                Util.setSessionStorage(this._logger, this.prevPageVisitDataKeyName, currPageVisitDataStr);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // TODO: Remove this catch in next phase, since if start is called twice in a row the exception needs to be propagated out\r\n            this._logger.warnToConsole(\"Call to start failed: \" + Util.dump(e));\r\n        }\r\n    };\r\n    /**\r\n     * Stops timing of current page, if exists.\r\n     * @returns {PageVisitData} Page visit data (including duration) of pageName from call to start, if exists. Null if not.\r\n     */\r\n    PageVisitTimeManager.prototype.stopPageVisitTimer = function () {\r\n        try {\r\n            if (Util.canUseSessionStorage()) {\r\n                // Define end time of page's visit\r\n                var pageVisitEndTime = Date.now();\r\n                // Try to retrieve  page name and start time from session storage\r\n                var pageVisitDataJsonStr = Util.getSessionStorage(this._logger, this.prevPageVisitDataKeyName);\r\n                if (pageVisitDataJsonStr) {\r\n                    // if previous page data exists, set end time of visit\r\n                    var prevPageVisitData = JSON.parse(pageVisitDataJsonStr);\r\n                    prevPageVisitData.pageVisitTime = pageVisitEndTime - prevPageVisitData.pageVisitStartTime;\r\n                    // Remove data from storage since we already used it\r\n                    Util.removeSessionStorage(this._logger, this.prevPageVisitDataKeyName);\r\n                    // Return page visit data\r\n                    return prevPageVisitData;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Stop page visit timer failed: \" + Util.dump(e));\r\n            return null;\r\n        }\r\n    };\r\n    return PageVisitTimeManager;\r\n}());\r\nexport { PageVisitTimeManager };\r\nvar PageVisitData = /** @class */ (function () {\r\n    function PageVisitData(pageName, pageUrl) {\r\n        this.pageVisitStartTime = Date.now();\r\n        this.pageName = pageName;\r\n        this.pageUrl = pageUrl;\r\n    }\r\n    return PageVisitData;\r\n}());\r\nexport { PageVisitData };\r\n//# sourceMappingURL=PageVisitTimeManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n * Class encapsulates sending page view performance telemetry.\r\n */\r\nvar PageViewPerformanceManager = /** @class */ (function () {\r\n    function PageViewPerformanceManager(core) {\r\n        this.MAX_DURATION_ALLOWED = 3600000; // 1h\r\n        if (core) {\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent = function (pageViewPerformance) {\r\n        pageViewPerformance.isValid = false;\r\n        /*\r\n         * http://www.w3.org/TR/navigation-timing/#processing-model\r\n         *  |-navigationStart\r\n         *  |             |-connectEnd\r\n         *  |             ||-requestStart\r\n         *  |             ||             |-responseStart\r\n         *  |             ||             |              |-responseEnd\r\n         *  |             ||             |              |\r\n         *  |             ||             |              |         |-loadEventEnd\r\n         *  |---network---||---request---|---response---|---dom---|\r\n         *  |--------------------------total----------------------|\r\n         */\r\n        var navigationTiming = this.getPerformanceNavigationTiming();\r\n        var timing = this.getPerformanceTiming();\r\n        if (navigationTiming || timing) {\r\n            if (navigationTiming) {\r\n                var total = navigationTiming.duration;\r\n                var network = DateTimeUtils.GetDuration(navigationTiming.startTime, navigationTiming.connectEnd);\r\n                var request = DateTimeUtils.GetDuration(navigationTiming.requestStart, navigationTiming.responseStart);\r\n                var response = DateTimeUtils.GetDuration(navigationTiming.responseStart, navigationTiming.responseEnd);\r\n                var dom = DateTimeUtils.GetDuration(navigationTiming.responseEnd, navigationTiming.loadEventEnd);\r\n            }\r\n            else {\r\n                var total = DateTimeUtils.GetDuration(timing.navigationStart, timing.loadEventEnd);\r\n                var network = DateTimeUtils.GetDuration(timing.navigationStart, timing.connectEnd);\r\n                var request = DateTimeUtils.GetDuration(timing.requestStart, timing.responseStart);\r\n                var response = DateTimeUtils.GetDuration(timing.responseStart, timing.responseEnd);\r\n                var dom = DateTimeUtils.GetDuration(timing.responseEnd, timing.loadEventEnd);\r\n            }\r\n            if (total === 0) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ErrorPVCalc, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (!this.shouldCollectDuration(total, network, request, response, dom)) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.InvalidDurationValue, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                // in this case, don't report client performance from this page\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ClientPerformanceMathError, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else {\r\n                pageViewPerformance.durationMs = total;\r\n                // // convert to timespans\r\n                pageViewPerformance.perfTotal = pageViewPerformance.duration = Util.msToTimeSpan(total);\r\n                pageViewPerformance.networkConnect = Util.msToTimeSpan(network);\r\n                pageViewPerformance.sentRequest = Util.msToTimeSpan(request);\r\n                pageViewPerformance.receivedResponse = Util.msToTimeSpan(response);\r\n                pageViewPerformance.domProcessing = Util.msToTimeSpan(dom);\r\n                pageViewPerformance.isValid = true;\r\n            }\r\n        }\r\n    };\r\n    PageViewPerformanceManager.prototype.getPerformanceTiming = function () {\r\n        if (this.isPerformanceTimingSupported()) {\r\n            return window.performance.timing;\r\n        }\r\n        return null;\r\n    };\r\n    PageViewPerformanceManager.prototype.getPerformanceNavigationTiming = function () {\r\n        if (this.isPerformanceNavigationTimingSupported()) {\r\n            return window.performance.getEntriesByType(\"navigation\")[0];\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns true is window PerformanceNavigationTiming API is supported, false otherwise.\r\n     */\r\n    PageViewPerformanceManager.prototype.isPerformanceNavigationTimingSupported = function () {\r\n        return typeof window !== \"undefined\" && window.performance && window.performance.getEntriesByType && window.performance.getEntriesByType(\"navigation\").length > 0;\r\n    };\r\n    /**\r\n     * Returns true is window performance timing API is supported, false otherwise.\r\n     */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingSupported = function () {\r\n        return typeof window !== \"undefined\" && window.performance && window.performance.timing;\r\n    };\r\n    /**\r\n     * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n     * Returns true if ready, false otherwise.\r\n     */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingDataReady = function () {\r\n        var timing = window.performance.timing;\r\n        return timing.domainLookupStart > 0\r\n            && timing.navigationStart > 0\r\n            && timing.responseStart > 0\r\n            && timing.requestStart > 0\r\n            && timing.loadEventEnd > 0\r\n            && timing.responseEnd > 0\r\n            && timing.connectEnd > 0\r\n            && timing.domLoading > 0;\r\n    };\r\n    /**\r\n     * This method tells if given durations should be excluded from collection.\r\n     */\r\n    PageViewPerformanceManager.prototype.shouldCollectDuration = function () {\r\n        var durations = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            durations[_i] = arguments[_i];\r\n        }\r\n        // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n        var botAgentNames = ['googlebot', 'adsbot-google', 'apis-google', 'mediapartners-google'];\r\n        var userAgent = navigator.userAgent;\r\n        var isGoogleBot = false;\r\n        if (userAgent) {\r\n            for (var i = 0; i < botAgentNames.length; i++) {\r\n                isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i]) !== -1;\r\n            }\r\n        }\r\n        if (isGoogleBot) {\r\n            // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n            return false;\r\n        }\r\n        else {\r\n            // for other page views, don't report if it's outside of a reasonable range\r\n            for (var i = 0; i < durations.length; i++) {\r\n                if (durations[i] >= this.MAX_DURATION_ALLOWED) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return PageViewPerformanceManager;\r\n}());\r\nexport { PageViewPerformanceManager };\r\n//# sourceMappingURL=PageViewPerformanceManager.js.map","/**\r\n * ApplicationInsights.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Util, PageViewPerformance, PageView, RemoteDependencyData, Event as EventTelemetry, TelemetryItemCreator, Metric, Exception, SeverityLevel, Trace, ConfigurationManager, DateTimeUtils, PropertiesPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId, } from \"@microsoft/applicationinsights-core-js\";\r\nimport { PageViewManager } from \"./Telemetry/PageViewManager\";\r\nimport { PageVisitTimeManager } from \"./Telemetry/PageVisitTimeManager\";\r\nimport { PageViewPerformanceManager } from './Telemetry/PageViewPerformanceManager';\r\n\"use strict\";\r\nvar durationProperty = \"duration\";\r\nvar ApplicationInsights = /** @class */ (function () {\r\n    function ApplicationInsights() {\r\n        this.identifier = \"ApplicationInsightsAnalytics\"; // do not change name or priority\r\n        this.priority = 180; // take from reserved priority range 100- 200\r\n        this.autoRoutePVDelay = 500; // ms; Time to wait after a route change before triggering a pageview to allow DOM changes to take place\r\n        this._isInitialized = false;\r\n        // Counts number of trackAjax invokations.\r\n        // By default we only monitor X ajax call per view to avoid too much load.\r\n        // Default value is set in config.\r\n        // This counter keeps increasing even after the limit is reached.\r\n        this._trackAjaxAttempts = 0;\r\n        // array with max length of 2 that store current url and previous url for SPA page route change trackPageview use.\r\n        this._prevUri = typeof window === \"object\" && window.location && window.location.href || \"\";\r\n        this.initialize = this._initialize.bind(this);\r\n    }\r\n    ApplicationInsights.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        config.overridePageViewDuration = Util.stringToBoolOrDefault(config.overridePageViewDuration);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableAutoRouteTracking = Util.stringToBoolOrDefault(config.enableAutoRouteTracking);\r\n        config.namePrefix = config.namePrefix || \"\";\r\n        return config;\r\n    };\r\n    ApplicationInsights.prototype.processTelemetry = function (env) {\r\n        var doNotSendItem = false;\r\n        var telemetryInitializersCount = this._telemetryInitializers.length;\r\n        for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n            var telemetryInitializer = this._telemetryInitializers[i];\r\n            if (telemetryInitializer) {\r\n                try {\r\n                    if (telemetryInitializer.apply(null, [env]) === false) {\r\n                        doNotSendItem = true;\r\n                        break;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // log error but dont stop executing rest of the telemetry initializers\r\n                    // doNotSendItem = true;\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                }\r\n            }\r\n        }\r\n        if (!doNotSendItem && !CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(env);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    ApplicationInsights.prototype.trackEvent = function (event, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(event, EventTelemetry.dataType, EventTelemetry.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.\r\n     * @param   name    A string that identifies this event uniquely within the document.\r\n     */\r\n    ApplicationInsights.prototype.startTrackEvent = function (name) {\r\n        try {\r\n            this._eventTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackEventFailed, \"startTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        try {\r\n            this._eventTracking.stop(name, undefined, properties); // Todo: Fix to pass measurements once type is updated\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackEventFailed, \"stopTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a diagnostic message\r\n     * @param {ITraceTelemetry} trace\r\n     * @param ICustomProperties.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackTrace = function (trace, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(trace, Trace.dataType, Trace.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a numeric value that is not associated with a specific event. Typically\r\n     * used to send regular reports of performance indicators. To send single measurement, just\r\n     * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n     * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n     * and sending the resulting average at intervals\r\n     * @param {IMetricTelemetry} metric input object argument. Only name and average are mandatory.\r\n     * @param {{[key: string]: any}} customProperties additional data used to filter metrics in the\r\n     * portal. Defaults to empty.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackMetric = function (metric, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(metric, Metric.dataType, Metric.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackMetricFailed, \"trackMetric failed, metric will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Logs that a page or other item was viewed.\r\n     * @param IPageViewTelemetry The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param customProperties Additional data used to filter events and metrics. Defaults to empty.\r\n     * If a user wants to provide duration for pageLoad, it'll have to be in pageView.properties.duration\r\n     */\r\n    ApplicationInsights.prototype.trackPageView = function (pageView, customProperties) {\r\n        try {\r\n            var inPv = pageView || {};\r\n            this._pageViewManager.trackPageView(inPv, tslib_1.__assign({}, inPv.properties, inPv.measurements, customProperties));\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(inPv.name, inPv.uri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageView failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n     * @param pageView Page view item to be sent\r\n     * @param properties Custom properties (Part C) that a user can add to the telemetry item\r\n     * @param systemProperties System level properties (Part A) that a user can add to the telemetry item\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewInternal = function (pageView, properties, systemProperties) {\r\n        if (typeof document !== \"undefined\") {\r\n            pageView.refUri = pageView.refUri === undefined ? document.referrer : pageView.refUri;\r\n        }\r\n        var telemetryItem = TelemetryItemCreator.create(pageView, PageView.dataType, PageView.envelopeType, this._logger, properties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n        // reset ajaxes counter\r\n        this._trackAjaxAttempts = 0;\r\n    };\r\n    /**\r\n     * @ignore INTERNAL ONLY\r\n     * @param pageViewPerformance\r\n     * @param properties\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewPerformanceInternal = function (pageViewPerformance, properties, systemProperties) {\r\n        var telemetryItem = TelemetryItemCreator.create(pageViewPerformance, PageViewPerformance.dataType, PageViewPerformance.envelopeType, this._logger, properties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Send browser performance metrics.\r\n     * @param pageViewPerformance\r\n     * @param customProperties\r\n     */\r\n    ApplicationInsights.prototype.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n        try {\r\n            this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n            this.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageViewPerformance failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    ApplicationInsights.prototype.startTrackPage = function (name) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            this._pageTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackFailed, \"startTrackPage failed, page view may not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackPage = function (name, url, properties, measurement) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            if (typeof url !== \"string\") {\r\n                url = window.location && window.location.href || \"\";\r\n            }\r\n            this._pageTracking.stop(name, url, properties, measurement);\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(name, url);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackFailed, \"stopTrackPage failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @ignore INTERNAL ONLY\r\n     * @param exception\r\n     * @param properties\r\n     * @param systemProperties\r\n     */\r\n    ApplicationInsights.prototype.sendExceptionInternal = function (exception, customProperties, systemProperties) {\r\n        var exceptionPartB = new Exception(this._logger, exception.exception || new Error(Util.NotSpecified), exception.properties, exception.measurements, exception.severityLevel, exception.id).toInterface();\r\n        var telemetryItem = TelemetryItemCreator.create(exceptionPartB, Exception.dataType, Exception.envelopeType, this._logger, customProperties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Log an exception you have caught.\r\n     *\r\n     * @param {IExceptionTelemetry} exception   Object which contains exception to be sent\r\n     * @param {{[key: string]: any}} customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     *\r\n     * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackException = function (exception, customProperties) {\r\n        try {\r\n            this.sendExceptionInternal(exception, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackExceptionFailed, \"trackException failed, exception will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Custom error handler for Application Insights Analytics\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype._onerror = function (exception) {\r\n        try {\r\n            var properties_1 = {\r\n                url: (exception && exception.url) || document.URL,\r\n                lineNumber: exception.lineNumber,\r\n                columnNumber: exception.columnNumber,\r\n                message: exception.message\r\n            };\r\n            if (Util.isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception.error)) {\r\n                this._sendCORSException(properties_1.url);\r\n            }\r\n            else {\r\n                if (!Util.isError(exception.error)) {\r\n                    var stack = \"window.onerror@\" + properties_1.url + \":\" + exception.lineNumber + \":\" + (exception.columnNumber || 0);\r\n                    exception.error = new Error(exception.message);\r\n                    exception.error.stack = stack;\r\n                }\r\n                this.trackException({ exception: exception.error, severityLevel: SeverityLevel.Error }, properties_1);\r\n            }\r\n        }\r\n        catch (e) {\r\n            var errorString = exception.error ?\r\n                (exception.error.name + \", \" + exception.error.message)\r\n                : \"null\";\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ExceptionWhileLoggingError, \"_onError threw exception while logging error, error will not be collected: \"\r\n                + Util.getExceptionName(e), { exception: Util.dump(e), errorString: errorString });\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (this._isInitialized) {\r\n            return;\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(core)) {\r\n            throw Error(\"Error initializing\");\r\n        }\r\n        this.core = core;\r\n        this._logger = core.logger;\r\n        this._globalconfig = {\r\n            instrumentationKey: config.instrumentationKey,\r\n            endpointUrl: config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\"\r\n        };\r\n        this.config = config.extensionConfig && config.extensionConfig[this.identifier] ? config.extensionConfig[this.identifier] : {};\r\n        // load default values if specified\r\n        var defaults = ApplicationInsights.getDefaultConfig();\r\n        if (defaults !== undefined) {\r\n            for (var field in defaults) {\r\n                // for each unspecified field, set the default value\r\n                this.config[field] = ConfigurationManager.getConfig(config, field, this.identifier, defaults[field]);\r\n            }\r\n            if (this._globalconfig) {\r\n                for (var field in defaults) {\r\n                    if (this._globalconfig[field] === undefined) {\r\n                        this._globalconfig[field] = defaults[field];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isCookieUseDisabled) {\r\n            Util.disableCookies();\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isStorageUseDisabled) {\r\n            Util.disableStorage();\r\n        }\r\n        var configGetters = {\r\n            instrumentationKey: function () { return config.instrumentationKey; },\r\n            accountId: function () { return _this.config.accountId || config.accountId; },\r\n            sessionRenewalMs: function () { return _this.config.sessionRenewalMs || config.sessionRenewalMs; },\r\n            sessionExpirationMs: function () { return _this.config.sessionExpirationMs || config.sessionExpirationMs; },\r\n            sampleRate: function () { return _this.config.samplingPercentage || config.samplingPercentage; },\r\n            cookieDomain: function () { return _this.config.cookieDomain || config.cookieDomain; },\r\n            sdkExtension: function () { return _this.config.sdkExtension || config.sdkExtension; },\r\n            isBrowserLinkTrackingEnabled: function () { return _this.config.isBrowserLinkTrackingEnabled || config.isBrowserLinkTrackingEnabled; },\r\n            appId: function () { return _this.config.appId || config.appId; }\r\n        };\r\n        this._pageViewPerformanceManager = new PageViewPerformanceManager(this.core);\r\n        this._pageViewManager = new PageViewManager(this, this.config.overridePageViewDuration, this.core, this._pageViewPerformanceManager);\r\n        this._pageVisitTimeManager = new PageVisitTimeManager(this._logger, function (pageName, pageUrl, pageVisitTime) { return _this.trackPageVisitTime(pageName, pageUrl, pageVisitTime); });\r\n        this._telemetryInitializers = [];\r\n        this._addDefaultTelemetryInitializers(configGetters);\r\n        this._eventTracking = new Timing(this._logger, \"trackEvent\");\r\n        this._eventTracking.action =\r\n            function (name, url, duration, properties) {\r\n                if (!properties) {\r\n                    properties = {};\r\n                }\r\n                properties[durationProperty] = duration.toString();\r\n                _this.trackEvent({ name: name, properties: properties });\r\n            };\r\n        // initialize page view timing\r\n        this._pageTracking = new Timing(this._logger, \"trackPageView\");\r\n        this._pageTracking.action = function (name, url, duration, properties, measurements) {\r\n            // duration must be a custom property in order for the collector to extract it\r\n            if (CoreUtils.isNullOrUndefined(properties)) {\r\n                properties = {};\r\n            }\r\n            properties[durationProperty] = duration.toString();\r\n            var pageViewItem = {\r\n                name: name,\r\n                uri: url,\r\n                properties: properties,\r\n                measurements: measurements\r\n            };\r\n            _this.sendPageViewInternal(pageViewItem);\r\n        };\r\n        var instance = this;\r\n        if (this.config.disableExceptionTracking === false &&\r\n            !this.config.autoExceptionInstrumented) {\r\n            // We want to enable exception auto collection and it has not been done so yet\r\n            var onerror_1 = \"onerror\";\r\n            var originalOnError_1 = window[onerror_1];\r\n            window.onerror = function (message, url, lineNumber, columnNumber, error) {\r\n                var handled = originalOnError_1 && originalOnError_1(message, url, lineNumber, columnNumber, error);\r\n                if (handled !== true) {\r\n                    instance._onerror({\r\n                        message: message,\r\n                        url: url,\r\n                        lineNumber: lineNumber,\r\n                        columnNumber: columnNumber,\r\n                        error: error\r\n                    });\r\n                }\r\n                return handled;\r\n            };\r\n            this.config.autoExceptionInstrumented = true;\r\n        }\r\n        /**\r\n         * Create a custom \"locationchange\" event which is triggered each time the history object is changed\r\n         */\r\n        if (this.config.enableAutoRouteTracking === true\r\n            && typeof history === \"object\" && typeof history.pushState === \"function\" && typeof history.replaceState === \"function\"\r\n            && typeof window === \"object\"\r\n            && typeof Event !== \"undefined\") {\r\n            var _self_1 = this;\r\n            // Find the properties plugin\r\n            extensions.forEach(function (extension) {\r\n                if (extension.identifier === PropertiesPluginIdentifier) {\r\n                    _this._properties = extension;\r\n                }\r\n            });\r\n            history.pushState = (function (f) { return function pushState() {\r\n                var ret = f.apply(this, arguments);\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"pushState\"));\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"locationchange\"));\r\n                return ret;\r\n            }; })(history.pushState);\r\n            history.replaceState = (function (f) { return function replaceState() {\r\n                var ret = f.apply(this, arguments);\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"replaceState\"));\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"locationchange\"));\r\n                return ret;\r\n            }; })(history.replaceState);\r\n            window.addEventListener(_self_1.config.namePrefix + \"popstate\", function () {\r\n                window.dispatchEvent(Util.createDomEvent(_self_1.config.namePrefix + \"locationchange\"));\r\n            });\r\n            window.addEventListener(_self_1.config.namePrefix + \"locationchange\", function () {\r\n                if (_self_1._properties && _self_1._properties.context && _self_1._properties.context.telemetryTrace) {\r\n                    _self_1._properties.context.telemetryTrace.traceID = Util.generateW3CId();\r\n                    _self_1._properties.context.telemetryTrace.name = window.location && window.location.pathname || \"_unknown_\";\r\n                }\r\n                if (_this._currUri) {\r\n                    _this._prevUri = _this._currUri;\r\n                    _this._currUri = window.location && window.location.href || \"\";\r\n                }\r\n                else {\r\n                    _this._currUri = window.location && window.location.href || \"\";\r\n                }\r\n                setTimeout((function (uri) {\r\n                    // todo: override start time so that it is not affected by autoRoutePVDelay\r\n                    _self_1.trackPageView({ refUri: uri, properties: { duration: 0 } }); // SPA route change loading durations are undefined, so send 0\r\n                }).bind(_this, _this._prevUri), _self_1.autoRoutePVDelay);\r\n            });\r\n        }\r\n        this._isInitialized = true;\r\n    };\r\n    /**\r\n     * Log a page visit time\r\n     * @param    pageName    Name of page\r\n     * @param    pageVisitDuration Duration of visit to the page in milleseconds\r\n     */\r\n    ApplicationInsights.prototype.trackPageVisitTime = function (pageName, pageUrl, pageVisitTime) {\r\n        var properties = { PageName: pageName, PageUrl: pageUrl };\r\n        this.trackMetric({\r\n            name: \"PageVisitTime\",\r\n            average: pageVisitTime,\r\n            max: pageVisitTime,\r\n            min: pageVisitTime,\r\n            sampleCount: 1\r\n        }, properties);\r\n    };\r\n    ApplicationInsights.prototype._addDefaultTelemetryInitializers = function (configGetters) {\r\n        if (!configGetters.isBrowserLinkTrackingEnabled()) {\r\n            var browserLinkPaths_1 = ['/browserLinkSignalR/', '/__browserLink/'];\r\n            var dropBrowserLinkRequests = function (envelope) {\r\n                if (envelope.baseType === RemoteDependencyData.dataType) {\r\n                    var remoteData = envelope.baseData;\r\n                    if (remoteData) {\r\n                        for (var i = 0; i < browserLinkPaths_1.length; i++) {\r\n                            if (remoteData.target && remoteData.target.indexOf(browserLinkPaths_1[i]) >= 0) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            };\r\n            this._addTelemetryInitializer(dropBrowserLinkRequests);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype._addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._sendCORSException = function (url) {\r\n        var exception = {\r\n            message: \"Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.\",\r\n            url: url,\r\n            lineNumber: 0,\r\n            columnNumber: 0,\r\n            error: undefined\r\n        };\r\n        var telemetryItem = TelemetryItemCreator.create(exception, Exception.dataType, Exception.envelopeType, this._logger, { url: url });\r\n        this.core.track(telemetryItem);\r\n    };\r\n    ApplicationInsights.Version = \"2.2.3\"; // Not currently used anywhere\r\n    return ApplicationInsights;\r\n}());\r\nexport { ApplicationInsights };\r\n/**\r\n * Used to record timed events and page views.\r\n */\r\nvar Timing = /** @class */ (function () {\r\n    function Timing(logger, name) {\r\n        this._name = name;\r\n        this._events = {};\r\n        this._logger = logger;\r\n    }\r\n    Timing.prototype.start = function (name) {\r\n        if (typeof this._events[name] !== \"undefined\") {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StartCalledMoreThanOnce, \"start was called more than once for this event without calling stop.\", { name: this._name, key: name }, true);\r\n        }\r\n        this._events[name] = +new Date;\r\n    };\r\n    Timing.prototype.stop = function (name, url, properties, measurements) {\r\n        var start = this._events[name];\r\n        if (isNaN(start)) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StopCalledWithoutStart, \"stop was called without a corresponding start.\", { name: this._name, key: name }, true);\r\n        }\r\n        else {\r\n            var end = +new Date;\r\n            var duration = DateTimeUtils.GetDuration(start, end);\r\n            this.action(name, url, duration, properties, measurements);\r\n        }\r\n        delete this._events[name];\r\n        this._events[name] = undefined;\r\n    };\r\n    return Timing;\r\n}());\r\n//# sourceMappingURL=ApplicationInsights.js.map","import { Util } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function () {\r\n    function ArraySendBuffer(config) {\r\n        this._config = config;\r\n        this._buffer = [];\r\n    }\r\n    ArraySendBuffer.prototype.enqueue = function (payload) {\r\n        this._buffer.push(payload);\r\n    };\r\n    ArraySendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    ArraySendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n    };\r\n    ArraySendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    ArraySendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    ArraySendBuffer.prototype.markAsSent = function (payload) {\r\n        this.clear();\r\n    };\r\n    ArraySendBuffer.prototype.clearSent = function (payload) {\r\n        // not supported\r\n    };\r\n    return ArraySendBuffer;\r\n}());\r\nexport { ArraySendBuffer };\r\n/*\r\n * Session storege buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function () {\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        this._bufferFullMessageSent = false;\r\n        this._logger = logger;\r\n        this._config = config;\r\n        var bufferItems = this.getBuffer(SessionStorageSendBuffer.BUFFER_KEY);\r\n        var notDeliveredItems = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        this._buffer = bufferItems.concat(notDeliveredItems);\r\n        // If the buffer has too many items, drop items from the end.\r\n        if (this._buffer.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            this._buffer.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n        }\r\n        // update DataLossAnalyzer with the number of recovered items\r\n        // Uncomment if you want to use DataLossanalyzer\r\n        // DataLossAnalyzer.itemsRestoredFromSessionBuffer = this._buffer.length;\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    }\r\n    SessionStorageSendBuffer.prototype.enqueue = function (payload) {\r\n        if (this._buffer.length >= SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            // sent internal log only once per page view\r\n            if (!this._bufferFullMessageSent) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionStorageBufferFull, \"Maximum buffer size reached: \" + this._buffer.length, true);\r\n                this._bufferFullMessageSent = true;\r\n            }\r\n            return;\r\n        }\r\n        this._buffer.push(payload);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    };\r\n    SessionStorageSendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    SessionStorageSendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this._bufferFullMessageSent = false;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    SessionStorageSendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    SessionStorageSendBuffer.prototype.markAsSent = function (payload) {\r\n        this._buffer = this.removePayloadsFromBuffer(payload, this._buffer);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        if (sentElements instanceof Array && payload instanceof Array) {\r\n            sentElements = sentElements.concat(payload);\r\n            if (sentElements.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SessionStorageBufferFull, \"Sent buffer reached its maximum size: \" + sentElements.length, true);\r\n                sentElements.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n            }\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.prototype.clearSent = function (payload) {\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        sentElements = this.removePayloadsFromBuffer(payload, sentElements);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n    };\r\n    SessionStorageSendBuffer.prototype.removePayloadsFromBuffer = function (payloads, buffer) {\r\n        var remaining = [];\r\n        for (var i in buffer) {\r\n            var contains = false;\r\n            for (var j in payloads) {\r\n                if (payloads[j] === buffer[i]) {\r\n                    contains = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!contains) {\r\n                remaining.push(buffer[i]);\r\n            }\r\n        }\r\n        ;\r\n        return remaining;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getBuffer = function (key) {\r\n        var prefixedKey = key;\r\n        try {\r\n            prefixedKey = this._config.namePrefix && this._config.namePrefix() ? this._config.namePrefix() + \"_\" + prefixedKey : prefixedKey;\r\n            var bufferJson = Util.getSessionStorage(this._logger, prefixedKey);\r\n            if (bufferJson) {\r\n                var buffer = JSON.parse(bufferJson);\r\n                if (buffer) {\r\n                    return buffer;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToRestoreStorageBuffer, \" storage key: \" + prefixedKey + \", \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        return [];\r\n    };\r\n    SessionStorageSendBuffer.prototype.setBuffer = function (key, buffer) {\r\n        var prefixedKey = key;\r\n        try {\r\n            prefixedKey = this._config.namePrefix && this._config.namePrefix() ? this._config.namePrefix() + \"_\" + prefixedKey : prefixedKey;\r\n            var bufferJson = JSON.stringify(buffer);\r\n            Util.setSessionStorage(this._logger, prefixedKey, bufferJson);\r\n        }\r\n        catch (e) {\r\n            // if there was an error, clear the buffer\r\n            // telemetry is stored in the _buffer array so we won't loose any items\r\n            Util.setSessionStorage(this._logger, prefixedKey, JSON.stringify([]));\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedToSetStorageBuffer, \" storage key: \" + prefixedKey + \", \" + Util.getExceptionName(e) + \". Buffer cleared\", { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\";\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\";\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.\r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}());\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Data, Envelope, RemoteDependencyData, Event, Exception, Metric, PageView, Trace, PageViewPerformance, CtxTagKeys, HttpMethod } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar baseType = \"baseType\";\r\nvar baseData = \"baseData\";\r\nvar EnvelopeCreator = /** @class */ (function () {\r\n    function EnvelopeCreator() {\r\n    }\r\n    EnvelopeCreator.extractProperties = function (data) {\r\n        var customProperties = null;\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                var value = data[key];\r\n                if (typeof value !== \"number\") {\r\n                    if (!customProperties) {\r\n                        customProperties = {};\r\n                    }\r\n                    customProperties[key] = value;\r\n                }\r\n            }\r\n        }\r\n        return customProperties;\r\n    };\r\n    EnvelopeCreator.extractPropsAndMeasurements = function (data, properties, measurements) {\r\n        if (!CoreUtils.isNullOrUndefined(data)) {\r\n            for (var key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    var value = data[key];\r\n                    if (typeof value === \"number\") {\r\n                        measurements[key] = value;\r\n                    }\r\n                    else if (typeof value === \"string\") {\r\n                        properties[key] = value;\r\n                    }\r\n                    else {\r\n                        properties[key] = JSON.stringify(value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\n    EnvelopeCreator.createEnvelope = function (logger, envelopeType, telemetryItem, data) {\r\n        var envelope = new Envelope(logger, data, envelopeType);\r\n        envelope.iKey = telemetryItem.iKey;\r\n        var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n        envelope.name = envelope.name.replace(\"{0}\", iKeyNoDashes);\r\n        // extract all extensions from ctx\r\n        EnvelopeCreator.extractPartAExtensions(telemetryItem, envelope);\r\n        // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n        if (!telemetryItem.tags) {\r\n            telemetryItem.tags = [];\r\n        }\r\n        return envelope;\r\n    };\r\n    /*\r\n     * Maps Part A data from CS 4.0\r\n     */\r\n    EnvelopeCreator.extractPartAExtensions = function (item, env) {\r\n        // todo: switch to keys from common in this method\r\n        if (!env.tags) {\r\n            env.tags = {};\r\n        }\r\n        if (!item.ext) {\r\n            item.ext = {};\r\n        }\r\n        if (!item.tags) {\r\n            item.tags = [];\r\n        }\r\n        if (item.ext.user) {\r\n            if (item.ext.user.authId) {\r\n                env.tags[CtxTagKeys.userAuthUserId] = item.ext.user.authId;\r\n            }\r\n            var userId = item.ext.user.id || item.ext.user.localId;\r\n            if (userId) {\r\n                env.tags[CtxTagKeys.userId] = userId;\r\n            }\r\n        }\r\n        if (item.ext.app) {\r\n            if (item.ext.app.sesId) {\r\n                env.tags[CtxTagKeys.sessionId] = item.ext.app.sesId;\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.id || item.ext.device.localId) {\r\n                env.tags[CtxTagKeys.deviceId] = item.ext.device.id || item.ext.device.localId;\r\n            }\r\n            if (item.ext.device.deviceClass) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceClass;\r\n            }\r\n            if (item.ext.device.ip) {\r\n                env.tags[CtxTagKeys.deviceIp] = item.ext.device.ip;\r\n            }\r\n        }\r\n        if (item.ext.web) {\r\n            var web = item.ext.web;\r\n            if (web.browserLang) {\r\n                env.tags[CtxTagKeys.deviceLanguage] = web.browserLang;\r\n            }\r\n            if (web.browserVer) {\r\n                env.tags[CtxTagKeys.deviceBrowserVersion] = web.browserVer;\r\n            }\r\n            if (web.browser) {\r\n                env.tags[CtxTagKeys.deviceBrowser] = web.browser;\r\n            }\r\n            env.data = env.data || {};\r\n            env.data.baseData = env.data.baseData || {};\r\n            env.data.baseData.properties = env.data.baseData.properties || {};\r\n            if (web.domain) {\r\n                env.data.baseData.properties['domain'] = web.domain;\r\n            }\r\n            if (web.isManual) {\r\n                env.data.baseData.properties['isManual'] = web.isManual.toString();\r\n            }\r\n            if (web.screenRes) {\r\n                env.data.baseData.properties['screenRes'] = web.screenRes;\r\n            }\r\n            if (web.userConsent) {\r\n                env.data.baseData.properties['userConsent'] = web.userConsent.toString();\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.model) {\r\n                env.tags[CtxTagKeys.deviceModel] = item.ext.device.model;\r\n            }\r\n        }\r\n        if (item.ext.os && item.ext.os.name) {\r\n            env.tags[CtxTagKeys.deviceOS] = item.ext.os.name;\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.deviceType) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceType;\r\n            }\r\n        }\r\n        // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n        if (item.ext.trace) {\r\n            if (item.ext.trace.parentID) {\r\n                env.tags[CtxTagKeys.operationParentId] = item.ext.trace.parentID;\r\n            }\r\n            if (item.ext.trace.name) {\r\n                env.tags[CtxTagKeys.operationName] = item.ext.trace.name;\r\n            }\r\n            if (item.ext.trace.traceID) {\r\n                env.tags[CtxTagKeys.operationId] = item.ext.trace.traceID;\r\n            }\r\n        }\r\n        // Sample 4.0 schema\r\n        //  {\r\n        //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n        //     \"name\" : \"MetricWithNamespace\",\r\n        //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n        //     \"ext\": {  \"cloud\": {\r\n        //          \"role\": \"WATSON3\",\r\n        //          \"roleInstance\": \"CO4AEAP00000260\"\r\n        //      },\r\n        //      \"device\": {}, \"correlation\": {} },\r\n        //      \"tags\": [\r\n        //        { \"amazon.region\" : \"east2\" },\r\n        //        { \"os.expid\" : \"wp:02df239\" }\r\n        //     ]\r\n        //   }\r\n        var tgs = {};\r\n        var _loop_1 = function (i) {\r\n            var tg = item.tags[i];\r\n            // Object.keys returns an array of keys\r\n            Object.keys(tg).forEach(function (key) {\r\n                tgs[key] = tg[key];\r\n            });\r\n            item.tags.splice(i, 1);\r\n        };\r\n        // deals with tags.push({object})\r\n        for (var i = item.tags.length - 1; i >= 0; i--) {\r\n            _loop_1(i);\r\n        }\r\n        // deals with tags[key]=value\r\n        for (var tg in item.tags) {\r\n            tgs[tg] = item.tags[tg];\r\n        }\r\n        env.tags = tslib_1.__assign({}, env.tags, tgs);\r\n        if (!env.tags[CtxTagKeys.internalSdkVersion]) {\r\n            // Append a version in case it is not already set\r\n            env.tags[CtxTagKeys.internalSdkVersion] = \"javascript:\" + EnvelopeCreator.Version;\r\n        }\r\n    };\r\n    EnvelopeCreator.Version = \"2.2.3\";\r\n    return EnvelopeCreator;\r\n}());\r\nexport { EnvelopeCreator };\r\nvar DependencyEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DependencyEnvelopeCreator, _super);\r\n    function DependencyEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DependencyEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customMeasurements = telemetryItem.baseData.measurements || {};\r\n        var customProperties = telemetryItem.baseData.properties || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var bd = telemetryItem.baseData;\r\n        if (CoreUtils.isNullOrUndefined(bd)) {\r\n            logger.warnToConsole(\"Invalid input for dependency data\");\r\n            return null;\r\n        }\r\n        var id = bd.id;\r\n        var absoluteUrl = bd.target;\r\n        var command = bd.name;\r\n        var duration = bd.duration;\r\n        var success = bd.success;\r\n        var resultCode = bd.responseCode;\r\n        var requestAPI = bd.type;\r\n        var correlationContext = bd.correlationContext;\r\n        var method = bd.properties && bd.properties[HttpMethod] ? bd.properties[HttpMethod] : \"GET\";\r\n        var baseData = new RemoteDependencyData(logger, id, absoluteUrl, command, duration, success, resultCode, method, requestAPI, correlationContext, customProperties, customMeasurements);\r\n        var data = new Data(RemoteDependencyData.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, RemoteDependencyData.envelopeType, telemetryItem, data);\r\n    };\r\n    DependencyEnvelopeCreator.DependencyEnvelopeCreator = new DependencyEnvelopeCreator();\r\n    return DependencyEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { DependencyEnvelopeCreator };\r\nvar EventEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventEnvelopeCreator, _super);\r\n    function EventEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EventEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customProperties = {};\r\n        var customMeasurements = {};\r\n        if (telemetryItem.baseType !== Event.dataType) {\r\n            customProperties['baseTypeSource'] = telemetryItem.baseType; // save the passed in base type as a property\r\n        }\r\n        if (telemetryItem.baseType === Event.dataType) {\r\n            customProperties = telemetryItem.baseData.properties || {};\r\n            customMeasurements = telemetryItem.baseData.measurements || {};\r\n        }\r\n        else {\r\n            if (telemetryItem.baseData) {\r\n                EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.baseData, customProperties, customMeasurements);\r\n            }\r\n        }\r\n        // Exract root level properties from part C telemetryItem.data\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var eventName = telemetryItem.baseData.name;\r\n        var baseData = new Event(logger, eventName, customProperties, customMeasurements);\r\n        var data = new Data(Event.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Event.envelopeType, telemetryItem, data);\r\n    };\r\n    EventEnvelopeCreator.EventEnvelopeCreator = new EventEnvelopeCreator();\r\n    return EventEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { EventEnvelopeCreator };\r\nvar ExceptionEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionEnvelopeCreator, _super);\r\n    function ExceptionEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ExceptionEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var baseData = Exception.CreateFromInterface(logger, bd);\r\n        var data = new Data(Exception.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Exception.envelopeType, telemetryItem, data);\r\n    };\r\n    ExceptionEnvelopeCreator.ExceptionEnvelopeCreator = new ExceptionEnvelopeCreator();\r\n    return ExceptionEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { ExceptionEnvelopeCreator };\r\nvar MetricEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricEnvelopeCreator, _super);\r\n    function MetricEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MetricEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var props = telemetryItem.baseData.properties || {};\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        customProperties = tslib_1.__assign({}, props, customProperties);\r\n        var name = telemetryItem.baseData.name;\r\n        var average = telemetryItem.baseData.average;\r\n        var sampleCount = telemetryItem.baseData.sampleCount;\r\n        var min = telemetryItem.baseData.min;\r\n        var max = telemetryItem.baseData.max;\r\n        var baseData = new Metric(logger, name, average, sampleCount, min, max, customProperties);\r\n        var data = new Data(Metric.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Metric.envelopeType, telemetryItem, data);\r\n    };\r\n    MetricEnvelopeCreator.MetricEnvelopeCreator = new MetricEnvelopeCreator();\r\n    return MetricEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { MetricEnvelopeCreator };\r\nvar PageViewEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewEnvelopeCreator, _super);\r\n    function PageViewEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n        var duration;\r\n        if (!CoreUtils.isNullOrUndefined(telemetryItem.baseData) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties.duration)) {\r\n            duration = telemetryItem.baseData.properties.duration;\r\n            delete telemetryItem.baseData.properties.duration;\r\n        }\r\n        else if (!CoreUtils.isNullOrUndefined(telemetryItem.data) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.data[\"duration\"])) {\r\n            duration = telemetryItem.data[\"duration\"];\r\n            delete telemetryItem.data[\"duration\"];\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n        var currentContextId;\r\n        if (telemetryItem.ext && telemetryItem.ext.trace && telemetryItem.ext.trace.traceID) {\r\n            currentContextId = telemetryItem.ext.trace.traceID;\r\n        }\r\n        var id = bd.id || currentContextId;\r\n        var name = bd.name;\r\n        var url = bd.uri;\r\n        var properties = bd.properties || {};\r\n        var measurements = bd.measurements || {};\r\n        // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.refUri)) {\r\n            properties[\"refUri\"] = bd.refUri;\r\n        }\r\n        // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.pageType)) {\r\n            properties[\"pageType\"] = bd.pageType;\r\n        }\r\n        // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.isLoggedIn)) {\r\n            properties[\"isLoggedIn\"] = bd.isLoggedIn.toString();\r\n        }\r\n        // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.properties)) {\r\n            var pageTags = bd.properties;\r\n            for (var key in pageTags) {\r\n                if (pageTags.hasOwnProperty(key)) {\r\n                    properties[key] = pageTags[key];\r\n                }\r\n            }\r\n        }\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, properties, measurements);\r\n        var baseData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n        var data = new Data(PageView.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageView.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewEnvelopeCreator.PageViewEnvelopeCreator = new PageViewEnvelopeCreator();\r\n    return PageViewEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewEnvelopeCreator };\r\nvar PageViewPerformanceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformanceEnvelopeCreator, _super);\r\n    function PageViewPerformanceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewPerformanceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var name = bd.name;\r\n        var url = bd.uri || bd.url;\r\n        var properties = bd.properties || {};\r\n        var measurements = bd.measurements || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, properties, measurements);\r\n        var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);\r\n        var data = new Data(PageViewPerformance.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageViewPerformance.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator = new PageViewPerformanceEnvelopeCreator();\r\n    return PageViewPerformanceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewPerformanceEnvelopeCreator };\r\nvar TraceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TraceEnvelopeCreator, _super);\r\n    function TraceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TraceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var message = telemetryItem.baseData.message;\r\n        var severityLevel = telemetryItem.baseData.severityLevel;\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        var props = tslib_1.__assign({}, customProperties, telemetryItem.baseData.properties);\r\n        var baseData = new Trace(logger, message, severityLevel, props);\r\n        var data = new Data(Trace.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Trace.envelopeType, telemetryItem, data);\r\n    };\r\n    TraceEnvelopeCreator.TraceEnvelopeCreator = new TraceEnvelopeCreator();\r\n    return TraceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { TraceEnvelopeCreator };\r\n//# sourceMappingURL=EnvelopeCreator.js.map","import { Util, FieldType } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n     * Serializes the current object to a JSON string.\r\n     */\r\n    Serializer.prototype.serialize = function (input) {\r\n        var output = this._serializeObject(input, \"root\");\r\n        return JSON.stringify(output);\r\n    };\r\n    Serializer.prototype._serializeObject = function (source, name) {\r\n        var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n        var output = {};\r\n        if (!source) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (source[circularReferenceCheck]) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CircularReferenceDetected, \"Circular reference detected while serializing object\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (!source.aiDataContract) {\r\n            // special case for measurements/properties/tags\r\n            if (name === \"measurements\") {\r\n                output = this._serializeStringMap(source, \"number\", name);\r\n            }\r\n            else if (name === \"properties\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (name === \"tags\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (Util.isArray(source)) {\r\n                output = this._serializeArray(source, name);\r\n            }\r\n            else {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                try {\r\n                    // verify that the object can be stringified\r\n                    JSON.stringify(source);\r\n                    output = source;\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, (e && typeof e.toString === 'function') ? e.toString() : \"Error serializing object\", null, true);\r\n                }\r\n            }\r\n            return output;\r\n        }\r\n        source[circularReferenceCheck] = true;\r\n        for (var field in source.aiDataContract) {\r\n            var contract = source.aiDataContract[field];\r\n            var isRequired = (typeof contract === \"function\") ? (contract() & FieldType.Required) : (contract & FieldType.Required);\r\n            var isHidden = (typeof contract === \"function\") ? (contract() & FieldType.Hidden) : (contract & FieldType.Hidden);\r\n            var isArray = contract & FieldType.Array;\r\n            var isPresent = source[field] !== undefined;\r\n            var isObject = typeof source[field] === \"object\" && source[field] !== null;\r\n            if (isRequired && !isPresent && !isArray) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MissingRequiredFieldSpecification, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                // If not in debug mode, continue and hope the error is permissible\r\n                continue;\r\n            }\r\n            if (isHidden) {\r\n                // Don't serialize hidden fields\r\n                continue;\r\n            }\r\n            var value = void 0;\r\n            if (isObject) {\r\n                if (isArray) {\r\n                    // special case; resurse on each object in the source array\r\n                    value = this._serializeArray(source[field], field);\r\n                }\r\n                else {\r\n                    // recurse on the source object in this field\r\n                    value = this._serializeObject(source[field], field);\r\n                }\r\n            }\r\n            else {\r\n                // assign the source field to the output even if undefined or required\r\n                value = source[field];\r\n            }\r\n            // only emit this field if the value is defined\r\n            if (value !== undefined) {\r\n                output[field] = value;\r\n            }\r\n        }\r\n        delete source[circularReferenceCheck];\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeArray = function (sources, name) {\r\n        var output;\r\n        if (!!sources) {\r\n            if (!Util.isArray(sources)) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ItemNotInArray, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n            }\r\n            else {\r\n                output = [];\r\n                for (var i = 0; i < sources.length; i++) {\r\n                    var source = sources[i];\r\n                    var item = this._serializeObject(source, name + \"[\" + i + \"]\");\r\n                    output.push(item);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeStringMap = function (map, expectedType, name) {\r\n        var output;\r\n        if (map) {\r\n            output = {};\r\n            for (var field in map) {\r\n                var value = map[field];\r\n                if (expectedType === \"string\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else if (!value.toString) {\r\n                        output[field] = \"invalid field: toString() is not defined.\";\r\n                    }\r\n                    else {\r\n                        output[field] = value.toString();\r\n                    }\r\n                }\r\n                else if (expectedType === \"number\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else {\r\n                        var num = parseFloat(value);\r\n                        if (isNaN(num)) {\r\n                            output[field] = \"NaN\";\r\n                        }\r\n                        else {\r\n                            output[field] = num;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, output[field], null, true);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","import { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n * @description Monitors browser for offline events\r\n * @export default - Offline: Static instance of OfflineListener\r\n * @class OfflineListener\r\n */\r\nvar OfflineListener = /** @class */ (function () {\r\n    function OfflineListener() {\r\n        this._onlineStatus = true;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                this.isListening = false;\r\n            }\r\n            else if (window && window.addEventListener) {\r\n                window.addEventListener('online', this._setOnline.bind(this), false);\r\n                window.addEventListener('offline', this._setOffline.bind(this), false);\r\n                this.isListening = true;\r\n            }\r\n            else if (document && document.body) {\r\n                document.body.ononline = this._setOnline.bind(this);\r\n                document.body.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else if (document) {\r\n                document.ononline = this._setOnline.bind(this);\r\n                document.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else {\r\n                // Could not find a place to add event listener\r\n                this.isListening = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // this makes react-native less angry\r\n            this.isListening = false;\r\n        }\r\n    }\r\n    OfflineListener.prototype.isOnline = function () {\r\n        if (this.isListening) {\r\n            return this._onlineStatus;\r\n        }\r\n        else if (navigator && !CoreUtils.isNullOrUndefined(navigator.onLine)) {\r\n            return navigator.onLine;\r\n        }\r\n        else {\r\n            // Cannot determine online status - report as online\r\n            return true;\r\n        }\r\n    };\r\n    OfflineListener.prototype.isOffline = function () {\r\n        return !this.isOnline();\r\n    };\r\n    OfflineListener.prototype._setOnline = function () {\r\n        this._onlineStatus = true;\r\n    };\r\n    OfflineListener.prototype._setOffline = function () {\r\n        this._onlineStatus = false;\r\n    };\r\n    OfflineListener.Offline = new OfflineListener;\r\n    return OfflineListener;\r\n}());\r\nexport { OfflineListener };\r\nexport var Offline = OfflineListener.Offline;\r\n//# sourceMappingURL=Offline.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input === \"\") {\r\n            return 0;\r\n        }\r\n        while (input.length < HashCodeScoreGenerator.MIN_INPUT_LENGTH) {\r\n            input = input.concat(input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input.length; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    // (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\n    HashCodeScoreGenerator.MIN_INPUT_LENGTH = 8;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { HashCodeScoreGenerator } from './HashCodeScoreGenerator';\r\nimport { ContextTagKeys } from '@microsoft/applicationinsights-common';\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        this.hashCodeGeneragor = new HashCodeScoreGenerator();\r\n        this.keys = new ContextTagKeys();\r\n    }\r\n    SamplingScoreGenerator.prototype.getSamplingScore = function (item) {\r\n        var score = 0;\r\n        if (item.tags && item.tags[this.keys.userId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.userId]);\r\n        }\r\n        else if (item.ext && item.ext.user && item.ext.user.id) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.user.id);\r\n        }\r\n        else if (item.tags && item.tags[this.keys.operationId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.operationId]);\r\n        }\r\n        else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace.traceID) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.telemetryTrace.traceID);\r\n        }\r\n        else {\r\n            // tslint:disable-next-line:insecure-random\r\n            score = (Math.random() * 100);\r\n        }\r\n        return score;\r\n    };\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { SamplingScoreGenerator } from './SamplingScoreGenerators/SamplingScoreGenerator';\r\nimport { Metric } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, DiagnosticLogger, CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        this._logger = CoreUtils.isNullOrUndefined(logger) ? new DiagnosticLogger() : logger;\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SampleRateOutOfRange, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            this.sampleRate = 100;\r\n        }\r\n        this.sampleRate = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n     * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n     */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this.sampleRate; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === Metric.dataType) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator.getSamplingScore(envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SessionStorageSendBuffer, ArraySendBuffer } from './SendBuffer';\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from './EnvelopeCreator';\r\nimport { Serializer } from './Serializer'; // todo move to channel\r\nimport { DisabledPropertyName, RequestHeaders, Util, PageView, Event, Trace, Exception, Metric, PageViewPerformance, RemoteDependencyData, ConfigurationManager, ProcessLegacy, BreezeChannelIdentifier, SampleRate } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity, } from '@microsoft/applicationinsights-core-js';\r\nimport { Offline } from './Offline';\r\nimport { Sample } from './TelemetryProcessors/Sample';\r\nvar Sender = /** @class */ (function () {\r\n    function Sender() {\r\n        this.priority = 1001;\r\n        this.identifier = BreezeChannelIdentifier;\r\n        /**\r\n         * Whether XMLHttpRequest object is supported. Older version of IE (8,9) do not support it.\r\n         */\r\n        this._XMLHttpRequestSupported = false;\r\n    }\r\n    Sender.constructEnvelope = function (orig, iKey, logger) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !CoreUtils.isNullOrUndefined(iKey)) {\r\n            envelope = tslib_1.__assign({}, orig, { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        switch (envelope.baseType) {\r\n            case Event.dataType:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n            case Trace.dataType:\r\n                return TraceEnvelopeCreator.TraceEnvelopeCreator.Create(logger, envelope);\r\n            case PageView.dataType:\r\n                return PageViewEnvelopeCreator.PageViewEnvelopeCreator.Create(logger, envelope);\r\n            case PageViewPerformance.dataType:\r\n                return PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator.Create(logger, envelope);\r\n            case Exception.dataType:\r\n                return ExceptionEnvelopeCreator.ExceptionEnvelopeCreator.Create(logger, envelope);\r\n            case Metric.dataType:\r\n                return MetricEnvelopeCreator.MetricEnvelopeCreator.Create(logger, envelope);\r\n            case RemoteDependencyData.dataType:\r\n                return DependencyEnvelopeCreator.DependencyEnvelopeCreator.Create(logger, envelope);\r\n            default:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n        }\r\n    };\r\n    Sender._getDefaultAppInsightsChannelConfig = function () {\r\n        // set default values\r\n        return {\r\n            endpointUrl: function () { return \"https://dc.services.visualstudio.com/v2/track\"; },\r\n            emitLineDelimitedJson: function () { return false; },\r\n            maxBatchInterval: function () { return 15000; },\r\n            maxBatchSizeInBytes: function () { return 102400; },\r\n            disableTelemetry: function () { return false; },\r\n            enableSessionStorageBuffer: function () { return true; },\r\n            isRetryDisabled: function () { return false; },\r\n            isBeaconApiDisabled: function () { return true; },\r\n            onunloadDisableBeacon: function () { return false; },\r\n            instrumentationKey: function () { return undefined; },\r\n            namePrefix: function () { return undefined; },\r\n            samplingPercentage: function () { return 100; }\r\n        };\r\n    };\r\n    Sender._getEmptyAppInsightsChannelConfig = function () {\r\n        return {\r\n            endpointUrl: undefined,\r\n            emitLineDelimitedJson: undefined,\r\n            maxBatchInterval: undefined,\r\n            maxBatchSizeInBytes: undefined,\r\n            disableTelemetry: undefined,\r\n            enableSessionStorageBuffer: undefined,\r\n            isRetryDisabled: undefined,\r\n            isBeaconApiDisabled: undefined,\r\n            onunloadDisableBeacon: undefined,\r\n            instrumentationKey: undefined,\r\n            namePrefix: undefined,\r\n            samplingPercentage: undefined\r\n        };\r\n    };\r\n    Sender.prototype.pause = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.resume = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.flush = function () {\r\n        try {\r\n            this.triggerSend();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FlushFailed, \"flush failed, telemetry will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    Sender.prototype.onunloadFlush = function () {\r\n        if ((this._config.onunloadDisableBeacon() === false || this._config.isBeaconApiDisabled() === false) && Util.IsBeaconApiSupported()) {\r\n            try {\r\n                this.triggerSend(true, this._beaconSender);\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToSendQueuedTelemetry, \"failed to flush with beacon sender on page unload, telemetry will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        else {\r\n            this.flush();\r\n        }\r\n    };\r\n    Sender.prototype.teardown = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this._logger = core.logger;\r\n        this._serializer = new Serializer(core.logger);\r\n        this._consecutiveErrors = 0;\r\n        this._retryAt = null;\r\n        this._lastSend = 0;\r\n        this._sender = null;\r\n        var defaultConfig = Sender._getDefaultAppInsightsChannelConfig();\r\n        this._config = Sender._getEmptyAppInsightsChannelConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._config[field] = function () { return ConfigurationManager.getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._buffer = (this._config.enableSessionStorageBuffer && Util.canUseSessionStorage())\r\n            ? new SessionStorageSendBuffer(this._logger, this._config) : new ArraySendBuffer(this._config);\r\n        this._sample = new Sample(this._config.samplingPercentage(), this._logger);\r\n        if (!this._config.isBeaconApiDisabled() && Util.IsBeaconApiSupported()) {\r\n            this._sender = this._beaconSender;\r\n        }\r\n        else {\r\n            if (typeof XMLHttpRequest !== \"undefined\") {\r\n                var testXhr = new XMLHttpRequest();\r\n                if (\"withCredentials\" in testXhr) {\r\n                    this._sender = this._xhrSender;\r\n                    this._XMLHttpRequestSupported = true;\r\n                }\r\n                else if (typeof XDomainRequest !== \"undefined\") {\r\n                    this._sender = this._xdrSender; // IE 8 and 9\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Sender.prototype.processTelemetry = function (telemetryItem) {\r\n        var _this = this;\r\n        try {\r\n            // if master off switch is set, don't send any data\r\n            if (this._config.disableTelemetry()) {\r\n                // Do not send/save data\r\n                return;\r\n            }\r\n            // validate input\r\n            if (!telemetryItem) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSendEmptyTelemetry, \"Cannot send empty telemetry\");\r\n                return;\r\n            }\r\n            // validate event\r\n            if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidEvent, \"Cannot send telemetry without baseData and baseType\");\r\n                return;\r\n            }\r\n            if (!telemetryItem.baseType) {\r\n                // Default\r\n                telemetryItem.baseType = \"EventData\";\r\n            }\r\n            // ensure a sender was constructed\r\n            if (!this._sender) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SenderNotInitialized, \"Sender was not initialized\");\r\n                return;\r\n            }\r\n            // check if this item should be sampled in, else add sampleRate tag\r\n            if (!this._isSampledIn(telemetryItem)) {\r\n                // Item is sampled out, do not send it\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TelemetrySampledAndNotSent, \"Telemetry item was sampled out and not sent\", { SampleRate: this._sample.sampleRate });\r\n                return;\r\n            }\r\n            else {\r\n                telemetryItem.tags = telemetryItem.tags || {};\r\n                telemetryItem.tags[SampleRate] = this._sample.sampleRate;\r\n            }\r\n            // construct an envelope that Application Insights endpoint can understand\r\n            var aiEnvelope_1 = Sender.constructEnvelope(telemetryItem, this._config.instrumentationKey(), this._logger);\r\n            if (!aiEnvelope_1) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CreateEnvelopeError, \"Unable to create an AppInsights envelope\");\r\n                return;\r\n            }\r\n            var doNotSendItem_1 = false;\r\n            // this is for running in legacy mode, where customer may already have a custom initializer present\r\n            if (telemetryItem.tags && telemetryItem.tags[ProcessLegacy]) {\r\n                telemetryItem.tags[ProcessLegacy].forEach(function (callBack) {\r\n                    try {\r\n                        if (callBack && callBack(aiEnvelope_1) === false) {\r\n                            doNotSendItem_1 = true;\r\n                            _this._logger.warnToConsole(\"Telemetry processor check returns false\");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // log error but dont stop executing rest of the telemetry initializers\r\n                        // doNotSendItem = true;\r\n                        _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                    }\r\n                });\r\n                delete telemetryItem.tags[ProcessLegacy];\r\n            }\r\n            if (doNotSendItem_1) {\r\n                return; // do not send, no need to execute next plugin\r\n            }\r\n            // check if the incoming payload is too large, truncate if necessary\r\n            var payload = this._serializer.serialize(aiEnvelope_1);\r\n            // flush if we would exceed the max-size limit by adding this item\r\n            var bufferPayload = this._buffer.getItems();\r\n            var batch = this._buffer.batchPayloads(bufferPayload);\r\n            if (batch && (batch.length + payload.length > this._config.maxBatchSizeInBytes())) {\r\n                this.triggerSend();\r\n            }\r\n            // enqueue the payload\r\n            this._buffer.enqueue(payload);\r\n            // ensure an invocation timeout is set\r\n            this._setupTimer();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedAddingTelemetryToBuffer, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        // hand off the telemetry item to the next plugin\r\n        if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(telemetryItem);\r\n        }\r\n    };\r\n    Sender.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    /**\r\n     * xhr state changes\r\n     */\r\n    Sender.prototype._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n        if (xhr.readyState === 4) {\r\n            var response = null;\r\n            if (!this._appId) {\r\n                response = this._parseResponse(xhr.responseText || xhr.response);\r\n                if (response && response.appId) {\r\n                    this._appId = response.appId;\r\n                }\r\n            }\r\n            if ((xhr.status < 200 || xhr.status >= 300) && xhr.status !== 0) {\r\n                if (!this._config.isRetryDisabled() && this._isRetriable(xhr.status)) {\r\n                    this._resendPayload(payload);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                        \"Response code \" + xhr.status + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n                else {\r\n                    this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                }\r\n            }\r\n            else if (Offline.isOffline()) {\r\n                // Note: Don't check for staus == 0, since adblock gives this code\r\n                if (!this._config.isRetryDisabled()) {\r\n                    var offlineBackOffMultiplier = 10; // arbritrary number\r\n                    this._resendPayload(payload, offlineBackOffMultiplier);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". Offline - Response Code: \" + xhr.status + \". Offline status: \" + Offline.isOffline() + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n            }\r\n            else {\r\n                if (xhr.status === 206) {\r\n                    if (!response) {\r\n                        response = this._parseResponse(xhr.responseText || xhr.response);\r\n                    }\r\n                    if (response && !this._config.isRetryDisabled()) {\r\n                        this._onPartialSuccess(payload, response);\r\n                    }\r\n                    else {\r\n                        this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                    }\r\n                }\r\n                else {\r\n                    this._consecutiveErrors = 0;\r\n                    this._onSuccess(payload, countOfItemsInPayload);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Immediately send buffered data\r\n     * @param async {boolean} - Indicates if the events should be sent asynchronously\r\n     * @param forcedSender {SenderFunction} - Indicates the forcedSender, undefined if not passed\r\n     */\r\n    Sender.prototype.triggerSend = function (async, forcedSender) {\r\n        if (async === void 0) { async = true; }\r\n        try {\r\n            // Send data only if disableTelemetry is false\r\n            if (!this._config.disableTelemetry()) {\r\n                if (this._buffer.count() > 0) {\r\n                    var payload = this._buffer.getItems();\r\n                    // invoke send\r\n                    if (forcedSender) {\r\n                        forcedSender.call(this, payload, async);\r\n                    }\r\n                    else {\r\n                        this._sender(payload, async);\r\n                    }\r\n                }\r\n                // update lastSend time to enable throttling\r\n                this._lastSend = +new Date;\r\n            }\r\n            else {\r\n                this._buffer.clear();\r\n            }\r\n            clearTimeout(this._timeoutHandle);\r\n            this._timeoutHandle = null;\r\n            this._retryAt = null;\r\n        }\r\n        catch (e) {\r\n            /* Ignore this error for IE under v10 */\r\n            if (!Util.getIEVersion() || Util.getIEVersion() > 9) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TransmissionFailed, \"Telemetry transmission failed, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * error handler\r\n     */\r\n    Sender.prototype._onError = function (payload, message, event) {\r\n        this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.OnError, \"Failed to send telemetry.\", { message: message });\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * partial success handler\r\n     */\r\n    Sender.prototype._onPartialSuccess = function (payload, results) {\r\n        var failed = [];\r\n        var retry = [];\r\n        // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n        var errors = results.errors.reverse();\r\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n            var error = errors_1[_i];\r\n            var extracted = payload.splice(error.index, 1)[0];\r\n            if (this._isRetriable(error.statusCode)) {\r\n                retry.push(extracted);\r\n            }\r\n            else {\r\n                // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                failed.push(extracted);\r\n            }\r\n        }\r\n        if (payload.length > 0) {\r\n            this._onSuccess(payload, results.itemsAccepted);\r\n        }\r\n        if (failed.length > 0) {\r\n            this._onError(failed, this._formatErrorMessageXhr(null, ['partial success', results.itemsAccepted, 'of', results.itemsReceived].join(' ')));\r\n        }\r\n        if (retry.length > 0) {\r\n            this._resendPayload(retry);\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \"Partial success. \" +\r\n                \"Delivered: \" + payload.length + \", Failed: \" + failed.length +\r\n                \". Will retry to send \" + retry.length + \" our of \" + results.itemsReceived + \" items\");\r\n        }\r\n    };\r\n    /**\r\n     * success handler\r\n     */\r\n    Sender.prototype._onSuccess = function (payload, countOfItemsInPayload) {\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * xdr state changes\r\n     */\r\n    Sender.prototype._xdrOnLoad = function (xdr, payload) {\r\n        if (xdr && (xdr.responseText + \"\" === \"200\" || xdr.responseText === \"\")) {\r\n            this._consecutiveErrors = 0;\r\n            this._onSuccess(payload, 0);\r\n        }\r\n        else {\r\n            var results = this._parseResponse(xdr.responseText);\r\n            if (results && results.itemsReceived && results.itemsReceived > results.itemsAccepted\r\n                && !this._config.isRetryDisabled()) {\r\n                this._onPartialSuccess(payload, results);\r\n            }\r\n            else {\r\n                this._onError(payload, this._formatErrorMessageXdr(xdr));\r\n            }\r\n        }\r\n    };\r\n    Sender.prototype._isSampledIn = function (envelope) {\r\n        return this._sample.isSampledIn(envelope);\r\n    };\r\n    /**\r\n     * Send Beacon API request\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - not used\r\n     * Note: Beacon API does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._beaconSender = function (payload, isAsync) {\r\n        var url = this._config.endpointUrl();\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n        // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n        var plainTextBatch = new Blob([batch], { type: 'text/plain;charset=UTF-8' });\r\n        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n        var queued = navigator.sendBeacon(url, plainTextBatch);\r\n        if (queued) {\r\n            this._buffer.markAsSent(payload);\r\n            // no response from beaconSender, clear buffer\r\n            this._onSuccess(payload, payload.length);\r\n        }\r\n        else {\r\n            this._xhrSender(payload, true);\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" + \"Failed to send telemetry with Beacon API, retried with xhrSender.\");\r\n        }\r\n    };\r\n    /**\r\n     * Send XMLHttpRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     */\r\n    Sender.prototype._xhrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xhr = new XMLHttpRequest();\r\n        xhr[DisabledPropertyName] = true;\r\n        xhr.open(\"POST\", this._config.endpointUrl(), isAsync);\r\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n        // append Sdk-Context request header only in case of breeze endpoint\r\n        if (Util.isInternalApplicationInsightsEndpoint(this._config.endpointUrl())) {\r\n            xhr.setRequestHeader(RequestHeaders.sdkContextHeader, RequestHeaders.sdkContextHeaderAppIdRequest);\r\n        }\r\n        xhr.onreadystatechange = function () { return _this._xhrReadyStateChange(xhr, payload, payload.length); };\r\n        xhr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXhr(xhr), event); };\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xhr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    /**\r\n     * Parses the response from the backend.\r\n     * @param response - XMLHttpRequest or XDomainRequest response\r\n     */\r\n    Sender.prototype._parseResponse = function (response) {\r\n        try {\r\n            if (response && response !== \"\") {\r\n                var result = JSON.parse(response);\r\n                if (result && result.itemsReceived && result.itemsReceived >= result.itemsAccepted &&\r\n                    result.itemsReceived - result.itemsAccepted === result.errors.length) {\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidBackendResponse, \"Cannot parse the response. \" + Util.getExceptionName(e), {\r\n                response: response\r\n            });\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n     * @param payload\r\n     */\r\n    Sender.prototype._resendPayload = function (payload, linearFactor) {\r\n        if (linearFactor === void 0) { linearFactor = 1; }\r\n        if (!payload || payload.length === 0) {\r\n            return;\r\n        }\r\n        this._buffer.clearSent(payload);\r\n        this._consecutiveErrors++;\r\n        for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n            var item = payload_1[_i];\r\n            this._buffer.enqueue(item);\r\n        }\r\n        // setup timer\r\n        this._setRetryTime(linearFactor);\r\n        this._setupTimer();\r\n    };\r\n    /**\r\n     * Calculates the time to wait before retrying in case of an error based on\r\n     * http://en.wikipedia.org/wiki/Exponential_backoff\r\n     */\r\n    Sender.prototype._setRetryTime = function (linearFactor) {\r\n        var SlotDelayInSeconds = 10;\r\n        var delayInSeconds;\r\n        if (this._consecutiveErrors <= 1) {\r\n            delayInSeconds = SlotDelayInSeconds;\r\n        }\r\n        else {\r\n            var backOffSlot = (Math.pow(2, this._consecutiveErrors) - 1) / 2;\r\n            // tslint:disable-next-line:insecure-random\r\n            var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n            backOffDelay = linearFactor * backOffDelay;\r\n            delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n        }\r\n        // TODO: Log the backoff time like the C# version does.\r\n        var retryAfterTimeSpan = Date.now() + (delayInSeconds * 1000);\r\n        // TODO: Log the retry at time like the C# version does.\r\n        this._retryAt = retryAfterTimeSpan;\r\n    };\r\n    /**\r\n     * Sets up the timer which triggers actually sending the data.\r\n     */\r\n    Sender.prototype._setupTimer = function () {\r\n        var _this = this;\r\n        if (!this._timeoutHandle) {\r\n            var retryInterval = this._retryAt ? Math.max(0, this._retryAt - Date.now()) : 0;\r\n            var timerValue = Math.max(this._config.maxBatchInterval(), retryInterval);\r\n            this._timeoutHandle = setTimeout(function () {\r\n                _this.triggerSend();\r\n            }, timerValue);\r\n        }\r\n    };\r\n    /**\r\n     * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n     * @param statusCode\r\n     */\r\n    Sender.prototype._isRetriable = function (statusCode) {\r\n        return statusCode === 408 // Timeout\r\n            || statusCode === 429 // Too many requests.\r\n            || statusCode === 500 // Internal server error.\r\n            || statusCode === 503; // Service unavailable.\r\n    };\r\n    Sender.prototype._formatErrorMessageXhr = function (xhr, message) {\r\n        if (xhr) {\r\n            return \"XMLHttpRequest,Status:\" + xhr.status + \",Response:\" + xhr.responseText || xhr.response || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    /**\r\n     * Send XDomainRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     *\r\n     * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n     * to maintain consistency with the xhrSender's contract\r\n     * Note: XDomainRequest does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._xdrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xdr = new XDomainRequest();\r\n        xdr.onload = function () { return _this._xdrOnLoad(xdr, payload); };\r\n        xdr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXdr(xdr), event); };\r\n        // XDomainRequest requires the same protocol as the hosting page.\r\n        // If the protocol doesn't match, we can't send the telemetry :(.\r\n        var hostingProtocol = window.location && window.location.protocol;\r\n        if (this._config.endpointUrl().lastIndexOf(hostingProtocol, 0) !== 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\");\r\n            this._buffer.clear();\r\n            return;\r\n        }\r\n        var endpointUrl = this._config.endpointUrl().replace(/^(https?:)/, \"\");\r\n        xdr.open('POST', endpointUrl);\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xdr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    Sender.prototype._formatErrorMessageXdr = function (xdr, message) {\r\n        if (xdr) {\r\n            return \"XDomainRequest,Response:\" + xdr.responseText || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    return Sender;\r\n}());\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, CoreUtils, DiagnosticLogger } from '@microsoft/applicationinsights-core-js';\r\nvar Session = /** @class */ (function () {\r\n    function Session() {\r\n    }\r\n    return Session;\r\n}());\r\nexport { Session };\r\nvar _SessionManager = /** @class */ (function () {\r\n    function _SessionManager(config, logger) {\r\n        var _this = this;\r\n        if (CoreUtils.isNullOrUndefined(logger)) {\r\n            this._logger = new DiagnosticLogger();\r\n        }\r\n        else {\r\n            this._logger = logger;\r\n        }\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        if (!(typeof config.sessionExpirationMs === \"function\")) {\r\n            config.sessionExpirationMs = function () { return _SessionManager.acquisitionSpan; };\r\n        }\r\n        if (!(typeof config.sessionRenewalMs === \"function\")) {\r\n            config.sessionRenewalMs = function () { return _SessionManager.renewalSpan; };\r\n        }\r\n        this.config = config;\r\n        this._storageNamePrefix = function () { return _this.config.namePrefix && _this.config.namePrefix() ? _SessionManager.cookieNameConst + _this.config.namePrefix() : _SessionManager.cookieNameConst; };\r\n        this.automaticSession = new Session();\r\n    }\r\n    _SessionManager.prototype.update = function () {\r\n        if (!this.automaticSession.id) {\r\n            this.initializeAutomaticSession();\r\n        }\r\n        var now = DateTimeUtils.Now();\r\n        var acquisitionExpired = now - this.automaticSession.acquisitionDate > this.config.sessionExpirationMs();\r\n        var renewalExpired = now - this.automaticSession.renewalDate > this.config.sessionRenewalMs();\r\n        // renew if acquisitionSpan or renewalSpan has ellapsed\r\n        if (acquisitionExpired || renewalExpired) {\r\n            // update automaticSession so session state has correct id\r\n            this.renew();\r\n        }\r\n        else {\r\n            // do not update the cookie more often than cookieUpdateInterval\r\n            if (!this.cookieUpdatedTimestamp || now - this.cookieUpdatedTimestamp > _SessionManager.cookieUpdateInterval) {\r\n                this.automaticSession.renewalDate = now;\r\n                this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *  Record the current state of the automatic session and store it in our cookie string format\r\n     *  into the browser's local storage. This is used to restore the session data when the cookie\r\n     *  expires.\r\n     */\r\n    _SessionManager.prototype.backup = function () {\r\n        this.setStorage(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n    };\r\n    /**\r\n     *  Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n     *  initialize the automatic session.\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSession = function () {\r\n        var cookie = Util.getCookie(this._logger, this._storageNamePrefix());\r\n        if (cookie && typeof cookie.split === \"function\") {\r\n            this.initializeAutomaticSessionWithData(cookie);\r\n        }\r\n        else {\r\n            // There's no cookie, but we might have session data in local storage\r\n            // This can happen if the session expired or the user actively deleted the cookie\r\n            // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n            // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n            var storage = Util.getStorage(this._logger, this._storageNamePrefix());\r\n            if (storage) {\r\n                this.initializeAutomaticSessionWithData(storage);\r\n            }\r\n        }\r\n        if (!this.automaticSession.id) {\r\n            this.renew();\r\n        }\r\n    };\r\n    /**\r\n     *  Extract id, aquisitionDate, and renewalDate from an ai_session payload string and\r\n     *  use this data to initialize automaticSession.\r\n     *\r\n     *  @param {string} sessionData - The string stored in an ai_session cookie or local storage backup\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSessionWithData = function (sessionData) {\r\n        var params = sessionData.split(\"|\");\r\n        if (params.length > 0) {\r\n            this.automaticSession.id = params[0];\r\n        }\r\n        try {\r\n            if (params.length > 1) {\r\n                var acq = +params[1];\r\n                this.automaticSession.acquisitionDate = +new Date(acq);\r\n                this.automaticSession.acquisitionDate = this.automaticSession.acquisitionDate > 0 ? this.automaticSession.acquisitionDate : 0;\r\n            }\r\n            if (params.length > 2) {\r\n                var renewal = +params[2];\r\n                this.automaticSession.renewalDate = +new Date(renewal);\r\n                this.automaticSession.renewalDate = this.automaticSession.renewalDate > 0 ? this.automaticSession.renewalDate : 0;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ErrorParsingAISessionCookie, \"Error parsing ai_session cookie, session will be reset: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        if (this.automaticSession.renewalDate === 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionRenewalDateIsZero, \"AI session renewal date is 0, session will be reset.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.renew = function () {\r\n        var now = DateTimeUtils.Now();\r\n        this.automaticSession.id = Util.newId();\r\n        this.automaticSession.acquisitionDate = now;\r\n        this.automaticSession.renewalDate = now;\r\n        this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n        // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n        if (!Util.canUseLocalStorage()) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserDoesNotSupportLocalStorage, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.setCookie = function (guid, acq, renewal) {\r\n        // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n        // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n        var acquisitionExpiry = acq + this.config.sessionExpirationMs();\r\n        var renewalExpiry = renewal + this.config.sessionRenewalMs();\r\n        var cookieExpiry = new Date();\r\n        var cookie = [guid, acq, renewal];\r\n        if (acquisitionExpiry < renewalExpiry) {\r\n            cookieExpiry.setTime(acquisitionExpiry);\r\n        }\r\n        else {\r\n            cookieExpiry.setTime(renewalExpiry);\r\n        }\r\n        var cookieDomnain = this.config.cookieDomain ? this.config.cookieDomain() : null;\r\n        Util.setCookie(this._logger, this._storageNamePrefix(), cookie.join('|') + ';expires=' + cookieExpiry.toUTCString(), cookieDomnain);\r\n        this.cookieUpdatedTimestamp = DateTimeUtils.Now();\r\n    };\r\n    _SessionManager.prototype.setStorage = function (guid, acq, renewal) {\r\n        // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n        // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n        // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n        Util.setStorage(this._logger, this._storageNamePrefix(), [guid, acq, renewal].join('|'));\r\n    };\r\n    _SessionManager.acquisitionSpan = 86400000; // 24 hours in ms\r\n    _SessionManager.renewalSpan = 1800000; // 30 minutes in ms\r\n    _SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms\r\n    _SessionManager.cookieNameConst = 'ai_session';\r\n    return _SessionManager;\r\n}());\r\nexport { _SessionManager };\r\n//# sourceMappingURL=Session.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Application = /** @class */ (function () {\r\n    function Application() {\r\n    }\r\n    return Application;\r\n}());\r\nexport { Application };\r\n//# sourceMappingURL=Application.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Device = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Device class\r\n     */\r\n    function Device() {\r\n        // don't attempt to fingerprint browsers\r\n        this.id = \"browser\";\r\n        // Device type is a dimension in our data platform\r\n        // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n        this.deviceClass = \"Browser\";\r\n    }\r\n    return Device;\r\n}());\r\nexport { Device };\r\n//# sourceMappingURL=Device.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Version = \"2.2.3\";\r\nvar Internal = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the internal telemetry data class.\r\n     */\r\n    function Internal(config) {\r\n        this.sdkVersion = (config.sdkExtension && config.sdkExtension() ? config.sdkExtension() + \"_\" : \"\") + \"javascript:\" + Version;\r\n    }\r\n    return Internal;\r\n}());\r\nexport { Internal };\r\n//# sourceMappingURL=Internal.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity } from '@microsoft/applicationinsights-core-js';\r\nvar User = /** @class */ (function () {\r\n    function User(config, logger) {\r\n        this.isNewUser = false;\r\n        this._logger = logger;\r\n        // get userId or create new one if none exists\r\n        var cookie = Util.getCookie(this._logger, User.userCookieName);\r\n        if (cookie) {\r\n            this.isNewUser = false;\r\n            var params = cookie.split(User.cookieSeparator);\r\n            if (params.length > 0) {\r\n                this.id = params[0];\r\n            }\r\n        }\r\n        this.config = config;\r\n        if (!this.id) {\r\n            this.id = Util.newId();\r\n            var date = new Date();\r\n            var acqStr = Util.toISOStringForIE8(date);\r\n            this.accountAcquisitionDate = acqStr;\r\n            this.isNewUser = true;\r\n            // without expiration, cookies expire at the end of the session\r\n            // set it to 365 days from now\r\n            // 365 * 24 * 60 * 60 * 1000 = 31536000000 \r\n            date.setTime(date.getTime() + 31536000000);\r\n            var newCookie = [this.id, acqStr];\r\n            var cookieDomain = this.config.cookieDomain ? this.config.cookieDomain() : undefined;\r\n            Util.setCookie(this._logger, User.userCookieName, newCookie.join(User.cookieSeparator) + ';expires=' + date.toUTCString(), cookieDomain);\r\n            // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.\r\n            // We should respect their wishes and clear ourselves from local storage\r\n            var name_1 = config.namePrefix && config.namePrefix() ? config.namePrefix() + 'ai_session' : 'ai_session';\r\n            Util.removeStorage(this._logger, name_1);\r\n        }\r\n        // We still take the account id from the ctor param for backward compatibility. \r\n        // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n        this.accountId = config.accountId ? config.accountId() : undefined;\r\n        // Get the auth user id and account id from the cookie if exists\r\n        // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n        var authCookie = Util.getCookie(this._logger, User.authUserCookieName);\r\n        if (authCookie) {\r\n            authCookie = decodeURI(authCookie);\r\n            var authCookieString = authCookie.split(User.cookieSeparator);\r\n            if (authCookieString[0]) {\r\n                this.authenticatedId = authCookieString[0];\r\n            }\r\n            if (authCookieString.length > 1 && authCookieString[1]) {\r\n                this.accountId = authCookieString[1];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sets the authenticated user id and the account id in this session.\r\n     *\r\n     * @param authenticatedUserId {string} - The authenticated user id. A unique and persistent string that represents each authenticated user in the service.\r\n     * @param accountId {string} - An optional string to represent the account associated with the authenticated user.\r\n     */\r\n    User.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        // Validate inputs to ensure no cookie control characters.\r\n        var isInvalidInput = !this.validateUserInput(authenticatedUserId) || (accountId && !this.validateUserInput(accountId));\r\n        if (isInvalidInput) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SetAuthContextFailedAccountName, \"Setting auth user context failed. \" +\r\n                \"User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.\", true);\r\n            return;\r\n        }\r\n        // Create cookie string.\r\n        this.authenticatedId = authenticatedUserId;\r\n        var authCookie = this.authenticatedId;\r\n        if (accountId) {\r\n            this.accountId = accountId;\r\n            authCookie = [this.authenticatedId, this.accountId].join(User.cookieSeparator);\r\n        }\r\n        if (storeInCookie) {\r\n            // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n            // Encoding the cookie to handle unexpected unicode characters.\r\n            Util.setCookie(this._logger, User.authUserCookieName, encodeURI(authCookie), this.config.cookieDomain());\r\n        }\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and the account id from the user context.\r\n     * @returns {}\r\n     */\r\n    User.prototype.clearAuthenticatedUserContext = function () {\r\n        this.authenticatedId = null;\r\n        this.accountId = null;\r\n        Util.deleteCookie(this._logger, User.authUserCookieName);\r\n    };\r\n    User.prototype.validateUserInput = function (id) {\r\n        // Validate:\r\n        // 1. Id is a non-empty string.\r\n        // 2. It does not contain special characters for cookies.\r\n        if (typeof id !== 'string' ||\r\n            !id ||\r\n            id.match(/,|;|=| |\\|/)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    User.cookieSeparator = '|';\r\n    User.userCookieName = 'ai_user';\r\n    User.authUserCookieName = 'ai_authUser';\r\n    return User;\r\n}());\r\nexport { User };\r\n//# sourceMappingURL=User.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Location = /** @class */ (function () {\r\n    function Location() {\r\n    }\r\n    return Location;\r\n}());\r\nexport { Location };\r\n//# sourceMappingURL=Location.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nvar TelemetryTrace = /** @class */ (function () {\r\n    function TelemetryTrace(id, parentId, name) {\r\n        this.traceID = id || Util.generateW3CId();\r\n        this.parentID = parentId;\r\n        this.name = name;\r\n        if (window && window.location && window.location.pathname) {\r\n            this.name = window.location.pathname;\r\n        }\r\n    }\r\n    return TelemetryTrace;\r\n}());\r\nexport { TelemetryTrace };\r\n//# sourceMappingURL=TelemetryTrace.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { Session, _SessionManager } from './Context/Session';\r\nimport { Extensions, CtxTagKeys } from '@microsoft/applicationinsights-common';\r\nimport { Application } from './Context/Application';\r\nimport { Device } from './Context/Device';\r\nimport { Internal } from './Context/Internal';\r\nimport { User } from './Context/User';\r\nimport { Location } from './Context/Location';\r\nimport { TelemetryTrace } from './Context/TelemetryTrace';\r\nvar TelemetryContext = /** @class */ (function () {\r\n    function TelemetryContext(logger, defaultConfig) {\r\n        if (typeof window !== 'undefined') {\r\n            this.sessionManager = new _SessionManager(defaultConfig, logger);\r\n            this.application = new Application();\r\n            this.device = new Device();\r\n            this.internal = new Internal(defaultConfig);\r\n            this.location = new Location();\r\n            this.user = new User(defaultConfig, logger);\r\n            this.telemetryTrace = new TelemetryTrace();\r\n            this.session = new Session();\r\n        }\r\n        this.appId = function () { return null; };\r\n    }\r\n    TelemetryContext.prototype.applySessionContext = function (event) {\r\n        var sessionContext = this.session || this.sessionManager.automaticSession;\r\n        if (sessionContext) {\r\n            if (typeof sessionContext.id === \"string\") {\r\n                event.ext.app.sesId = sessionContext.id;\r\n            }\r\n        }\r\n        if (this.session) {\r\n            // If customer set session info, apply his context; otherwise apply context automatically generated\r\n            if (typeof this.session.id === \"string\") {\r\n                event.ext.app.sesId = this.session.id;\r\n            }\r\n            else {\r\n                event.ext.app.sesId = this.sessionManager.automaticSession.id;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperatingSystemContxt = function (event) {\r\n        if (this.os && this.os.name) {\r\n            event.ext.os = this.os;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyApplicationContext = function (event) {\r\n        if (this.application) {\r\n            if (typeof this.application.ver === \"string\") {\r\n                event.tags[CtxTagKeys.applicationVersion] = this.application.ver;\r\n            }\r\n            if (typeof this.application.build === \"string\") {\r\n                event.tags[CtxTagKeys.applicationBuild] = this.application.build;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyDeviceContext = function (event) {\r\n        if (this.device) {\r\n            if (typeof this.device.id === \"string\") {\r\n                event.ext.device.localId = this.device.id;\r\n            }\r\n            if (typeof this.device.ip === \"string\") {\r\n                event.ext.device.ip = this.device.ip;\r\n            }\r\n            if (typeof this.device.model === \"string\") {\r\n                event.ext.device.model = this.device.model;\r\n            }\r\n            if (typeof this.device.deviceClass === \"string\") {\r\n                event.ext.device.deviceClass = this.device.deviceClass;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyInternalContext = function (event) {\r\n        if (this.internal) {\r\n            if (typeof this.internal.agentVersion === \"string\") {\r\n                event.tags[CtxTagKeys.internalAgentVersion] = this.internal.agentVersion; // not mapped in CS 4.0\r\n            }\r\n            if (typeof this.internal.sdkVersion === \"string\") {\r\n                event.tags[CtxTagKeys.internalSdkVersion] = this.internal.sdkVersion;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyLocationContext = function (event) {\r\n        if (this.location) {\r\n            if (typeof this.location.ip === \"string\") {\r\n                event.tags[CtxTagKeys.locationIp] = this.location.ip;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperationContext = function (event) {\r\n        if (this.telemetryTrace) {\r\n            var trace = event.ext.trace || { traceID: undefined, parentID: undefined };\r\n            if (typeof this.telemetryTrace.traceID === \"string\") {\r\n                trace.traceID = this.telemetryTrace.traceID;\r\n            }\r\n            if (typeof this.telemetryTrace.name === \"string\") {\r\n                trace.name = this.telemetryTrace.name;\r\n            }\r\n            if (typeof this.telemetryTrace.parentID === \"string\") {\r\n                trace.parentID = this.telemetryTrace.parentID;\r\n            }\r\n            event.ext.trace = trace;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyWebContext = function (event) {\r\n        if (this.web) {\r\n            event.ext.web = event.ext.web || {};\r\n            event.ext.web = this.web;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyUserContext = function (event) {\r\n        if (this.user) {\r\n            if (!event.tags) {\r\n                event.tags = [];\r\n            }\r\n            // stays in tags\r\n            if (typeof this.user.accountId === \"string\") {\r\n                var item = {};\r\n                event.tags[CtxTagKeys.userAccountId] = this.user.accountId;\r\n            }\r\n            // CS 4.0\r\n            if (typeof this.user.id === \"string\") {\r\n                event.ext.user.id = this.user.id;\r\n            }\r\n            if (typeof this.user.authenticatedId === \"string\") {\r\n                event.ext.user.authId = this.user.authenticatedId;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.cleanUp = function (event) {\r\n        if (event.ext[Extensions.DeviceExt] && Object.keys(event.ext[Extensions.DeviceExt]).length === 0) {\r\n            delete event.ext[Extensions.DeviceExt];\r\n        }\r\n        if (event.ext[Extensions.UserExt] && Object.keys(event.ext[Extensions.UserExt]).length === 0) {\r\n            delete event.ext[Extensions.UserExt];\r\n        }\r\n        if (event.ext[Extensions.WebExt] && Object.keys(event.ext[Extensions.WebExt]).length === 0) {\r\n            delete event.ext[Extensions.WebExt];\r\n        }\r\n        if (event.ext[Extensions.OSExt] && Object.keys(event.ext[Extensions.OSExt]).length === 0) {\r\n            delete event.ext[Extensions.OSExt];\r\n        }\r\n        if (event.ext[Extensions.AppExt] && Object.keys(event.ext[Extensions.AppExt]).length === 0) {\r\n            delete event.ext[Extensions.AppExt];\r\n        }\r\n        if (event.ext[Extensions.TraceExt] && Object.keys(event.ext[Extensions.TraceExt]).length === 0) {\r\n            delete event.ext[Extensions.TraceExt];\r\n        }\r\n    };\r\n    return TelemetryContext;\r\n}());\r\nexport { TelemetryContext };\r\n//# sourceMappingURL=TelemetryContext.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { CoreUtils, _InternalLogMessage, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nimport { TelemetryContext } from './TelemetryContext';\r\nimport { PageView, ConfigurationManager, BreezeChannelIdentifier, PropertiesPluginIdentifier, Extensions, Util } from '@microsoft/applicationinsights-common';\r\nvar PropertiesPlugin = /** @class */ (function () {\r\n    function PropertiesPlugin() {\r\n        this.priority = 110;\r\n        this.identifier = PropertiesPluginIdentifier;\r\n    }\r\n    PropertiesPlugin.getDefaultConfig = function () {\r\n        var defaultConfig = {\r\n            instrumentationKey: function () { return undefined; },\r\n            accountId: function () { return null; },\r\n            sessionRenewalMs: function () { return 30 * 60 * 1000; },\r\n            samplingPercentage: function () { return 100; },\r\n            sessionExpirationMs: function () { return 24 * 60 * 60 * 1000; },\r\n            cookieDomain: function () { return null; },\r\n            sdkExtension: function () { return null; },\r\n            isBrowserLinkTrackingEnabled: function () { return false; },\r\n            appId: function () { return null; },\r\n            namePrefix: function () { return undefined; }\r\n        };\r\n        return defaultConfig;\r\n    };\r\n    PropertiesPlugin.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        var defaultConfig = PropertiesPlugin.getDefaultConfig();\r\n        this._extensionConfig = this._extensionConfig || PropertiesPlugin.getDefaultConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._extensionConfig[field] = function () { return ConfigurationManager.getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._logger = core.logger;\r\n        this.context = new TelemetryContext(core.logger, this._extensionConfig);\r\n        this._breezeChannel = Util.getExtension(extensions, BreezeChannelIdentifier);\r\n        this.context.appId = function () { return _this._breezeChannel ? _this._breezeChannel[\"_appId\"] : null; };\r\n    };\r\n    /**\r\n     * Add Part A fields to the event\r\n     * @param event The event that needs to be processed\r\n     */\r\n    PropertiesPlugin.prototype.processTelemetry = function (event) {\r\n        if (CoreUtils.isNullOrUndefined(event)) {\r\n            // TODO(barustum): throw an internal event once we have support for internal logging\r\n        }\r\n        else {\r\n            // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n            if (event.name === PageView.envelopeType) {\r\n                this._logger.resetInternalMessageCount();\r\n            }\r\n            if (this.context.session) {\r\n                // If customer did not provide custom session id update the session manager\r\n                if (typeof this.context.session.id !== \"string\") {\r\n                    this.context.sessionManager.update();\r\n                }\r\n            }\r\n            this._processTelemetryInternal(event);\r\n            if (this.context && this.context.user && this.context.user.isNewUser) {\r\n                this.context.user.isNewUser = false;\r\n                var message = new _InternalLogMessage(_InternalMessageId.SendBrowserInfoOnUserInit, navigator.userAgent);\r\n                this._logger.logInternalMessage(LoggingSeverity.CRITICAL, message);\r\n            }\r\n            if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n                this._nextPlugin.processTelemetry(event);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the next plugin that comes after this plugin\r\n     * @param nextPlugin The next plugin\r\n     */\r\n    PropertiesPlugin.prototype.setNextPlugin = function (nextPlugin) {\r\n        this._nextPlugin = nextPlugin;\r\n    };\r\n    PropertiesPlugin.prototype._processTelemetryInternal = function (event) {\r\n        // set part A  fields\r\n        if (!event.tags) {\r\n            event.tags = [];\r\n        }\r\n        if (!event.ext) {\r\n            event.ext = {};\r\n        }\r\n        event.ext[Extensions.DeviceExt] = event.ext[Extensions.DeviceExt] || {};\r\n        event.ext[Extensions.WebExt] = event.ext[Extensions.WebExt] || {};\r\n        event.ext[Extensions.UserExt] = event.ext[Extensions.UserExt] || {};\r\n        event.ext[Extensions.OSExt] = event.ext[Extensions.OSExt] || {};\r\n        event.ext[Extensions.AppExt] = event.ext[Extensions.AppExt] || {};\r\n        event.ext[Extensions.TraceExt] = event.ext[Extensions.TraceExt] || {};\r\n        this.context.applySessionContext(event);\r\n        this.context.applyApplicationContext(event);\r\n        this.context.applyDeviceContext(event);\r\n        this.context.applyOperationContext(event);\r\n        this.context.applyUserContext(event);\r\n        this.context.applyOperatingSystemContxt(event);\r\n        this.context.applyWebContext(event);\r\n        this.context.applyLocationContext(event); // legacy tags\r\n        this.context.applyInternalContext(event); // legacy tags\r\n        this.context.cleanUp(event);\r\n    };\r\n    return PropertiesPlugin;\r\n}());\r\nexport default PropertiesPlugin;\r\n//# sourceMappingURL=PropertiesPlugin.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DataSanitizer, UrlHelper, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nvar XHRMonitoringState = /** @class */ (function () {\r\n    function XHRMonitoringState() {\r\n        this.openDone = false;\r\n        this.setRequestHeaderDone = false;\r\n        this.sendDone = false;\r\n        this.abortDone = false;\r\n        // <summary>True, if onreadyStateChangeCallback function attached to xhr, otherwise false</summary>\r\n        this.onreadystatechangeCallbackAttached = false;\r\n    }\r\n    return XHRMonitoringState;\r\n}());\r\nexport { XHRMonitoringState };\r\nvar ajaxRecord = /** @class */ (function () {\r\n    function ajaxRecord(traceID, spanID, logger) {\r\n        this.completed = false;\r\n        this.requestHeadersSize = null;\r\n        this.requestHeaders = null;\r\n        this.ttfb = null;\r\n        this.responseReceivingDuration = null;\r\n        this.callbackDuration = null;\r\n        this.ajaxTotalDuration = null;\r\n        this.aborted = null;\r\n        this.pageUrl = null;\r\n        this.requestUrl = null;\r\n        this.requestSize = 0;\r\n        this.method = null;\r\n        /// <summary>Returns the HTTP status code.</summary>\r\n        this.status = null;\r\n        // <summary>The timestamp when open method was invoked</summary>\r\n        this.requestSentTime = null;\r\n        // <summary>The timestamps when first byte was received</summary>\r\n        this.responseStartedTime = null;\r\n        // <summary>The timestamp when last byte was received</summary>\r\n        this.responseFinishedTime = null;\r\n        // <summary>The timestamp when onreadystatechange callback in readyState 4 finished</summary>\r\n        this.callbackFinishedTime = null;\r\n        // <summary>The timestamp at which ajax was ended</summary>\r\n        this.endTime = null;\r\n        // <summary>The original xhr onreadystatechange event</summary>\r\n        this.originalOnreadystatechage = null;\r\n        this.xhrMonitoringState = new XHRMonitoringState();\r\n        // <summary>Determines whether or not JavaScript exception occured in xhr.onreadystatechange code. 1 if occured, otherwise 0.</summary>\r\n        this.clientFailure = 0;\r\n        this.CalculateMetrics = function () {\r\n            var self = this;\r\n            // round to 3 decimal points\r\n            self.ajaxTotalDuration = Math.round(DateTimeUtils.GetDuration(self.requestSentTime, self.responseFinishedTime) * 1000) / 1000;\r\n        };\r\n        this.traceID = traceID;\r\n        this.spanID = spanID;\r\n        this._logger = logger;\r\n    }\r\n    ajaxRecord.prototype.getAbsoluteUrl = function () {\r\n        return this.requestUrl ? UrlHelper.getAbsoluteUrl(this.requestUrl) : null;\r\n    };\r\n    ajaxRecord.prototype.getPathName = function () {\r\n        return this.requestUrl ? DataSanitizer.sanitizeUrl(this._logger, UrlHelper.getCompleteUrl(this.method, this.requestUrl)) : null;\r\n    };\r\n    return ajaxRecord;\r\n}());\r\nexport { ajaxRecord };\r\n;\r\n//# sourceMappingURL=ajaxRecord.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar stringUtils = /** @class */ (function () {\r\n    function stringUtils() {\r\n    }\r\n    stringUtils.GetLength = function (strObject) {\r\n        var res = 0;\r\n        if (!CoreUtils.isNullOrUndefined(strObject)) {\r\n            var stringified = \"\";\r\n            try {\r\n                stringified = strObject.toString();\r\n            }\r\n            catch (ex) {\r\n                // some troubles with complex object\r\n            }\r\n            res = stringified.length;\r\n            res = isNaN(res) ? 0 : res;\r\n        }\r\n        return res;\r\n    };\r\n    return stringUtils;\r\n}());\r\nexport { stringUtils };\r\nvar EventHelper = /** @class */ (function () {\r\n    function EventHelper() {\r\n    }\r\n    /// <summary>Binds the specified function to an event, so that the function gets called whenever the event fires on the object</summary>\r\n    /// <param name=\"obj\">Object to which </param>\r\n    /// <param name=\"eventNameWithoutOn\">String that specifies any of the standard DHTML Events without \"on\" prefix</param>\r\n    /// <param name=\"handlerRef\">Pointer that specifies the function to call when event fires</param>\r\n    /// <returns>True if the function was bound successfully to the event, otherwise false</returns>\r\n    EventHelper.AttachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n        var result = false;\r\n        if (!CoreUtils.isNullOrUndefined(obj)) {\r\n            if (!CoreUtils.isNullOrUndefined(obj.attachEvent)) {\r\n                // IE before version 9                    \r\n                obj.attachEvent(\"on\" + eventNameWithoutOn, handlerRef);\r\n                result = true;\r\n            }\r\n            else {\r\n                if (!CoreUtils.isNullOrUndefined(obj.addEventListener)) {\r\n                    // all browsers except IE before version 9\r\n                    obj.addEventListener(eventNameWithoutOn, handlerRef, false);\r\n                    result = true;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    EventHelper.DetachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n        if (!CoreUtils.isNullOrUndefined(obj)) {\r\n            if (!CoreUtils.isNullOrUndefined(obj.detachEvent)) {\r\n                obj.detachEvent(\"on\" + eventNameWithoutOn, handlerRef);\r\n            }\r\n            else {\r\n                if (!CoreUtils.isNullOrUndefined(obj.removeEventListener)) {\r\n                    obj.removeEventListener(eventNameWithoutOn, handlerRef, false);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return EventHelper;\r\n}());\r\nexport { EventHelper };\r\n//# sourceMappingURL=ajaxUtils.js.map","import { Util } from '@microsoft/applicationinsights-common';\r\nvar Traceparent = /** @class */ (function () {\r\n    function Traceparent(traceId, spanId) {\r\n        this.traceFlag = Traceparent.DEFAULT_TRACE_FLAG;\r\n        this.version = Traceparent.DEFAULT_VERSION;\r\n        if (traceId && Traceparent.isValidTraceId(traceId)) {\r\n            this.traceId = traceId;\r\n        }\r\n        else {\r\n            this.traceId = Util.generateW3CId();\r\n        }\r\n        if (spanId && Traceparent.isValidSpanId(spanId)) {\r\n            this.spanId = spanId;\r\n        }\r\n        else {\r\n            this.spanId = Util.generateW3CId().substr(0, 16);\r\n        }\r\n    }\r\n    Traceparent.isValidTraceId = function (id) {\r\n        return id.match(/^[0-9a-f]{32}$/) && id !== \"00000000000000000000000000000000\";\r\n    };\r\n    Traceparent.isValidSpanId = function (id) {\r\n        return id.match(/^[0-9a-f]{16}$/) && id !== \"0000000000000000\";\r\n    };\r\n    Traceparent.prototype.toString = function () {\r\n        return this.version + \"-\" + this.traceId + \"-\" + this.spanId + \"-\" + this.traceFlag;\r\n    };\r\n    Traceparent.DEFAULT_TRACE_FLAG = \"01\";\r\n    Traceparent.DEFAULT_VERSION = \"00\";\r\n    return Traceparent;\r\n}());\r\nexport { Traceparent };\r\n//# sourceMappingURL=TraceParent.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { RequestHeaders, Util, CorrelationIdHelper, TelemetryItemCreator, RemoteDependencyData, DateTimeUtils, DisabledPropertyName, ConfigurationManager, PropertiesPluginIdentifier, DistributedTracingModes } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nimport { ajaxRecord } from './ajaxRecord';\r\nimport { EventHelper } from './ajaxUtils';\r\nimport { Traceparent } from './TraceParent';\r\nvar AjaxMonitor = /** @class */ (function () {\r\n    function AjaxMonitor() {\r\n        this.identifier = AjaxMonitor.identifier;\r\n        this.priority = 120;\r\n        this._trackAjaxAttempts = 0;\r\n        this.currentWindowHost = window && window.location && window.location.host && window.location.host.toLowerCase();\r\n        this.initialized = false;\r\n        this._fetchInitialized = false;\r\n    }\r\n    AjaxMonitor.getDefaultConfig = function () {\r\n        var config = {\r\n            maxAjaxCallsPerView: 500,\r\n            disableAjaxTracking: false,\r\n            disableFetchTracking: true,\r\n            disableCorrelationHeaders: false,\r\n            distributedTracingMode: DistributedTracingModes.AI,\r\n            correlationHeaderExcludedDomains: [\r\n                \"*.blob.core.windows.net\",\r\n                \"*.blob.core.chinacloudapi.cn\",\r\n                \"*.blob.core.cloudapi.de\",\r\n                \"*.blob.core.usgovcloudapi.net\"\r\n            ],\r\n            correlationHeaderDomains: undefined,\r\n            appId: undefined,\r\n            enableCorsCorrelation: false,\r\n            enableRequestHeaderTracking: false,\r\n            enableResponseHeaderTracking: false\r\n        };\r\n        return config;\r\n    };\r\n    AjaxMonitor.getEmptyConfig = function () {\r\n        return {\r\n            maxAjaxCallsPerView: undefined,\r\n            disableAjaxTracking: undefined,\r\n            disableFetchTracking: undefined,\r\n            disableCorrelationHeaders: undefined,\r\n            distributedTracingMode: undefined,\r\n            correlationHeaderExcludedDomains: undefined,\r\n            appId: undefined,\r\n            enableCorsCorrelation: undefined,\r\n            correlationHeaderDomains: undefined,\r\n            enableRequestHeaderTracking: undefined,\r\n            enableResponseHeaderTracking: undefined\r\n        };\r\n    };\r\n    AjaxMonitor.getFailedAjaxDiagnosticsMessage = function (xhr) {\r\n        var result = \"\";\r\n        try {\r\n            if (!CoreUtils.isNullOrUndefined(xhr) &&\r\n                !CoreUtils.isNullOrUndefined(xhr.ajaxData) &&\r\n                !CoreUtils.isNullOrUndefined(xhr.ajaxData.requestUrl)) {\r\n                result += \"(url: '\" + xhr.ajaxData.requestUrl + \"')\";\r\n            }\r\n        }\r\n        catch (e) { }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.trackDependencyData = function (dependency, properties) {\r\n        this.trackDependencyDataInternal(dependency, properties);\r\n    };\r\n    AjaxMonitor.prototype.processTelemetry = function (item) {\r\n        if (this._nextPlugin && this._nextPlugin.processTelemetry) {\r\n            this._nextPlugin.processTelemetry(item);\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.setNextPlugin = function (next) {\r\n        if (next) {\r\n            this._nextPlugin = next;\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.includeCorrelationHeaders = function (ajaxData, input, init, xhr) {\r\n        if (input) {\r\n            if (CorrelationIdHelper.canIncludeCorrelationHeader(this._config, ajaxData.getAbsoluteUrl(), this.currentWindowHost)) {\r\n                if (!init) {\r\n                    init = {};\r\n                }\r\n                // init headers override original request headers\r\n                // so, if they exist use only them, otherwise use request's because they should have been applied in the first place\r\n                // not using original request headers will result in them being lost\r\n                init.headers = new Headers(init.headers || (input instanceof Request ? (input.headers || {}) : {}));\r\n                if (this._isUsingAIHeaders) {\r\n                    var id = \"|\" + ajaxData.traceID + \".\" + ajaxData.spanID;\r\n                    init.headers.set(RequestHeaders.requestIdHeader, id);\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        ajaxData.requestHeaders[RequestHeaders.requestIdHeader] = id;\r\n                    }\r\n                }\r\n                var appId = this._config.appId || this._context.appId();\r\n                if (appId) {\r\n                    init.headers.set(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId);\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        ajaxData.requestHeaders[RequestHeaders.requestContextHeader] = RequestHeaders.requestContextAppIdFormat + appId;\r\n                    }\r\n                }\r\n                if (this._isUsingW3CHeaders) {\r\n                    var traceparent = new Traceparent(ajaxData.traceID, ajaxData.spanID);\r\n                    init.headers.set(RequestHeaders.traceParentHeader, traceparent.toString());\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        ajaxData.requestHeaders[RequestHeaders.traceParentHeader] = traceparent.toString();\r\n                    }\r\n                }\r\n                return init;\r\n            }\r\n            return init;\r\n        }\r\n        else if (xhr) {\r\n            if (this.currentWindowHost && CorrelationIdHelper.canIncludeCorrelationHeader(this._config, xhr.ajaxData.getAbsoluteUrl(), this.currentWindowHost)) {\r\n                if (this._isUsingAIHeaders) {\r\n                    var id = \"|\" + xhr.ajaxData.traceID + \".\" + xhr.ajaxData.spanID;\r\n                    xhr.setRequestHeader(RequestHeaders.requestIdHeader, id);\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        xhr.ajaxData.requestHeaders[RequestHeaders.requestIdHeader] = id;\r\n                    }\r\n                }\r\n                var appId = this._config.appId || this._context.appId();\r\n                if (appId) {\r\n                    xhr.setRequestHeader(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId);\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        xhr.ajaxData.requestHeaders[RequestHeaders.requestContextHeader] = RequestHeaders.requestContextAppIdFormat + appId;\r\n                    }\r\n                }\r\n                if (this._isUsingW3CHeaders) {\r\n                    var traceparent = new Traceparent(xhr.ajaxData.traceID, xhr.ajaxData.spanID);\r\n                    xhr.setRequestHeader(RequestHeaders.traceParentHeader, traceparent.toString());\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        xhr.ajaxData.requestHeaders[RequestHeaders.traceParentHeader] = traceparent.toString();\r\n                    }\r\n                }\r\n            }\r\n            return xhr;\r\n        }\r\n        return undefined;\r\n    };\r\n    AjaxMonitor.prototype.initialize = function (config, core, extensions) {\r\n        if (!this.initialized && !this._fetchInitialized) {\r\n            this._core = core;\r\n            var defaultConfig = AjaxMonitor.getDefaultConfig();\r\n            this._config = AjaxMonitor.getEmptyConfig();\r\n            for (var field in defaultConfig) {\r\n                this._config[field] = ConfigurationManager.getConfig(config, field, AjaxMonitor.identifier, defaultConfig[field]);\r\n            }\r\n            this._isUsingAIHeaders = this._config.distributedTracingMode === DistributedTracingModes.AI || this._config.distributedTracingMode === DistributedTracingModes.AI_AND_W3C;\r\n            this._isUsingW3CHeaders = this._config.distributedTracingMode === DistributedTracingModes.AI_AND_W3C || this._config.distributedTracingMode === DistributedTracingModes.W3C;\r\n            if (this._config.disableAjaxTracking === false) {\r\n                this.instrumentXhr();\r\n            }\r\n            if (this._config.disableFetchTracking === false) {\r\n                this.instrumentFetch();\r\n            }\r\n            if (extensions.length > 0 && extensions) {\r\n                var propExt = void 0, extIx = 0;\r\n                while (!propExt && extIx < extensions.length) {\r\n                    if (extensions[extIx] && extensions[extIx].identifier === PropertiesPluginIdentifier) {\r\n                        propExt = extensions[extIx];\r\n                    }\r\n                    extIx++;\r\n                }\r\n                if (propExt) {\r\n                    this._context = propExt.context; // we could move IPropertiesPlugin to common as well\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Logs dependency call\r\n     * @param dependencyData dependency data object\r\n     */\r\n    AjaxMonitor.prototype.trackDependencyDataInternal = function (dependency, properties, systemProperties) {\r\n        if (this._config.maxAjaxCallsPerView === -1 || this._trackAjaxAttempts < this._config.maxAjaxCallsPerView) {\r\n            var item = TelemetryItemCreator.create(dependency, RemoteDependencyData.dataType, RemoteDependencyData.envelopeType, this._core.logger, properties, systemProperties);\r\n            this._core.track(item);\r\n        }\r\n        else if (this._trackAjaxAttempts === this._config.maxAjaxCallsPerView) {\r\n            this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MaxAjaxPerPVExceeded, \"Maximum ajax per page view limit reached, ajax monitoring is paused until the next trackPageView(). In order to increase the limit set the maxAjaxCallsPerView configuration parameter.\", true);\r\n        }\r\n        ++this._trackAjaxAttempts;\r\n    };\r\n    // Fetch Stuff\r\n    AjaxMonitor.prototype.instrumentFetch = function () {\r\n        if (!this.supportsFetch() || this._fetchInitialized) {\r\n            return;\r\n        }\r\n        var originalFetch = window.fetch;\r\n        var fetchMonitorInstance = this;\r\n        window.fetch = function fetch(input, init) {\r\n            var fetchData;\r\n            if (fetchMonitorInstance.isFetchInstrumented(input) && fetchMonitorInstance.isMonitoredInstance(undefined, undefined, input, init)) {\r\n                try {\r\n                    fetchData = fetchMonitorInstance.createFetchRecord(input, init);\r\n                    init = fetchMonitorInstance.includeCorrelationHeaders(fetchData, input, init);\r\n                }\r\n                catch (e) {\r\n                    fetchMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to monitor Window.fetch, monitoring data for this fetch call may be incorrect.\", {\r\n                        ajaxDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                        exception: Util.dump(e)\r\n                    });\r\n                }\r\n            }\r\n            return originalFetch(input, init)\r\n                .then(function (response) {\r\n                fetchMonitorInstance.onFetchComplete(response, fetchData);\r\n                return response;\r\n            })\r\n                .catch(function (reason) {\r\n                fetchMonitorInstance.onFetchFailed(input, fetchData, reason);\r\n                throw reason;\r\n            });\r\n        };\r\n        this._fetchInitialized = true;\r\n    };\r\n    AjaxMonitor.prototype.instrumentXhr = function () {\r\n        if (this.supportsAjaxMonitoring() && !this.initialized) {\r\n            this.instrumentOpen();\r\n            this.instrumentSend();\r\n            this.instrumentAbort();\r\n            this.instrumentSetRequestHeader();\r\n            this.initialized = true;\r\n        }\r\n    };\r\n    /// <summary>Verifies that particalar instance of XMLHttpRequest needs to be monitored</summary>\r\n    /// <param name=\"excludeAjaxDataValidation\">Optional parameter. True if ajaxData must be excluded from verification</param>\r\n    /// <returns type=\"bool\">True if instance needs to be monitored, otherwise false</returns>\r\n    AjaxMonitor.prototype.isMonitoredInstance = function (xhr, excludeAjaxDataValidation, request, init) {\r\n        var disabledProperty = false;\r\n        var ajaxValidation = true;\r\n        var initialized = false;\r\n        if (typeof request !== 'undefined') {\r\n            initialized = this._fetchInitialized;\r\n            // Look for DisabledPropertyName in either Request or RequestInit\r\n            disabledProperty = (typeof request === 'object' ? request[DisabledPropertyName] === true : false) ||\r\n                (init ? init[DisabledPropertyName] === true : false);\r\n        }\r\n        else if (typeof xhr !== 'undefined') {\r\n            initialized = this.initialized;\r\n            disabledProperty = xhr[DisabledPropertyName] === true;\r\n            ajaxValidation = excludeAjaxDataValidation === true || !CoreUtils.isNullOrUndefined(xhr.ajaxData);\r\n        }\r\n        // checking to see that all interested functions on xhr were instrumented\r\n        return initialized\r\n            // checking on ajaxData to see that it was not removed in user code\r\n            && ajaxValidation\r\n            // check that this instance is not not used by ajax call performed inside client side monitoring to send data to collector\r\n            && !disabledProperty;\r\n    };\r\n    /// <summary>Determines whether ajax monitoring can be enabled on this document</summary>\r\n    /// <returns>True if Ajax monitoring is supported on this page, otherwise false</returns>\r\n    AjaxMonitor.prototype.supportsAjaxMonitoring = function () {\r\n        var result = true;\r\n        if (CoreUtils.isNullOrUndefined(XMLHttpRequest) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.open) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.send) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.abort)) {\r\n            result = false;\r\n        }\r\n        // disable in IE8 or older (https://www.w3schools.com/jsref/jsref_trim_string.asp)\r\n        try {\r\n            \" a \".trim();\r\n        }\r\n        catch (ex) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.instrumentOpen = function () {\r\n        var originalOpen = XMLHttpRequest.prototype.open;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.open = function (method, url, async) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this, true) &&\r\n                    (!this.ajaxData ||\r\n                        !this.ajaxData.xhrMonitoringState.openDone)) {\r\n                    ajaxMonitorInstance.openHandler(this, method, url, async);\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to monitor XMLHttpRequest.open, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalOpen.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.openHandler = function (xhr, method, url, async) {\r\n        var traceID = (this._context && this._context.telemetryTrace && this._context.telemetryTrace.traceID) || Util.generateW3CId();\r\n        var spanID = Util.generateW3CId().substr(0, 16);\r\n        var ajaxData = new ajaxRecord(traceID, spanID, this._core.logger);\r\n        ajaxData.method = method;\r\n        ajaxData.requestUrl = url;\r\n        ajaxData.xhrMonitoringState.openDone = true;\r\n        ajaxData.requestHeaders = {};\r\n        xhr.ajaxData = ajaxData;\r\n        this.attachToOnReadyStateChange(xhr);\r\n    };\r\n    AjaxMonitor.prototype.instrumentSend = function () {\r\n        var originalSend = XMLHttpRequest.prototype.send;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.send = function (content) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this) && !this.ajaxData.xhrMonitoringState.sendDone) {\r\n                    ajaxMonitorInstance.sendHandler(this, content);\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxSend, \"Failed to monitor XMLHttpRequest, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalSend.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.sendHandler = function (xhr, content) {\r\n        xhr.ajaxData.requestSentTime = DateTimeUtils.Now();\r\n        xhr = this.includeCorrelationHeaders(xhr.ajaxData, undefined, undefined, xhr);\r\n        xhr.ajaxData.xhrMonitoringState.sendDone = true;\r\n    };\r\n    AjaxMonitor.prototype.instrumentAbort = function () {\r\n        var originalAbort = XMLHttpRequest.prototype.abort;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.abort = function () {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this) && !this.ajaxData.xhrMonitoringState.abortDone) {\r\n                    this.ajaxData.aborted = 1;\r\n                    this.ajaxData.xhrMonitoringState.abortDone = true;\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxAbort, \"Failed to monitor XMLHttpRequest.abort, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalAbort.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.instrumentSetRequestHeader = function () {\r\n        if (!this._config.enableRequestHeaderTracking) {\r\n            return;\r\n        }\r\n        var originalSetRequestHeader = XMLHttpRequest.prototype.setRequestHeader;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.setRequestHeader = function (header, value) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this)) {\r\n                    this.ajaxData.requestHeaders[header] = value;\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxSetRequestHeader, \"Failed to monitor XMLHttpRequest.setRequestHeader, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalSetRequestHeader.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.attachToOnReadyStateChange = function (xhr) {\r\n        var ajaxMonitorInstance = this;\r\n        xhr.ajaxData.xhrMonitoringState.onreadystatechangeCallbackAttached = EventHelper.AttachEvent(xhr, \"readystatechange\", function () {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(xhr)) {\r\n                    if (xhr.readyState === 4) {\r\n                        ajaxMonitorInstance.onAjaxComplete(xhr);\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                var exceptionText = Util.dump(e);\r\n                // ignore messages with c00c023f, as this a known IE9 XHR abort issue\r\n                if (!exceptionText || exceptionText.toLowerCase().indexOf(\"c00c023f\") === -1) {\r\n                    ajaxMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxRSC, \"Failed to monitor XMLHttpRequest 'readystatechange' event handler, monitoring data for this ajax call may be incorrect.\", {\r\n                        ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                        exception: Util.dump(e)\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    AjaxMonitor.prototype.onAjaxComplete = function (xhr) {\r\n        xhr.ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n        xhr.ajaxData.status = xhr.status;\r\n        xhr.ajaxData.CalculateMetrics();\r\n        if (xhr.ajaxData.ajaxTotalDuration < 0) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the ajax call, monitoring data for this ajax call won't be sent.\", {\r\n                ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                requestSentTime: xhr.ajaxData.requestSentTime,\r\n                responseFinishedTime: xhr.ajaxData.responseFinishedTime\r\n            });\r\n        }\r\n        else {\r\n            var dependency = {\r\n                id: \"|\" + xhr.ajaxData.traceID + \".\" + xhr.ajaxData.spanID,\r\n                target: xhr.ajaxData.getAbsoluteUrl(),\r\n                name: xhr.ajaxData.getPathName(),\r\n                type: \"Ajax\",\r\n                duration: xhr.ajaxData.ajaxTotalDuration,\r\n                success: (+(xhr.ajaxData.status)) >= 200 && (+(xhr.ajaxData.status)) < 400,\r\n                responseCode: +xhr.ajaxData.status,\r\n                method: xhr.ajaxData.method\r\n            };\r\n            // enrich dependency target with correlation context from the server\r\n            var correlationContext = this.getAjaxCorrelationContext(xhr);\r\n            if (correlationContext) {\r\n                dependency.correlationContext = /* dependency.target + \" | \" + */ correlationContext;\r\n            }\r\n            if (this._config.enableRequestHeaderTracking) {\r\n                if (Object.keys(xhr.ajaxData.requestHeaders).length > 0) {\r\n                    dependency.properties = dependency.properties || {};\r\n                    dependency.properties.requestHeaders = {};\r\n                    dependency.properties.requestHeaders = xhr.ajaxData.requestHeaders;\r\n                }\r\n            }\r\n            if (this._config.enableResponseHeaderTracking) {\r\n                var headers = xhr.getAllResponseHeaders();\r\n                if (headers) {\r\n                    // xhr.getAllResponseHeaders() method returns all the response headers, separated by CRLF, as a string or null\r\n                    // the regex converts the header string into an array of individual headers\r\n                    var arr = headers.trim().split(/[\\r\\n]+/);\r\n                    var responseHeaderMap_1 = {};\r\n                    arr.forEach(function (line) {\r\n                        var parts = line.split(': ');\r\n                        var header = parts.shift();\r\n                        var value = parts.join(': ');\r\n                        responseHeaderMap_1[header] = value;\r\n                    });\r\n                    if (Object.keys(responseHeaderMap_1).length > 0) {\r\n                        dependency.properties = dependency.properties || {};\r\n                        dependency.properties.responseHeaders = {};\r\n                        dependency.properties.responseHeaders = responseHeaderMap_1;\r\n                    }\r\n                }\r\n            }\r\n            this.trackDependencyDataInternal(dependency);\r\n            xhr.ajaxData = null;\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.getAjaxCorrelationContext = function (xhr) {\r\n        try {\r\n            var responseHeadersString = xhr.getAllResponseHeaders();\r\n            if (responseHeadersString !== null) {\r\n                var index = responseHeadersString.toLowerCase().indexOf(RequestHeaders.requestContextHeaderLowerCase);\r\n                if (index !== -1) {\r\n                    var responseHeader = xhr.getResponseHeader(RequestHeaders.requestContextHeader);\r\n                    return CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\", {\r\n                ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.isFetchInstrumented = function (input) {\r\n        return this._fetchInitialized && input[DisabledPropertyName] !== true;\r\n    };\r\n    AjaxMonitor.prototype.supportsFetch = function () {\r\n        var result = true;\r\n        if (!window || CoreUtils.isNullOrUndefined(window.Request) ||\r\n            CoreUtils.isNullOrUndefined(window.Request.prototype) ||\r\n            CoreUtils.isNullOrUndefined(window.fetch)) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.createFetchRecord = function (input, init) {\r\n        var traceID = (this._context && this._context.telemetryTrace && this._context.telemetryTrace.traceID) || Util.generateW3CId();\r\n        var spanID = Util.generateW3CId().substr(0, 16);\r\n        var ajaxData = new ajaxRecord(traceID, spanID, this._core.logger);\r\n        ajaxData.requestSentTime = DateTimeUtils.Now();\r\n        if (input instanceof Request) {\r\n            ajaxData.requestUrl = input ? input.url : \"\";\r\n        }\r\n        else {\r\n            ajaxData.requestUrl = input;\r\n        }\r\n        if (init && init.method) {\r\n            ajaxData.method = init.method;\r\n        }\r\n        else if (input && input instanceof Request) {\r\n            ajaxData.method = input.method;\r\n        }\r\n        else {\r\n            ajaxData.method = \"GET\";\r\n        }\r\n        if (init && init.headers && this._config.enableRequestHeaderTracking) {\r\n            ajaxData.requestHeaders = init.headers;\r\n        }\r\n        else {\r\n            ajaxData.requestHeaders = {};\r\n        }\r\n        return ajaxData;\r\n    };\r\n    AjaxMonitor.prototype.getFailedFetchDiagnosticsMessage = function (input) {\r\n        var result = \"\";\r\n        try {\r\n            if (!CoreUtils.isNullOrUndefined(input)) {\r\n                if (typeof (input) === \"string\") {\r\n                    result += \"(url: '\" + input + \"')\";\r\n                }\r\n                else {\r\n                    result += \"(url: '\" + input.url + \"')\";\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to grab failed fetch diagnostics message\", { exception: Util.dump(e) });\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.onFetchComplete = function (response, ajaxData) {\r\n        if (!ajaxData) {\r\n            return;\r\n        }\r\n        try {\r\n            ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n            ajaxData.CalculateMetrics();\r\n            if (ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                    requestSentTime: ajaxData.requestSentTime,\r\n                    responseFinishedTime: ajaxData.responseFinishedTime\r\n                });\r\n            }\r\n            else {\r\n                var dependency = {\r\n                    id: \"|\" + ajaxData.traceID + \".\" + ajaxData.spanID,\r\n                    target: ajaxData.getAbsoluteUrl(),\r\n                    name: ajaxData.getPathName(),\r\n                    type: \"Fetch\",\r\n                    duration: ajaxData.ajaxTotalDuration,\r\n                    success: response.status >= 200 && response.status < 400,\r\n                    responseCode: response.status,\r\n                    properties: { HttpMethod: ajaxData.method }\r\n                };\r\n                // enrich dependency target with correlation context from the server\r\n                var correlationContext = this.getFetchCorrelationContext(response);\r\n                if (correlationContext) {\r\n                    dependency.correlationContext = correlationContext;\r\n                }\r\n                if (this._config.enableRequestHeaderTracking) {\r\n                    if (Object.keys(ajaxData.requestHeaders).length > 0) {\r\n                        dependency.properties = dependency.properties || {};\r\n                        dependency.properties.requestHeaders = ajaxData.requestHeaders;\r\n                    }\r\n                }\r\n                if (this._config.enableResponseHeaderTracking) {\r\n                    var responseHeaderMap_2 = {};\r\n                    response.headers.forEach(function (value, name) {\r\n                        responseHeaderMap_2[name] = value;\r\n                    });\r\n                    if (Object.keys(responseHeaderMap_2).length > 0) {\r\n                        dependency.properties = dependency.properties || {};\r\n                        dependency.properties.responseHeaders = responseHeaderMap_2;\r\n                    }\r\n                }\r\n                this.trackDependencyDataInternal(dependency);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to calculate the duration of the fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.onFetchFailed = function (input, ajaxData, reason) {\r\n        if (!ajaxData) {\r\n            return;\r\n        }\r\n        try {\r\n            ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n            ajaxData.CalculateMetrics();\r\n            if (ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the failed fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                    requestSentTime: ajaxData.requestSentTime,\r\n                    responseFinishedTime: ajaxData.responseFinishedTime\r\n                });\r\n            }\r\n            else {\r\n                var dependency = {\r\n                    id: \"|\" + ajaxData.traceID + \".\" + ajaxData.spanID,\r\n                    target: ajaxData.getAbsoluteUrl(),\r\n                    name: ajaxData.getPathName(),\r\n                    type: \"Fetch\",\r\n                    duration: ajaxData.ajaxTotalDuration,\r\n                    success: false,\r\n                    responseCode: 0,\r\n                    properties: { HttpMethod: ajaxData.method }\r\n                };\r\n                this.trackDependencyDataInternal(dependency, { error: reason.message });\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to calculate the duration of the failed fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.getFetchCorrelationContext = function (response) {\r\n        try {\r\n            var responseHeader = response.headers.get(RequestHeaders.requestContextHeader);\r\n            return CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.identifier = \"AjaxDependencyPlugin\";\r\n    return AjaxMonitor;\r\n}());\r\nexport { AjaxMonitor };\r\n//# sourceMappingURL=ajax.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { AppInsightsCore, LoggingSeverity, _InternalMessageId } from \"@microsoft/applicationinsights-core-js\";\r\nimport { ApplicationInsights } from \"@microsoft/applicationinsights-analytics-js\";\r\nimport { Util, PropertiesPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\nimport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\nimport { PropertiesPlugin } from \"@microsoft/applicationinsights-properties-js\";\r\nimport { AjaxPlugin as DependenciesPlugin } from '@microsoft/applicationinsights-dependencies-js';\r\n\"use strict\";\r\n;\r\n/**\r\n * Application Insights API\r\n * @class Initialization\r\n * @implements {IApplicationInsights}\r\n */\r\nvar Initialization = /** @class */ (function () {\r\n    function Initialization(snippet) {\r\n        // initialize the queue and config in case they are undefined\r\n        snippet.queue = snippet.queue || [];\r\n        snippet.version = snippet.version || 2.0; // Default to new version\r\n        var config = snippet.config || {};\r\n        // ensure instrumentationKey is specified\r\n        if (config && !config.instrumentationKey) {\r\n            config = snippet;\r\n            ApplicationInsights.Version = \"2.2.3\"; // Not currently used anywhere\r\n        }\r\n        this.appInsights = new ApplicationInsights();\r\n        this.properties = new PropertiesPlugin();\r\n        this.dependencies = new DependenciesPlugin();\r\n        this.core = new AppInsightsCore();\r\n        this.snippet = snippet;\r\n        this.config = config;\r\n        this.getSKUDefaults();\r\n    }\r\n    // Analytics Plugin\r\n    /**\r\n     * Log a user action or other occurrence.\r\n     * @param {IEventTelemetry} event\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackEvent = function (event, customProperties) {\r\n        this.appInsights.trackEvent(event, customProperties);\r\n    };\r\n    /**\r\n     * Logs that a page, or similar container was displayed to the user.\r\n     * @param {IPageViewTelemetry} pageView\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackPageView = function (pageView) {\r\n        var inPv = pageView || {};\r\n        this.appInsights.trackPageView(inPv);\r\n    };\r\n    /**\r\n     * Log a bag of performance information via the customProperties field.\r\n     * @param {IPageViewPerformanceTelemetry} pageViewPerformance\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackPageViewPerformance = function (pageViewPerformance) {\r\n        var inPvp = pageViewPerformance || {};\r\n        this.appInsights.trackPageViewPerformance(inPvp);\r\n    };\r\n    /**\r\n     * Log an exception that you have caught.\r\n     * @param {IExceptionTelemetry} exception\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackException = function (exception) {\r\n        if (!exception.exception && exception.error) {\r\n            exception.exception = exception.error;\r\n        }\r\n        this.appInsights.trackException(exception);\r\n    };\r\n    /**\r\n     * Manually send uncaught exception telemetry. This method is automatically triggered\r\n     * on a window.onerror event.\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype._onerror = function (exception) {\r\n        this.appInsights._onerror(exception);\r\n    };\r\n    /**\r\n     * Log a diagnostic scenario such entering or leaving a function.\r\n     * @param {ITraceTelemetry} trace\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackTrace = function (trace, customProperties) {\r\n        this.appInsights.trackTrace(trace, customProperties);\r\n    };\r\n    /**\r\n     * Log a numeric value that is not associated with a specific event. Typically used\r\n     * to send regular reports of performance indicators.\r\n     *\r\n     * To send a single measurement, just use the `name` and `average` fields\r\n     * of {@link IMetricTelemetry}.\r\n     *\r\n     * If you take measurements frequently, you can reduce the telemetry bandwidth by\r\n     * aggregating multiple measurements and sending the resulting average and modifying\r\n     * the `sampleCount` field of {@link IMetricTelemetry}.\r\n     * @param {IMetricTelemetry} metric input object argument. Only `name` and `average` are mandatory.\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackMetric = function (metric, customProperties) {\r\n        this.appInsights.trackMetric(metric, customProperties);\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    Initialization.prototype.startTrackPage = function (name) {\r\n        this.appInsights.startTrackPage(name);\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    Initialization.prototype.stopTrackPage = function (name, url, customProperties, measurements) {\r\n        this.appInsights.stopTrackPage(name, url, customProperties, measurements);\r\n    };\r\n    Initialization.prototype.startTrackEvent = function (name) {\r\n        this.appInsights.startTrackEvent(name);\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    Initialization.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        this.appInsights.stopTrackEvent(name, properties, measurements); // Todo: Fix to pass measurements once type is updated\r\n    };\r\n    Initialization.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        return this.appInsights.addTelemetryInitializer(telemetryInitializer);\r\n    };\r\n    // Properties Plugin\r\n    /**\r\n     * Set the authenticated user id and the account id. Used for identifying a specific signed-in user. Parameters must not contain whitespace or ,;=|\r\n     *\r\n     * The method will only set the `authenicatedUserId` and `accountId` in the curent page view. To set them for the whole sesion, you should set `storeInCookie = true`\r\n     * @param {string} authenticatedUserId\r\n     * @param {string} [accountId]\r\n     * @param {boolean} [storeInCookie=false]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        this.properties.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and account id. The associated cookie is cleared, if present.\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.clearAuthenticatedUserContext = function () {\r\n        this.properties.context.user.clearAuthenticatedUserContext();\r\n    };\r\n    // Dependencies Plugin\r\n    /**\r\n     * Log a dependency call (e.g. ajax)\r\n     * @param {IDependencyTelemetry} dependency\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackDependencyData = function (dependency) {\r\n        this.dependencies.trackDependencyData(dependency);\r\n    };\r\n    // Misc\r\n    /**\r\n     * Manually trigger an immediate send of all telemetry still in the buffer.\r\n     * @param {boolean} [async=true]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.flush = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        this.core.getTransmissionControls().forEach(function (channels) {\r\n            channels.forEach(function (channel) {\r\n                channel.flush(async);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Manually trigger an immediate send of all telemetry still in the buffer using beacon Sender.\r\n     * Fall back to xhr sender if beacon is not supported.\r\n     * @param {boolean} [async=true]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.onunloadFlush = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        this.core.getTransmissionControls().forEach(function (channels) {\r\n            channels.forEach(function (channel) {\r\n                if (channel.onunloadFlush) {\r\n                    channel.onunloadFlush();\r\n                }\r\n                else {\r\n                    channel.flush(async);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Initialize this instance of ApplicationInsights\r\n     * @returns {IApplicationInsights}\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.loadAppInsights = function (legacyMode) {\r\n        if (legacyMode === void 0) { legacyMode = false; }\r\n        // dont allow additional channels/other extensions for legacy mode; legacy mode is only to allow users to switch with no code changes!\r\n        if (legacyMode && this.config.extensions && this.config.extensions.length > 0) {\r\n            throw new Error(\"Extensions not allowed in legacy mode\");\r\n        }\r\n        var extensions = [];\r\n        var appInsightsChannel = new Sender();\r\n        extensions.push(appInsightsChannel);\r\n        extensions.push(this.properties);\r\n        extensions.push(this.dependencies);\r\n        extensions.push(this.appInsights);\r\n        // initialize core\r\n        this.core.initialize(this.config, extensions);\r\n        // Empty queue of all api calls logged prior to sdk download\r\n        this.emptyQueue();\r\n        this.pollInternalLogs();\r\n        this.addHousekeepingBeforeUnload(this);\r\n        this.context = this.properties.context;\r\n        return this;\r\n    };\r\n    /**\r\n     * Overwrite the lazy loaded fields of global window snippet to contain the\r\n     * actual initialized API methods\r\n     * @param {Snippet} snippet\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.updateSnippetDefinitions = function (snippet) {\r\n        // apply full appInsights to the global instance\r\n        // Note: This must be called before loadAppInsights is called\r\n        for (var field in this) {\r\n            if (typeof field === 'string') {\r\n                snippet[field] = this[field];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Call any functions that were queued before the main script was loaded\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.emptyQueue = function () {\r\n        // call functions that were queued before the main script was loaded\r\n        try {\r\n            if (Util.isArray(this.snippet.queue)) {\r\n                // note: do not check length in the for-loop conditional in case something goes wrong and the stub methods are not overridden.\r\n                var length_1 = this.snippet.queue.length;\r\n                for (var i = 0; i < length_1; i++) {\r\n                    var call = this.snippet.queue[i];\r\n                    call();\r\n                }\r\n                this.snippet.queue = undefined;\r\n                delete this.snippet.queue;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            var properties = {};\r\n            if (exception && typeof exception.toString === \"function\") {\r\n                properties.exception = exception.toString();\r\n            }\r\n            // need from core\r\n            // Microsoft.ApplicationInsights._InternalLogging.throwInternal(\r\n            //     LoggingSeverity.WARNING,\r\n            //     _InternalMessageId.FailedToSendQueuedTelemetry,\r\n            //     \"Failed to send queued telemetry\",\r\n            //     properties);\r\n        }\r\n    };\r\n    Initialization.prototype.pollInternalLogs = function () {\r\n        this.core.pollInternalLogs();\r\n    };\r\n    Initialization.prototype.addHousekeepingBeforeUnload = function (appInsightsInstance) {\r\n        // Add callback to push events when the user navigates away\r\n        if (!appInsightsInstance.appInsights.config.disableFlushOnBeforeUnload && ('onbeforeunload' in window)) {\r\n            var performHousekeeping = function () {\r\n                // Adds the ability to flush all data before the page unloads.\r\n                // Note: This approach tries to push an async request with all the pending events onbeforeunload.\r\n                // Firefox does not respect this.Other browsers DO push out the call with < 100% hit rate.\r\n                // Telemetry here will help us analyze how effective this approach is.\r\n                // Another approach would be to make this call sync with a acceptable timeout to reduce the\r\n                // impact on user experience.\r\n                // appInsightsInstance.context._sender.triggerSend();\r\n                appInsightsInstance.onunloadFlush(false);\r\n                // Back up the current session to local storage\r\n                // This lets us close expired sessions after the cookies themselves expire\r\n                var ext = appInsightsInstance.appInsights.core['_extensions'][PropertiesPluginIdentifier];\r\n                if (ext && ext.context && ext.context._sessionManager) {\r\n                    ext.context._sessionManager.backup();\r\n                }\r\n            };\r\n            if (!Util.addEventHandler('beforeunload', performHousekeeping)) {\r\n                appInsightsInstance.appInsights.core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToAddHandlerForOnBeforeUnload, 'Could not add handler for beforeunload');\r\n            }\r\n        }\r\n    };\r\n    Initialization.prototype.getSKUDefaults = function () {\r\n        this.config.diagnosticLogInterval =\r\n            this.config.diagnosticLogInterval && this.config.diagnosticLogInterval > 0 ? this.config.diagnosticLogInterval : 10000;\r\n    };\r\n    return Initialization;\r\n}());\r\nexport { Initialization };\r\n//# sourceMappingURL=Initialization.js.map","import { Util, ProcessLegacy } from \"@microsoft/applicationinsights-common\";\r\n// ToDo: fix properties and measurements once updates are done to common\r\nvar AppInsightsDeprecated = /** @class */ (function () {\r\n    function AppInsightsDeprecated(snippet, appInsightsNew) {\r\n        this._hasLegacyInitializers = false;\r\n        this._queue = [];\r\n        this.config = AppInsightsDeprecated.getDefaultConfig(snippet.config);\r\n        this.appInsightsNew = appInsightsNew;\r\n        this.context = { addTelemetryInitializer: this.addTelemetryInitializers.bind(this) };\r\n    }\r\n    AppInsightsDeprecated.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.endpointUrl = config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\";\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.maxBatchSizeInBytes = config.maxBatchSizeInBytes > 0 ? config.maxBatchSizeInBytes : 102400; // 100kb\r\n        config.maxBatchInterval = !isNaN(config.maxBatchInterval) ? config.maxBatchInterval : 15000;\r\n        config.enableDebug = Util.stringToBoolOrDefault(config.enableDebug);\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.disableTelemetry = Util.stringToBoolOrDefault(config.disableTelemetry);\r\n        config.verboseLogging = Util.stringToBoolOrDefault(config.verboseLogging);\r\n        config.emitLineDelimitedJson = Util.stringToBoolOrDefault(config.emitLineDelimitedJson);\r\n        config.diagnosticLogInterval = config.diagnosticLogInterval || 10000;\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.disableAjaxTracking = Util.stringToBoolOrDefault(config.disableAjaxTracking);\r\n        config.maxAjaxCallsPerView = !isNaN(config.maxAjaxCallsPerView) ? config.maxAjaxCallsPerView : 500;\r\n        config.isBeaconApiDisabled = Util.stringToBoolOrDefault(config.isBeaconApiDisabled, true);\r\n        config.disableCorrelationHeaders = Util.stringToBoolOrDefault(config.disableCorrelationHeaders);\r\n        config.correlationHeaderExcludedDomains = config.correlationHeaderExcludedDomains || [\r\n            \"*.blob.core.windows.net\",\r\n            \"*.blob.core.chinacloudapi.cn\",\r\n            \"*.blob.core.cloudapi.de\",\r\n            \"*.blob.core.usgovcloudapi.net\"\r\n        ];\r\n        config.disableFlushOnBeforeUnload = Util.stringToBoolOrDefault(config.disableFlushOnBeforeUnload);\r\n        config.enableSessionStorageBuffer = Util.stringToBoolOrDefault(config.enableSessionStorageBuffer, true);\r\n        config.isRetryDisabled = Util.stringToBoolOrDefault(config.isRetryDisabled);\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableCorsCorrelation = Util.stringToBoolOrDefault(config.enableCorsCorrelation);\r\n        return config;\r\n    };\r\n    /**\r\n     * The array of telemetry initializers to call before sending each telemetry item.\r\n     */\r\n    AppInsightsDeprecated.prototype.addTelemetryInitializers = function (callBack) {\r\n        var _this = this;\r\n        // Add initializer to current processing only if there is any old telemetry initializer\r\n        if (!this._hasLegacyInitializers) {\r\n            this.appInsightsNew.addTelemetryInitializer(function (item) {\r\n                _this._processLegacyInitializers(item); // setup call back for each legacy processor\r\n            });\r\n            this._hasLegacyInitializers = true;\r\n        }\r\n        this._queue.push(callBack);\r\n    };\r\n    AppInsightsDeprecated.prototype.startTrackPage = function (name) {\r\n        this.appInsightsNew.startTrackPage(name);\r\n    };\r\n    AppInsightsDeprecated.prototype.stopTrackPage = function (name, url, properties, measurements) {\r\n        this.appInsightsNew.stopTrackPage(name, url, properties); // update\r\n    };\r\n    AppInsightsDeprecated.prototype.trackPageView = function (name, url, properties, measurements, duration) {\r\n        var telemetry = {\r\n            name: name,\r\n            uri: url,\r\n            properties: properties,\r\n            measurements: measurements\r\n        };\r\n        // fix for props, measurements, duration\r\n        this.appInsightsNew.trackPageView(telemetry);\r\n    };\r\n    AppInsightsDeprecated.prototype.trackEvent = function (name, properties, measurements) {\r\n        this.appInsightsNew.trackEvent({ name: name });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackDependency = function (id, method, absoluteUrl, pathName, totalTime, success, resultCode) {\r\n        this.appInsightsNew.trackDependencyData({\r\n            id: id,\r\n            target: absoluteUrl,\r\n            type: pathName,\r\n            duration: totalTime,\r\n            properties: { HttpMethod: method },\r\n            success: success,\r\n            responseCode: resultCode\r\n        });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackException = function (exception, handledAt, properties, measurements, severityLevel) {\r\n        this.appInsightsNew.trackException({\r\n            exception: exception\r\n        });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackMetric = function (name, average, sampleCount, min, max, properties) {\r\n        this.appInsightsNew.trackMetric({ name: name, average: average, sampleCount: sampleCount, min: min, max: max });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackTrace = function (message, properties, severityLevel) {\r\n        this.appInsightsNew.trackTrace({ message: message, severityLevel: severityLevel });\r\n    };\r\n    AppInsightsDeprecated.prototype.flush = function (async) {\r\n        this.appInsightsNew.flush(async);\r\n    };\r\n    AppInsightsDeprecated.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        this.appInsightsNew.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    };\r\n    AppInsightsDeprecated.prototype.clearAuthenticatedUserContext = function () {\r\n        this.appInsightsNew.context.user.clearAuthenticatedUserContext();\r\n    };\r\n    AppInsightsDeprecated.prototype._onerror = function (message, url, lineNumber, columnNumber, error) {\r\n        this.appInsightsNew._onerror({ message: message, url: url, lineNumber: lineNumber, columnNumber: columnNumber, error: error });\r\n    };\r\n    AppInsightsDeprecated.prototype.startTrackEvent = function (name) {\r\n        this.appInsightsNew.startTrackEvent(name);\r\n    };\r\n    AppInsightsDeprecated.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        this.appInsightsNew.stopTrackEvent(name, properties, measurements);\r\n    };\r\n    AppInsightsDeprecated.prototype.downloadAndSetup = function (config) {\r\n        throw new Error(\"downloadAndSetup not implemented in web SKU\");\r\n    };\r\n    AppInsightsDeprecated.prototype.updateSnippetDefinitions = function (snippet) {\r\n        // apply full appInsights to the global instance\r\n        // Note: This must be called before loadAppInsights is called\r\n        for (var field in this) {\r\n            if (typeof field === 'string') {\r\n                snippet[field] = this[field];\r\n            }\r\n        }\r\n    };\r\n    // note: these are split into methods to enable unit tests\r\n    AppInsightsDeprecated.prototype.loadAppInsights = function () {\r\n        // initialize global instance of appInsights\r\n        // var appInsights = new Microsoft.ApplicationInsights.AppInsights(this.config);\r\n        var _this = this;\r\n        // implement legacy version of trackPageView for 0.10<\r\n        if (this.config[\"iKey\"]) {\r\n            var originalTrackPageView_1 = this.trackPageView;\r\n            this.trackPageView = function (pagePath, properties, measurements) {\r\n                originalTrackPageView_1.apply(_this, [null, pagePath, properties, measurements]);\r\n            };\r\n        }\r\n        // implement legacy pageView interface if it is present in the snippet\r\n        var legacyPageView = \"logPageView\";\r\n        if (typeof this.snippet[legacyPageView] === \"function\") {\r\n            this[legacyPageView] = function (pagePath, properties, measurements) {\r\n                _this.trackPageView(null, pagePath, properties, measurements);\r\n            };\r\n        }\r\n        // implement legacy event interface if it is present in the snippet\r\n        var legacyEvent = \"logEvent\";\r\n        if (typeof this.snippet[legacyEvent] === \"function\") {\r\n            this[legacyEvent] = function (name, props, measurements) {\r\n                _this.trackEvent(name, props, measurements);\r\n            };\r\n        }\r\n        return this;\r\n    };\r\n    AppInsightsDeprecated.prototype._processLegacyInitializers = function (item) {\r\n        // instead of mapping new to legacy and then back again and repeating in channel, attach callback for channel to call\r\n        item.tags[ProcessLegacy] = this._queue;\r\n        return item;\r\n    };\r\n    return AppInsightsDeprecated;\r\n}());\r\nexport { AppInsightsDeprecated };\r\n//# sourceMappingURL=ApplicationInsightsDeprecated.js.map","import { AppInsightsDeprecated } from \"./ApplicationInsightsDeprecated\";\r\nimport { Initialization as ApplicationInsights } from \"./Initialization\";\r\nvar ApplicationInsightsContainer = /** @class */ (function () {\r\n    function ApplicationInsightsContainer() {\r\n    }\r\n    ApplicationInsightsContainer.getAppInsights = function (snippet, version) {\r\n        var initialization = new ApplicationInsights(snippet);\r\n        var legacyMode = version !== 2.0 ? true : false;\r\n        // Two target scenarios:\r\n        // 1. Customer runs v1 snippet + runtime. If customer updates just cdn location to new SDK, it will run in compat mode so old apis work\r\n        // 2. Customer updates to new snippet (that uses cdn location to new SDK. This is same as a new customer onboarding\r\n        // and all api signatures are expected to map to new SDK. Note new snippet specifies version\r\n        if (version === 2.0) {\r\n            initialization.updateSnippetDefinitions(snippet);\r\n            initialization.loadAppInsights(legacyMode);\r\n            return initialization; // default behavior with new snippet\r\n        }\r\n        else {\r\n            var legacy = new AppInsightsDeprecated(snippet, initialization); // target scenario old snippet + updated endpoint\r\n            legacy.updateSnippetDefinitions(snippet);\r\n            initialization.loadAppInsights(legacyMode);\r\n            return legacy;\r\n        }\r\n    };\r\n    return ApplicationInsightsContainer;\r\n}());\r\nexport { ApplicationInsightsContainer };\r\n//# sourceMappingURL=ApplicationInsightsContainer.js.map"],"names":["EventsDiscardedReason","CoreUtils","isNullOrUndefined","input","disableCookies","_canUseCookies","newGuid","replace","GuidRegex","c","r","Math","random","toString","ChannelController","prototype","processTelemetry","item","this","channelQueue","forEach","queues","length","Object","defineProperty","get","enumerable","configurable","initialize","config","core","extensions","invalidChannelIdentifier_1","_this","isCookieUseDisabled","Array","channels","queue","sort","a","b","priority","i","setNextPlugin","queueItem","identifier","Error","push","arr","plugin","BaseCore","logger","notificationManager","_isInitialized","instrumentationKey","_notificationManager","create","addNotificationListener","listener","removeNotificationListener","eventsSent","events","eventsDiscarded","reason","extensionConfig","NotificationManager","throwInternal","severity","msgId","msg","properties","isUserAct","warnToConsole","message","resetInternalMessageCount","_a","_extensions","apply","concat","extension","isValid","_channelController","extA","extB","typeExtA","typeExtB","ext","t","idx","curr","splice","getTransmissionControls","ChannelControls","track","telemetryItem","iKey","time","Date","toISOString","ver","LoggingSeverity","listeners","index","indexOf","_loop_1","this_1","setTimeout","_loop_2","this_2","_InternalMessageId","BrowserDoesNotSupportLocalStorage","BrowserCannotReadLocalStorage","BrowserCannotReadSessionStorage","BrowserCannotWriteLocalStorage","BrowserCannotWriteSessionStorage","BrowserFailedRemovalFromLocalStorage","BrowserFailedRemovalFromSessionStorage","CannotSendEmptyTelemetry","ClientPerformanceMathError","ErrorParsingAISessionCookie","ErrorPVCalc","ExceptionWhileLoggingError","FailedAddingTelemetryToBuffer","FailedMonitorAjaxAbort","FailedMonitorAjaxDur","FailedMonitorAjaxOpen","FailedMonitorAjaxRSC","FailedMonitorAjaxSend","FailedMonitorAjaxGetCorrelationHeader","FailedToAddHandlerForOnBeforeUnload","FailedToSendQueuedTelemetry","FailedToReportDataLoss","FlushFailed","MessageLimitPerPVExceeded","MissingRequiredFieldSpecification","NavigationTimingNotSupported","OnError","SessionRenewalDateIsZero","SenderNotInitialized","StartTrackEventFailed","StopTrackEventFailed","StartTrackFailed","StopTrackFailed","TelemetrySampledAndNotSent","TrackEventFailed","TrackExceptionFailed","TrackMetricFailed","TrackPVFailed","TrackPVFailedCalc","TrackTraceFailed","TransmissionFailed","FailedToSetStorageBuffer","FailedToRestoreStorageBuffer","InvalidBackendResponse","FailedToFixDepricatedValues","InvalidDurationValue","TelemetryEnvelopeInvalid","CreateEnvelopeError","CannotSerializeObject","CannotSerializeObjectNonSerializable","CircularReferenceDetected","ClearAuthContextFailed","ExceptionTruncated","IllegalCharsInName","ItemNotInArray","MaxAjaxPerPVExceeded","MessageTruncated","NameTooLong","SampleRateOutOfRange","SetAuthContextFailed","SetAuthContextFailedAccountName","StringValueTooLong","StartCalledMoreThanOnce","StopCalledWithoutStart","TelemetryInitializerFailed","TrackArgumentsNotSpecified","UrlTooLong","SessionStorageBufferFull","CannotAccessCookie","IdTooLong","InvalidEvent","FailedMonitorAjaxSetRequestHeader","SendBrowserInfoOnUserInit","_InternalLogMessage","sanitizeDiagnosticText","text","dataType","AiNonUserActionablePrefix","AiUserActionablePrefix","messageId","diagnosticText","JSON","stringify","DiagnosticLogger","enableDebugExceptions","messageKey","_messageLogged","consoleLoggingLevel","WARNING","logInternalMessage","console","warn","log","_messageCount","_areInternalMessagesThrottled","logMessage","AIInternalMessagePrefix","telemetryLoggingLevel","maxInternalMessageLimit","throttleLimitMessage","throttleMessage","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","AppInsightsCore","baseCore","_notifyInvalidEvent","_validateTelemetryItem","pollInternalLogs","eventName","interval","diagnosticLogInterval","setInterval","name","baseType","baseData","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","StorageType","FieldType","DistributedTracingModes","__assign","assign","s","n","arguments","call","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","traceParentHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","DataSanitizer","sanitizeKeyAndAddUniqueness","key","map","origLength","field","sanitizeKey","uniqueField","undefined","substring","MAX_NAME_LENGTH","padNumber","nameTrunc","trim","sanitizeString","value","maxLength","valueTrunc","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","messageTrunc","MAX_MESSAGE_LENGTH","sanitizeException","exception","exceptionTrunc","MAX_EXCEPTION_LENGTH","sanitizeProperties","tempProps","prop","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","inputTrunc","data","num","substr","str","Util","createDomEvent","event","Event","document","createEvent","initEvent","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","canUseCookies","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","random32","generateW3CId","tmp","hexValues","oct","clockSequenceHi","isArray","obj","isError","isDate","toISOStringForIE8","date","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","getExtension","extIx","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","host","parseHost","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","match","CorrelationIdHelper","canIncludeCorrelationHeader","requestUrl","currentHost","disableCorrelationHeaders","requestHost","enableCorsCorrelation","matchExists_1","includedDomains","correlationHeaderDomains","regex","RegExp","test","excludedDomains","correlationHeaderExcludedDomains","getCorrelationContext","responseHeader","correlationId","getCorrelationContextValue","correlationIdPrefix","keyValues","keyValue","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","_super","DisabledPropertyName","ProcessLegacy","HttpMethod","Data","tslib_1.__extends","Envelope","sampleRate","tags","aiDataContract","Required","Hidden","Domain","EventData","envelopeType","Default","StackFrame","ExceptionData","exceptions","ExceptionDetails","hasFullStack","parsedStack","Exception","CreateFromInterface","ex","_ExceptionDetails","tslib_1.__assign","toInterface","severityLevel","problemGroup","isManual","CreateSimpleException","typeName","assembly","fileName","details","line","frame","outerId","_StackFrame","parseStack","frames_1","level","totalSizeInBytes","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","baseSize","sourceFrame","matches","DataPointType","MetricData","metrics","DataPoint","kind","Measurement","count","max","stdDev","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","GeneratedRemoteDependencyData","resultCode","requestAPI","correlationContext","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","MessageData","Trace","PageViewPerfData","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","SeverityLevel","AIData","ConfigurationManager","getConfig","configValue","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","TelemetryItemCreator","envelopeName","customProperties","systemProperties","Extensions","UserExt","DeviceExt","TraceExt","WebExt","AppExt","OSExt","SessionExt","SDKExt","CtxTagKeys","PropertiesPluginIdentifier","BreezeChannelIdentifier","PageViewManager","trackPageView","pageView","title","uri","_pageViewPerformanceManager","isPerformanceTimingSupported","appInsights","sendPageViewInternal","_channel","q","flush","_logger","customDuration","pageViewSent","getPerformanceTiming","shouldCollectDuration","overridePageViewDuration","handle","isPerformanceTimingDataReady","clearInterval","pageViewPerformance","populatePageViewPerformanceEvent","pageViewPerformanceSent","sendPageViewPerformanceInternal","CRITICAL","pageViewPerformanceManager","PageVisitTimeManager","trackPreviousPageVisit","currentPageName","currentPageUrl","prevPageVisitTimeData","restartPageVisitTimer","pageVisitTimeTrackingHandler","pageName","pageUrl","pageVisitTime","prevPageVisitData","stopPageVisitTimer","startPageVisitTimer","prevPageVisitDataKeyName","currPageVisitData","PageVisitData","currPageVisitDataStr","pageVisitEndTime","pageVisitDataJsonStr","parse","pageVisitStartTime","PageViewPerformanceManager","navigationTiming","getPerformanceNavigationTiming","total","network","startTime","connectEnd","request","requestStart","responseStart","response","responseEnd","dom","loadEventEnd","isPerformanceNavigationTimingSupported","getEntriesByType","domainLookupStart","domLoading","durations","_i","botAgentNames","isGoogleBot","MAX_DURATION_ALLOWED","durationProperty","ApplicationInsights","getDefaultConfig","sessionRenewalMs","sessionExpirationMs","disableExceptionTracking","autoTrackPageVisitTime","samplingPercentage","isStorageUseDisabled","isBrowserLinkTrackingEnabled","enableAutoRouteTracking","namePrefix","env","doNotSendItem","telemetryInitializersCount","_telemetryInitializers","telemetryInitializer","_nextPlugin","next","trackEvent","EventTelemetry","startTrackEvent","_eventTracking","stopTrackEvent","stop","trackTrace","trace","trackMetric","metric","inPv","_pageViewManager","_pageVisitTimeManager","refUri","referrer","_trackAjaxAttempts","trackPageViewPerformance","startTrackPage","_pageTracking","stopTrackPage","measurement","sendExceptionInternal","exceptionPartB","trackException","_onerror","properties_1","URL","_sendCORSException","errorString","addTelemetryInitializer","_initialize","_globalconfig","defaults","configGetters","accountId","cookieDomain","sdkExtension","appId","trackPageVisitTime","_addDefaultTelemetryInitializers","Timing","action","pageViewItem","f","instance","autoExceptionInstrumented","originalOnError_1","onerror","handled","history","pushState","replaceState","_self_1","_properties","ret","dispatchEvent","context","telemetryTrace","traceID","_currUri","_prevUri","bind","autoRoutePVDelay","PageName","PageUrl","average","sampleCount","browserLinkPaths_1","_addTelemetryInitializer","envelope","remoteData","Version","_events","_name","ArraySendBuffer","enqueue","payload","_buffer","clear","getItems","batchPayloads","_config","emitLineDelimitedJson","join","markAsSent","clearSent","SessionStorageSendBuffer","MAX_BUFFER_SIZE","_bufferFullMessageSent","setBuffer","BUFFER_KEY","SENT_BUFFER_KEY","removePayloadsFromBuffer","sentElements","getBuffer","payloads","buffer","remaining","contains","j","prefixedKey","bufferJson","bufferItems","notDeliveredItems","EnvelopeCreator","extractProperties","extractPropsAndMeasurements","createEnvelope","iKeyNoDashes","extractPartAExtensions","user","authId","localId","app","sesId","device","deviceClass","ip","web","browserLang","browserVer","browser","screenRes","userConsent","model","os","parentID","tgs","tg","DependencyEnvelopeCreator","Create","customMeasurements","bd","command","responseCode","EventEnvelopeCreator","ExceptionEnvelopeCreator","MetricEnvelopeCreator","props","PageViewEnvelopeCreator","currentContextId","pageType","isLoggedIn","pageTags","PageViewPerformanceEnvelopeCreator","TraceEnvelopeCreator","Serializer","serialize","output","_serializeObject","source","circularReferenceCheck","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isPresent","isObject","sources","expectedType","parseFloat","OfflineListener","_onlineStatus","isListening","_setOnline","_setOffline","body","ononline","onoffline","Offline","isOnline","onLine","isOffline","HashCodeScoreGenerator","getHashCodeScore","getHashCode","INT_MAX_VALUE","MIN_INPUT_LENGTH","hash","charCodeAt","abs","SamplingScoreGenerator","getSamplingScore","hashCodeGeneragor","Sample","isSampledIn","samplingScoreGenerator","samplingRate","Sender","constructEnvelope","orig","_getDefaultAppInsightsChannelConfig","maxBatchInterval","maxBatchSizeInBytes","disableTelemetry","enableSessionStorageBuffer","isRetryDisabled","isBeaconApiDisabled","onunloadDisableBeacon","_getEmptyAppInsightsChannelConfig","pause","resume","triggerSend","onunloadFlush","_beaconSender","teardown","_serializer","_consecutiveErrors","_retryAt","_lastSend","_sender","defaultConfig","_sample","XMLHttpRequest","_xhrSender","_XMLHttpRequestSupported","XDomainRequest","_xdrSender","_isSampledIn","SampleRate","aiEnvelope_1","doNotSendItem_1","callBack","bufferPayload","batch","_setupTimer","_xhrReadyStateChange","xhr","countOfItemsInPayload","readyState","_appId","_parseResponse","responseText","status","_isRetriable","_resendPayload","_onError","_formatErrorMessageXhr","_onPartialSuccess","_onSuccess","async","forcedSender","clearTimeout","_timeoutHandle","results","failed","retry","errors_1","errors","reverse","extracted","statusCode","itemsAccepted","itemsReceived","_xdrOnLoad","xdr","_formatErrorMessageXdr","isAsync","plainTextBatch","Blob","open","setRequestHeader","onreadystatechange","send","linearFactor","payload_1","_setRetryTime","delayInSeconds","backOffSlot","pow","backOffDelay","retryAfterTimeSpan","retryInterval","timerValue","onload","hostingProtocol","lastIndexOf","Session","_SessionManager","update","automaticSession","initializeAutomaticSession","acquisitionExpired","acquisitionDate","renewalExpired","renewalDate","renew","cookieUpdatedTimestamp","cookieUpdateInterval","backup","_storageNamePrefix","initializeAutomaticSessionWithData","sessionData","params","acq","renewal","guid","acquisitionExpiry","renewalExpiry","cookieExpiry","setTime","cookieDomnain","toUTCString","acquisitionSpan","renewalSpan","cookieNameConst","Application","Device","Internal","sdkVersion","User","setAuthenticatedUserContext","authenticatedUserId","storeInCookie","validateUserInput","authenticatedId","authCookie","cookieSeparator","authUserCookieName","encodeURI","clearAuthenticatedUserContext","userCookieName","isNewUser","acqStr","accountAcquisitionDate","newCookie","name_1","authCookieString","decodeURI","Location","TelemetryTrace","parentId","TelemetryContext","applySessionContext","sessionContext","session","sessionManager","applyOperatingSystemContxt","applyApplicationContext","application","build","applyDeviceContext","applyInternalContext","internal","agentVersion","applyLocationContext","applyOperationContext","applyWebContext","applyUserContext","cleanUp","PropertiesPlugin","_extensionConfig","_breezeChannel","_processTelemetryInternal","nextPlugin","XHRMonitoringState","openDone","setRequestHeaderDone","sendDone","abortDone","onreadystatechangeCallbackAttached","ajaxRecord","spanID","completed","requestHeadersSize","requestHeaders","ttfb","responseReceivingDuration","callbackDuration","ajaxTotalDuration","aborted","requestSize","requestSentTime","responseStartedTime","responseFinishedTime","callbackFinishedTime","endTime","originalOnreadystatechage","xhrMonitoringState","clientFailure","CalculateMetrics","EventHelper","AttachEvent","eventNameWithoutOn","handlerRef","attachEvent","DetachEvent","detachEvent","removeEventListener","Traceparent","isValidTraceId","isValidSpanId","version","traceId","spanId","traceFlag","DEFAULT_TRACE_FLAG","DEFAULT_VERSION","AjaxMonitor","maxAjaxCallsPerView","disableAjaxTracking","disableFetchTracking","distributedTracingMode","AI","enableRequestHeaderTracking","enableResponseHeaderTracking","getEmptyConfig","getFailedAjaxDiagnosticsMessage","ajaxData","trackDependencyData","dependency","trackDependencyDataInternal","includeCorrelationHeaders","init","currentWindowHost","headers","Headers","Request","_isUsingAIHeaders","set","_context","_isUsingW3CHeaders","traceparent","initialized","_fetchInitialized","_core","AI_AND_W3C","W3C","instrumentXhr","instrumentFetch","propExt","supportsFetch","originalFetch","fetch","fetchMonitorInstance","fetchData","isFetchInstrumented","isMonitoredInstance","createFetchRecord","ajaxDiagnosticsMessage","getFailedFetchDiagnosticsMessage","then","onFetchComplete","catch","onFetchFailed","supportsAjaxMonitoring","instrumentOpen","instrumentSend","instrumentAbort","instrumentSetRequestHeader","excludeAjaxDataValidation","disabledProperty","ajaxValidation","abort","originalOpen","ajaxMonitorInstance","openHandler","attachToOnReadyStateChange","originalSend","content","sendHandler","originalAbort","originalSetRequestHeader","header","onAjaxComplete","exceptionText","getAjaxCorrelationContext","getAllResponseHeaders","responseHeaderMap_1","parts","shift","responseHeaders","responseHeadersString","getResponseHeader","fetchDiagnosticsMessage","getFetchCorrelationContext","responseHeaderMap_2","Initialization","inPvp","dependencies","channel","loadAppInsights","legacyMode","appInsightsChannel","emptyQueue","addHousekeepingBeforeUnload","updateSnippetDefinitions","snippet","length_1","appInsightsInstance","disableFlushOnBeforeUnload","_sessionManager","getSKUDefaults","DependenciesPlugin","AppInsightsDeprecated","enableDebug","verboseLogging","addTelemetryInitializers","_hasLegacyInitializers","appInsightsNew","_processLegacyInitializers","_queue","telemetry","trackDependency","totalTime","handledAt","downloadAndSetup","originalTrackPageView_1","pagePath","legacyPageView","legacyEvent","ApplicationInsightsContainer","getAppInsights","initialization","legacy"],"mappings":"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"}